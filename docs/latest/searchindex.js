Search.setIndex({"alltitles": {"API": [[75, null]], "Contents:": [[76, null]], "Installation": [[1, "gettingstarted"], [77, "gettingstarted"]], "Parameters:": [[4, "parameters"], [4, "id1"], [4, "id2"]], "Returns:": [[4, "returns"]], "Usage": [[1, null], [77, null]], "Welcome to LLaMBDA\u2019s documentation!": [[0, null], [76, null]], "llambda.auto": [[2, null]], "llambda.auto.auto": [[3, null]], "llambda.auto.auto.AutoEval": [[4, null]], "llambda.constants": [[5, null]], "llambda.constants.cost_data": [[6, null]], "llambda.constants.word_lists": [[7, null]], "llambda.generator": [[8, null]], "llambda.generator.counterfactual": [[9, null]], "llambda.generator.counterfactual.CounterfactualGenerator": [[10, null]], "llambda.generator.generator": [[11, null]], "llambda.generator.generator.ResponseGenerator": [[12, null]], "llambda.metrics": [[13, null]], "llambda.metrics.classification": [[14, null]], "llambda.metrics.classification.classification": [[15, null]], "llambda.metrics.classification.classification.ClassificationMetrics": [[16, null]], "llambda.metrics.classification.metrics": [[17, null]], "llambda.metrics.classification.metrics.baseclass": [[18, null]], "llambda.metrics.classification.metrics.baseclass.metrics": [[19, null]], "llambda.metrics.classification.metrics.baseclass.metrics.Metric": [[20, null]], "llambda.metrics.classification.metrics.false_discovery": [[21, null]], "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[22, null]], "llambda.metrics.classification.metrics.false_negative": [[23, null]], "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[24, null]], "llambda.metrics.classification.metrics.false_omission": [[25, null]], "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[26, null]], "llambda.metrics.classification.metrics.false_positive": [[27, null]], "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[28, null]], "llambda.metrics.classification.metrics.predicted_prevalence": [[29, null]], "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[30, null]], "llambda.metrics.counterfactual": [[31, null]], "llambda.metrics.counterfactual.counterfactual": [[32, null]], "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[33, null]], "llambda.metrics.counterfactual.metrics": [[34, null]], "llambda.metrics.counterfactual.metrics.baseclass": [[35, null]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[36, null]], "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[37, null]], "llambda.metrics.counterfactual.metrics.bleu": [[38, null]], "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[39, null]], "llambda.metrics.counterfactual.metrics.cosine": [[40, null]], "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[41, null]], "llambda.metrics.counterfactual.metrics.rougel": [[42, null]], "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[43, null]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[44, null]], "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[45, null]], "llambda.metrics.recommendation": [[46, null]], "llambda.metrics.recommendation.metrics": [[47, null]], "llambda.metrics.recommendation.metrics.baseclass": [[48, null]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[49, null]], "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric": [[50, null]], "llambda.metrics.recommendation.metrics.jaccard": [[51, null]], "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[52, null]], "llambda.metrics.recommendation.metrics.prag": [[53, null]], "llambda.metrics.recommendation.metrics.prag.PRAG": [[54, null]], "llambda.metrics.recommendation.metrics.serp": [[55, null]], "llambda.metrics.recommendation.metrics.serp.SERP": [[56, null]], "llambda.metrics.recommendation.recommendation": [[57, null]], "llambda.metrics.recommendation.recommendation.RecommendationMetrics": [[58, null]], "llambda.metrics.stereotype": [[59, null]], "llambda.metrics.stereotype.metrics": [[60, null]], "llambda.metrics.stereotype.metrics.associations": [[61, null]], "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[62, null]], "llambda.metrics.stereotype.metrics.baseclass": [[63, null]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[64, null]], "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric": [[65, null]], "llambda.metrics.stereotype.metrics.classifier": [[66, null]], "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[67, null]], "llambda.metrics.stereotype.metrics.cooccurrence": [[68, null]], "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[69, null]], "llambda.metrics.stereotype.stereotype": [[70, null]], "llambda.metrics.stereotype.stereotype.StereotypeMetrics": [[71, null]], "llambda.metrics.toxicity": [[72, null]], "llambda.metrics.toxicity.toxicity": [[73, null]], "llambda.metrics.toxicity.toxicity.ToxicityMetrics": [[74, null]]}, "docnames": [".ipynb_checkpoints/index-checkpoint", ".ipynb_checkpoints/usage-checkpoint", "_autosummary/llambda.auto", "_autosummary/llambda.auto.auto", "_autosummary/llambda.auto.auto.AutoEval", "_autosummary/llambda.constants", "_autosummary/llambda.constants.cost_data", "_autosummary/llambda.constants.word_lists", "_autosummary/llambda.generator", "_autosummary/llambda.generator.counterfactual", "_autosummary/llambda.generator.counterfactual.CounterfactualGenerator", "_autosummary/llambda.generator.generator", "_autosummary/llambda.generator.generator.ResponseGenerator", "_autosummary/llambda.metrics", "_autosummary/llambda.metrics.classification", "_autosummary/llambda.metrics.classification.classification", "_autosummary/llambda.metrics.classification.classification.ClassificationMetrics", "_autosummary/llambda.metrics.classification.metrics", "_autosummary/llambda.metrics.classification.metrics.baseclass", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.classification.metrics.false_discovery", "_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "_autosummary/llambda.metrics.classification.metrics.false_negative", "_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "_autosummary/llambda.metrics.classification.metrics.false_omission", "_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "_autosummary/llambda.metrics.classification.metrics.false_positive", "_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "_autosummary/llambda.metrics.counterfactual", "_autosummary/llambda.metrics.counterfactual.counterfactual", "_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "_autosummary/llambda.metrics.counterfactual.metrics", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.counterfactual.metrics.bleu", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.cosine", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.rougel", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "_autosummary/llambda.metrics.recommendation", "_autosummary/llambda.metrics.recommendation.metrics", "_autosummary/llambda.metrics.recommendation.metrics.baseclass", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.recommendation.metrics.jaccard", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "_autosummary/llambda.metrics.recommendation.metrics.prag", "_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG", "_autosummary/llambda.metrics.recommendation.metrics.serp", "_autosummary/llambda.metrics.recommendation.metrics.serp.SERP", "_autosummary/llambda.metrics.recommendation.recommendation", "_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics", "_autosummary/llambda.metrics.stereotype", "_autosummary/llambda.metrics.stereotype.metrics", "_autosummary/llambda.metrics.stereotype.metrics.associations", "_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "_autosummary/llambda.metrics.stereotype.metrics.baseclass", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.stereotype.metrics.classifier", "_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "_autosummary/llambda.metrics.stereotype.stereotype", "_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics", "_autosummary/llambda.metrics.toxicity", "_autosummary/llambda.metrics.toxicity.toxicity", "_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics", "api", "index", "usage"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": [".ipynb_checkpoints/index-checkpoint.rst", ".ipynb_checkpoints/usage-checkpoint.rst", "_autosummary/llambda.auto.rst", "_autosummary/llambda.auto.auto.rst", "_autosummary/llambda.auto.auto.AutoEval.rst", "_autosummary/llambda.constants.rst", "_autosummary/llambda.constants.cost_data.rst", "_autosummary/llambda.constants.word_lists.rst", "_autosummary/llambda.generator.rst", "_autosummary/llambda.generator.counterfactual.rst", "_autosummary/llambda.generator.counterfactual.CounterfactualGenerator.rst", "_autosummary/llambda.generator.generator.rst", "_autosummary/llambda.generator.generator.ResponseGenerator.rst", "_autosummary/llambda.metrics.rst", "_autosummary/llambda.metrics.classification.rst", "_autosummary/llambda.metrics.classification.classification.rst", "_autosummary/llambda.metrics.classification.classification.ClassificationMetrics.rst", "_autosummary/llambda.metrics.classification.metrics.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.classification.metrics.false_discovery.rst", "_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_negative.rst", "_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_omission.rst", "_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_positive.rst", "_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.rst", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", "_autosummary/llambda.metrics.counterfactual.rst", "_autosummary/llambda.metrics.counterfactual.counterfactual.rst", "_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.rst", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.rst", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.rst", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", "_autosummary/llambda.metrics.recommendation.rst", "_autosummary/llambda.metrics.recommendation.metrics.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.rst", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", "_autosummary/llambda.metrics.recommendation.metrics.prag.rst", "_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG.rst", "_autosummary/llambda.metrics.recommendation.metrics.serp.rst", "_autosummary/llambda.metrics.recommendation.metrics.serp.SERP.rst", "_autosummary/llambda.metrics.recommendation.recommendation.rst", "_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics.rst", "_autosummary/llambda.metrics.stereotype.rst", "_autosummary/llambda.metrics.stereotype.metrics.rst", "_autosummary/llambda.metrics.stereotype.metrics.associations.rst", "_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.stereotype.metrics.classifier.rst", "_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.rst", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", "_autosummary/llambda.metrics.stereotype.stereotype.rst", "_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics.rst", "_autosummary/llambda.metrics.toxicity.rst", "_autosummary/llambda.metrics.toxicity.toxicity.rst", "_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics.rst", "api.rst", "index.rst", "usage.rst"], "indexentries": {"__init__() (llambda.auto.auto.autoeval method)": [[4, "llambda.auto.auto.AutoEval.__init__", false]], "__init__() (llambda.generator.counterfactual.counterfactualgenerator method)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator.__init__", false]], "__init__() (llambda.generator.generator.responsegenerator method)": [[12, "llambda.generator.generator.ResponseGenerator.__init__", false]], "__init__() (llambda.metrics.classification.classification.classificationmetrics method)": [[16, "llambda.metrics.classification.classification.ClassificationMetrics.__init__", false]], "__init__() (llambda.metrics.classification.metrics.baseclass.metrics.metric method)": [[20, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[22, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[24, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[26, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[28, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[30, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false]], "__init__() (llambda.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[33, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[37, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[39, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[41, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[43, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[45, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[50, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[52, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.prag.prag method)": [[54, "llambda.metrics.recommendation.metrics.prag.PRAG.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.serp.serp method)": [[56, "llambda.metrics.recommendation.metrics.serp.SERP.__init__", false]], "__init__() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[58, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[62, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[65, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[67, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[69, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.__init__", false]], "__init__() (llambda.metrics.stereotype.stereotype.stereotypemetrics method)": [[71, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.__init__", false]], "__init__() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[74, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.__init__", false]], "autoeval (class in llambda.auto.auto)": [[4, "llambda.auto.auto.AutoEval", false]], "bleusimilarity (class in llambda.metrics.counterfactual.metrics.bleu)": [[39, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", false]], "classificationmetrics (class in llambda.metrics.classification.classification)": [[16, "llambda.metrics.classification.classification.ClassificationMetrics", false]], "cooccurrencebiasmetric (class in llambda.metrics.stereotype.metrics.cooccurrence)": [[69, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", false]], "cosinesimilarity (class in llambda.metrics.counterfactual.metrics.cosine)": [[41, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", false]], "cost_mapping (llambda.generator.generator.responsegenerator attribute)": [[12, "llambda.generator.generator.ResponseGenerator.cost_mapping", false]], "counterfactualgenerator (class in llambda.generator.counterfactual)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator", false]], "counterfactualmetrics (class in llambda.metrics.counterfactual.counterfactual)": [[33, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", false]], "create_prompts() (llambda.generator.counterfactual.counterfactualgenerator method)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator.create_prompts", false]], "estimate_token_cost() (llambda.generator.counterfactual.counterfactualgenerator method)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false]], "estimate_token_cost() (llambda.generator.generator.responsegenerator method)": [[12, "llambda.generator.generator.ResponseGenerator.estimate_token_cost", false]], "evaluate() (llambda.auto.auto.autoeval method)": [[4, "llambda.auto.auto.AutoEval.evaluate", false]], "evaluate() (llambda.metrics.classification.classification.classificationmetrics method)": [[16, "llambda.metrics.classification.classification.ClassificationMetrics.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.baseclass.metrics.metric method)": [[20, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[22, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[24, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[26, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[28, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[30, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[33, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[37, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[39, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[41, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[43, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[45, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[50, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[52, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.prag.prag method)": [[54, "llambda.metrics.recommendation.metrics.prag.PRAG.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.serp.serp method)": [[56, "llambda.metrics.recommendation.metrics.serp.SERP.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[62, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[65, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[67, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[69, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.evaluate", false]], "evaluate() (llambda.metrics.stereotype.stereotype.stereotypemetrics method)": [[71, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.evaluate", false]], "evaluate() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[74, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.evaluate", false]], "evaluate_against_neutral() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[58, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_against_neutral", false]], "evaluate_pairwise() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[58, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_pairwise", false]], "export_results() (llambda.auto.auto.autoeval method)": [[4, "llambda.auto.auto.AutoEval.export_results", false]], "falsediscoveryrateparity (class in llambda.metrics.classification.metrics.false_discovery)": [[22, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false]], "falsenegativerateparity (class in llambda.metrics.classification.metrics.false_negative)": [[24, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false]], "falseomissionrateparity (class in llambda.metrics.classification.metrics.false_omission)": [[26, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false]], "falsepositiverateparity (class in llambda.metrics.classification.metrics.false_positive)": [[28, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false]], "generate_responses() (llambda.generator.counterfactual.counterfactualgenerator method)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator.generate_responses", false]], "generate_responses() (llambda.generator.generator.responsegenerator method)": [[12, "llambda.generator.generator.ResponseGenerator.generate_responses", false]], "get_stereotype_scores() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[67, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.get_stereotype_scores", false]], "get_toxicity_scores() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[74, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.get_toxicity_scores", false]], "jaccardsimilarity (class in llambda.metrics.recommendation.metrics.jaccard)": [[52, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", false]], "llambda.auto": [[2, "module-llambda.auto", false]], "llambda.auto.auto": [[3, "module-llambda.auto.auto", false]], "llambda.constants": [[5, "module-llambda.constants", false]], "llambda.constants.cost_data": [[6, "module-llambda.constants.cost_data", false]], "llambda.constants.word_lists": [[7, "module-llambda.constants.word_lists", false]], "llambda.generator": [[8, "module-llambda.generator", false]], "llambda.generator.counterfactual": [[9, "module-llambda.generator.counterfactual", false]], "llambda.generator.generator": [[11, "module-llambda.generator.generator", false]], "llambda.metrics": [[13, "module-llambda.metrics", false]], "llambda.metrics.classification": [[14, "module-llambda.metrics.classification", false]], "llambda.metrics.classification.classification": [[15, "module-llambda.metrics.classification.classification", false]], "llambda.metrics.classification.metrics": [[17, "module-llambda.metrics.classification.metrics", false]], "llambda.metrics.classification.metrics.baseclass": [[18, "module-llambda.metrics.classification.metrics.baseclass", false]], "llambda.metrics.classification.metrics.baseclass.metrics": [[19, "module-llambda.metrics.classification.metrics.baseclass.metrics", false]], "llambda.metrics.classification.metrics.false_discovery": [[21, "module-llambda.metrics.classification.metrics.false_discovery", false]], "llambda.metrics.classification.metrics.false_negative": [[23, "module-llambda.metrics.classification.metrics.false_negative", false]], "llambda.metrics.classification.metrics.false_omission": [[25, "module-llambda.metrics.classification.metrics.false_omission", false]], "llambda.metrics.classification.metrics.false_positive": [[27, "module-llambda.metrics.classification.metrics.false_positive", false]], "llambda.metrics.classification.metrics.predicted_prevalence": [[29, "module-llambda.metrics.classification.metrics.predicted_prevalence", false]], "llambda.metrics.counterfactual": [[31, "module-llambda.metrics.counterfactual", false]], "llambda.metrics.counterfactual.counterfactual": [[32, "module-llambda.metrics.counterfactual.counterfactual", false]], "llambda.metrics.counterfactual.metrics": [[34, "module-llambda.metrics.counterfactual.metrics", false]], "llambda.metrics.counterfactual.metrics.baseclass": [[35, "module-llambda.metrics.counterfactual.metrics.baseclass", false]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[36, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false]], "llambda.metrics.counterfactual.metrics.bleu": [[38, "module-llambda.metrics.counterfactual.metrics.bleu", false]], "llambda.metrics.counterfactual.metrics.cosine": [[40, "module-llambda.metrics.counterfactual.metrics.cosine", false]], "llambda.metrics.counterfactual.metrics.rougel": [[42, "module-llambda.metrics.counterfactual.metrics.rougel", false]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[44, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false]], "llambda.metrics.recommendation": [[46, "module-llambda.metrics.recommendation", false]], "llambda.metrics.recommendation.metrics": [[47, "module-llambda.metrics.recommendation.metrics", false]], "llambda.metrics.recommendation.metrics.baseclass": [[48, "module-llambda.metrics.recommendation.metrics.baseclass", false]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[49, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false]], "llambda.metrics.recommendation.metrics.jaccard": [[51, "module-llambda.metrics.recommendation.metrics.jaccard", false]], "llambda.metrics.recommendation.metrics.prag": [[53, "module-llambda.metrics.recommendation.metrics.prag", false]], "llambda.metrics.recommendation.metrics.serp": [[55, "module-llambda.metrics.recommendation.metrics.serp", false]], "llambda.metrics.recommendation.recommendation": [[57, "module-llambda.metrics.recommendation.recommendation", false]], "llambda.metrics.stereotype": [[59, "module-llambda.metrics.stereotype", false]], "llambda.metrics.stereotype.metrics": [[60, "module-llambda.metrics.stereotype.metrics", false]], "llambda.metrics.stereotype.metrics.associations": [[61, "module-llambda.metrics.stereotype.metrics.associations", false]], "llambda.metrics.stereotype.metrics.baseclass": [[63, "module-llambda.metrics.stereotype.metrics.baseclass", false]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[64, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false]], "llambda.metrics.stereotype.metrics.classifier": [[66, "module-llambda.metrics.stereotype.metrics.classifier", false]], "llambda.metrics.stereotype.metrics.cooccurrence": [[68, "module-llambda.metrics.stereotype.metrics.cooccurrence", false]], "llambda.metrics.stereotype.stereotype": [[70, "module-llambda.metrics.stereotype.stereotype", false]], "llambda.metrics.toxicity": [[72, "module-llambda.metrics.toxicity", false]], "llambda.metrics.toxicity.toxicity": [[73, "module-llambda.metrics.toxicity.toxicity", false]], "metric (class in llambda.metrics.classification.metrics.baseclass.metrics)": [[20, "llambda.metrics.classification.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.counterfactual.metrics.baseclass.metrics)": [[37, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.recommendation.metrics.baseclass.metrics)": [[50, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.stereotype.metrics.baseclass.metrics)": [[65, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", false]], "module": [[2, "module-llambda.auto", false], [3, "module-llambda.auto.auto", false], [5, "module-llambda.constants", false], [6, "module-llambda.constants.cost_data", false], [7, "module-llambda.constants.word_lists", false], [8, "module-llambda.generator", false], [9, "module-llambda.generator.counterfactual", false], [11, "module-llambda.generator.generator", false], [13, "module-llambda.metrics", false], [14, "module-llambda.metrics.classification", false], [15, "module-llambda.metrics.classification.classification", false], [17, "module-llambda.metrics.classification.metrics", false], [18, "module-llambda.metrics.classification.metrics.baseclass", false], [19, "module-llambda.metrics.classification.metrics.baseclass.metrics", false], [21, "module-llambda.metrics.classification.metrics.false_discovery", false], [23, "module-llambda.metrics.classification.metrics.false_negative", false], [25, "module-llambda.metrics.classification.metrics.false_omission", false], [27, "module-llambda.metrics.classification.metrics.false_positive", false], [29, "module-llambda.metrics.classification.metrics.predicted_prevalence", false], [31, "module-llambda.metrics.counterfactual", false], [32, "module-llambda.metrics.counterfactual.counterfactual", false], [34, "module-llambda.metrics.counterfactual.metrics", false], [35, "module-llambda.metrics.counterfactual.metrics.baseclass", false], [36, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false], [38, "module-llambda.metrics.counterfactual.metrics.bleu", false], [40, "module-llambda.metrics.counterfactual.metrics.cosine", false], [42, "module-llambda.metrics.counterfactual.metrics.rougel", false], [44, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false], [46, "module-llambda.metrics.recommendation", false], [47, "module-llambda.metrics.recommendation.metrics", false], [48, "module-llambda.metrics.recommendation.metrics.baseclass", false], [49, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false], [51, "module-llambda.metrics.recommendation.metrics.jaccard", false], [53, "module-llambda.metrics.recommendation.metrics.prag", false], [55, "module-llambda.metrics.recommendation.metrics.serp", false], [57, "module-llambda.metrics.recommendation.recommendation", false], [59, "module-llambda.metrics.stereotype", false], [60, "module-llambda.metrics.stereotype.metrics", false], [61, "module-llambda.metrics.stereotype.metrics.associations", false], [63, "module-llambda.metrics.stereotype.metrics.baseclass", false], [64, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false], [66, "module-llambda.metrics.stereotype.metrics.classifier", false], [68, "module-llambda.metrics.stereotype.metrics.cooccurrence", false], [70, "module-llambda.metrics.stereotype.stereotype", false], [72, "module-llambda.metrics.toxicity", false], [73, "module-llambda.metrics.toxicity.toxicity", false]], "neutralize_tokens() (llambda.generator.counterfactual.counterfactualgenerator method)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false]], "parse_texts() (llambda.generator.counterfactual.counterfactualgenerator method)": [[10, "llambda.generator.counterfactual.CounterfactualGenerator.parse_texts", false]], "prag (class in llambda.metrics.recommendation.metrics.prag)": [[54, "llambda.metrics.recommendation.metrics.prag.PRAG", false]], "predictedprevalencerateparity (class in llambda.metrics.classification.metrics.predicted_prevalence)": [[30, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false]], "print_results() (llambda.auto.auto.autoeval method)": [[4, "llambda.auto.auto.AutoEval.print_results", false]], "recommendationmetrics (class in llambda.metrics.recommendation.recommendation)": [[58, "llambda.metrics.recommendation.recommendation.RecommendationMetrics", false]], "responsegenerator (class in llambda.generator.generator)": [[12, "llambda.generator.generator.ResponseGenerator", false]], "rougelsimilarity (class in llambda.metrics.counterfactual.metrics.rougel)": [[43, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", false]], "sentimentbias (class in llambda.metrics.counterfactual.metrics.sentimentbias)": [[45, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", false]], "serp (class in llambda.metrics.recommendation.metrics.serp)": [[56, "llambda.metrics.recommendation.metrics.serp.SERP", false]], "stereotypeclassifier (class in llambda.metrics.stereotype.metrics.classifier)": [[67, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", false]], "stereotypemetrics (class in llambda.metrics.stereotype.stereotype)": [[71, "llambda.metrics.stereotype.stereotype.StereotypeMetrics", false]], "stereotypicalassociations (class in llambda.metrics.stereotype.metrics.associations)": [[62, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", false]], "toxicitymetrics (class in llambda.metrics.toxicity.toxicity)": [[74, "llambda.metrics.toxicity.toxicity.ToxicityMetrics", false]]}, "objects": {"llambda": [[2, 0, 0, "-", "auto"], [5, 0, 0, "-", "constants"], [8, 0, 0, "-", "generator"], [13, 0, 0, "-", "metrics"]], "llambda.auto": [[3, 0, 0, "-", "auto"]], "llambda.auto.auto": [[4, 1, 1, "", "AutoEval"]], "llambda.auto.auto.AutoEval": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "evaluate"], [4, 2, 1, "", "export_results"], [4, 2, 1, "", "print_results"]], "llambda.constants": [[6, 0, 0, "-", "cost_data"], [7, 0, 0, "-", "word_lists"]], "llambda.generator": [[9, 0, 0, "-", "counterfactual"], [11, 0, 0, "-", "generator"]], "llambda.generator.counterfactual": [[10, 1, 1, "", "CounterfactualGenerator"]], "llambda.generator.counterfactual.CounterfactualGenerator": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "create_prompts"], [10, 2, 1, "", "estimate_token_cost"], [10, 2, 1, "", "generate_responses"], [10, 2, 1, "", "neutralize_tokens"], [10, 2, 1, "", "parse_texts"]], "llambda.generator.generator": [[12, 1, 1, "", "ResponseGenerator"]], "llambda.generator.generator.ResponseGenerator": [[12, 2, 1, "", "__init__"], [12, 3, 1, "", "cost_mapping"], [12, 2, 1, "", "estimate_token_cost"], [12, 2, 1, "", "generate_responses"]], "llambda.metrics": [[14, 0, 0, "-", "classification"], [31, 0, 0, "-", "counterfactual"], [46, 0, 0, "-", "recommendation"], [59, 0, 0, "-", "stereotype"], [72, 0, 0, "-", "toxicity"]], "llambda.metrics.classification": [[15, 0, 0, "-", "classification"], [17, 0, 0, "-", "metrics"]], "llambda.metrics.classification.classification": [[16, 1, 1, "", "ClassificationMetrics"]], "llambda.metrics.classification.classification.ClassificationMetrics": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics": [[18, 0, 0, "-", "baseclass"], [21, 0, 0, "-", "false_discovery"], [23, 0, 0, "-", "false_negative"], [25, 0, 0, "-", "false_omission"], [27, 0, 0, "-", "false_positive"], [29, 0, 0, "-", "predicted_prevalence"]], "llambda.metrics.classification.metrics.baseclass": [[19, 0, 0, "-", "metrics"]], "llambda.metrics.classification.metrics.baseclass.metrics": [[20, 1, 1, "", "Metric"]], "llambda.metrics.classification.metrics.baseclass.metrics.Metric": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_discovery": [[22, 1, 1, "", "FalseDiscoveryRateParity"]], "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_negative": [[24, 1, 1, "", "FalseNegativeRateParity"]], "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_omission": [[26, 1, 1, "", "FalseOmissionRateParity"]], "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_positive": [[28, 1, 1, "", "FalsePositiveRateParity"]], "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.predicted_prevalence": [[30, 1, 1, "", "PredictedPrevalenceRateParity"]], "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual": [[32, 0, 0, "-", "counterfactual"], [34, 0, 0, "-", "metrics"]], "llambda.metrics.counterfactual.counterfactual": [[33, 1, 1, "", "CounterfactualMetrics"]], "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[33, 2, 1, "", "__init__"], [33, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics": [[35, 0, 0, "-", "baseclass"], [38, 0, 0, "-", "bleu"], [40, 0, 0, "-", "cosine"], [42, 0, 0, "-", "rougel"], [44, 0, 0, "-", "sentimentbias"]], "llambda.metrics.counterfactual.metrics.baseclass": [[36, 0, 0, "-", "metrics"]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[37, 1, 1, "", "Metric"]], "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.bleu": [[39, 1, 1, "", "BleuSimilarity"]], "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.cosine": [[41, 1, 1, "", "CosineSimilarity"]], "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.rougel": [[43, 1, 1, "", "RougelSimilarity"]], "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[45, 1, 1, "", "SentimentBias"]], "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation": [[47, 0, 0, "-", "metrics"], [57, 0, 0, "-", "recommendation"]], "llambda.metrics.recommendation.metrics": [[48, 0, 0, "-", "baseclass"], [51, 0, 0, "-", "jaccard"], [53, 0, 0, "-", "prag"], [55, 0, 0, "-", "serp"]], "llambda.metrics.recommendation.metrics.baseclass": [[49, 0, 0, "-", "metrics"]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[50, 1, 1, "", "Metric"]], "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.jaccard": [[52, 1, 1, "", "JaccardSimilarity"]], "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.prag": [[54, 1, 1, "", "PRAG"]], "llambda.metrics.recommendation.metrics.prag.PRAG": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.serp": [[56, 1, 1, "", "SERP"]], "llambda.metrics.recommendation.metrics.serp.SERP": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.recommendation": [[58, 1, 1, "", "RecommendationMetrics"]], "llambda.metrics.recommendation.recommendation.RecommendationMetrics": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "evaluate_against_neutral"], [58, 2, 1, "", "evaluate_pairwise"]], "llambda.metrics.stereotype": [[60, 0, 0, "-", "metrics"], [70, 0, 0, "-", "stereotype"]], "llambda.metrics.stereotype.metrics": [[61, 0, 0, "-", "associations"], [63, 0, 0, "-", "baseclass"], [66, 0, 0, "-", "classifier"], [68, 0, 0, "-", "cooccurrence"]], "llambda.metrics.stereotype.metrics.associations": [[62, 1, 1, "", "StereotypicalAssociations"]], "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.metrics.baseclass": [[64, 0, 0, "-", "metrics"]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[65, 1, 1, "", "Metric"]], "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.metrics.classifier": [[67, 1, 1, "", "StereotypeClassifier"]], "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "evaluate"], [67, 2, 1, "", "get_stereotype_scores"]], "llambda.metrics.stereotype.metrics.cooccurrence": [[69, 1, 1, "", "CooccurrenceBiasMetric"]], "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.stereotype": [[71, 1, 1, "", "StereotypeMetrics"]], "llambda.metrics.stereotype.stereotype.StereotypeMetrics": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "evaluate"]], "llambda.metrics.toxicity": [[73, 0, 0, "-", "toxicity"]], "llambda.metrics.toxicity.toxicity": [[74, 1, 1, "", "ToxicityMetrics"]], "llambda.metrics.toxicity.toxicity.ToxicityMetrics": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "evaluate"], [74, 2, 1, "", "get_toxicity_scores"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "terms": {"": 62, "0": [16, 24, 26, 28, 30, 45, 67, 69, 74], "03035": 69, "03064": 45, "06520": 7, "07": 12, "07609": 58, "08": 12, "08412": 7, "09110": [62, 74], "1": [16, 24, 26, 28, 30, 45], "10853": [39, 41, 43], "11462": 67, "11698": 12, "1607": 7, "1711": 7, "1904": 69, "1911": 45, "2009": 67, "2016": 7, "2018": 7, "2019": 69, "2020": [12, 74], "2023": [58, 62, 74], "2024": 12, "2211": [62, 74], "2305": 58, "2306": 12, "2407": [39, 41, 43], "25": [10, 12, 67, 71, 74], "250": [67, 74], "3": [1, 74, 77], "30": [10, 12], "301": [12, 74], "325": 74, "4": 7, "5": [45, 67], "95": 69, "A": [4, 10, 12, 16, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "By": [4, 10, 12], "For": [10, 12, 39, 41, 43, 45, 58, 62, 74], "If": [4, 10, 12, 33, 43, 45, 62, 67, 69, 71, 74], "It": 58, "Not": [62, 69], "One": [45, 62], "The": [10, 12, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 58, 62, 67, 69, 74], "These": 67, "To": [1, 77], "__init__": [4, 10, 12, 16, 20, 22, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 50, 52, 54, 56, 58, 62, 65, 67, 69, 71, 74], "_group_counts_to_bia": 62, "ab": [7, 12, 39, 41, 43, 58, 62, 69, 74], "abc": [20, 37, 50, 65], "abl": [4, 74], "about": [10, 12], "abstract": [20, 37, 50, 65], "accept": [45, 74], "accuraci": [54, 58], "aclanthologi": [12, 74], "across": [58, 67, 71, 74], "adapt": [7, 45, 62], "adject": [7, 62, 69], "aforement": [4, 33], "al": [7, 12, 58, 62, 74], "all": [4, 16, 20, 33, 37, 39, 41, 43, 45, 50, 65, 67, 71, 74], "among": 10, "an": [4, 33, 45, 52, 54, 56, 67, 71, 74], "analog": [33, 39, 41, 43, 45, 58], "ani": [12, 58, 74], "anoth": [52, 54, 56], "api": [4, 10, 12, 76], "appli": [67, 71, 74], "applic": [45, 74], "ar": [4, 10, 12, 33, 58, 62, 67, 69, 71, 74], "argument": [12, 30, 74], "arrai": [16, 22, 24, 26, 28, 30], "arxiv": [7, 12, 39, 41, 43, 45, 58, 62, 67, 69, 74], "asian": 7, "assess": 43, "assist": [10, 12, 16], "associ": 71, "assum": 45, "async": [4, 10, 12], "asynchron": 10, "atleast": [67, 71, 74], "attribut": [4, 10, 33, 39, 41, 43, 45, 58, 69, 71], "avail": 4, "averag": [62, 67, 69, 71, 74], "avoid": [4, 10, 12, 67, 74], "back": 58, "bad": 58, "base": [4, 10, 12, 16, 20, 22, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 50, 52, 54, 56, 58, 62, 65, 67, 69, 71, 74], "batch": [67, 74], "batch_siz": [67, 74], "befor": [1, 4, 33, 77], "being": 10, "belong": 58, "beta": 69, "between": [22, 24, 26, 28, 30, 39, 41, 43, 45, 52, 54, 56], "bia": [7, 33, 45, 62, 67, 69, 71, 74], "bieber": 58, "binar": 45, "binari": [16, 22, 24, 26, 28, 30], "blank": 58, "bleu": 33, "blood": 58, "blue": [4, 33], "bolukbasi": 7, "bool": [16, 22, 24, 26, 28, 30, 67, 71, 74], "boolean": [4, 33], "bordia": 69, "both": 71, "bowman": 69, "by_prompt": 74, "calcul": [4, 39, 41, 43, 45, 58, 62, 67, 69, 71, 74], "call": [4, 10, 12, 67, 74], "can": 45, "cardigan": 58, "care": 58, "castl": 58, "categori": [7, 45, 62, 67, 69, 71], "chain": [4, 10, 12], "check": [0, 76], "class": [3, 4, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74], "classif": [45, 67, 74], "classifi": [4, 45, 71, 74], "co": [41, 62, 69], "cob": 69, "code": [45, 62, 69], "com": [1, 77], "common": 7, "compat": [10, 12], "complet": [10, 12], "comput": [4, 7, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "condit": 69, "consist": 58, "constructor": [4, 10, 12], "contain": [4, 10, 12, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 58, 67, 71, 74], "context": 69, "convent": 12, "cooccurr": 71, "correspond": [10, 12, 58, 62, 74], "cosin": [33, 39, 43, 45], "cost": [6, 10, 12], "cost_map": 12, "count": [10, 12, 62], "counterfactu": 4, "counterfactualgener": [4, 33], "cpu": [4, 74], "creat": [1, 10, 20, 37, 50, 65, 77], "create_prompt": 10, "crfm": [7, 45, 62], "cuda": [4, 74], "current": [4, 74], "custom": [10, 12, 45], "custom_classifi": [45, 74], "custom_dict": 10, "custom_list": 10, "cv": [1, 10, 77], "data": [4, 10, 12, 67, 71, 74], "datafram": 4, "dataset": 12, "decodingtrust": 12, "default": [4, 10, 12, 16, 22, 24, 26, 28, 30, 33, 41, 43, 45, 58, 62, 67, 69, 71, 74], "defin": [45, 69, 74], "delic": 58, "demograph": [45, 62, 69], "demographic_categori": 62, "demographic_group": 62, "demographic_group_word_list": [62, 69], "desir": 4, "detoxify_origin": [4, 74], "detoxify_unbias": [4, 74], "deviat": 58, "devic": [4, 74], "dict": [4, 10, 12, 58, 62, 69, 74], "dictinari": 69, "dictionari": [4, 10, 12, 16, 33, 58, 62, 67, 69, 71, 74], "did": [10, 12], "differ": [12, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 58, 62], "dispar": [22, 24, 26, 28, 30], "distanc": [39, 41, 43, 45], "distribut": 45, "dive": 58, "diverg": 62, "do": [1, 58, 77], "doc": [1, 77], "don": 58, "done": 10, "dream": 58, "dy": [67, 74], "dynabench": 74, "e": 58, "each": [7, 10, 12, 33, 39, 41, 43, 45, 58, 62, 69], "either": 10, "element": [10, 58], "els": 69, "emnlp": [12, 74], "enabl": [39, 41, 43, 58, 67, 74], "ensembl": 74, "environ": [1, 77], "equal": [45, 62, 74], "equival": 10, "error": [4, 10, 12], "estim": [10, 12], "estimate_token_cost": [10, 12], "et": [7, 12, 58, 62, 74], "etc": 7, "evalu": [4, 12, 16, 20, 22, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 50, 52, 54, 56, 62, 65, 67, 69, 71, 74], "evaluate_against_neutr": 58, "evaluate_pairwis": 58, "ever": 58, "exactli": [16, 22, 24, 26, 28, 30, 69], "exampl": [10, 12, 58], "example_respons": [10, 12], "except": 58, "expect": [67, 71, 74], "export": 4, "export_result": 4, "extens": 67, "extent": 62, "factor": 69, "fair": [16, 58], "fairllm": 58, "fals": [16, 20, 22, 24, 26, 28, 30, 67, 71, 74], "femal": [7, 10], "few": [33, 71], "file": [4, 7], "file_nam": 4, "find": [12, 74], "first": [67, 74], "float": [4, 10, 12, 20, 22, 24, 26, 28, 30, 37, 45, 50, 52, 54, 56, 62, 67, 69, 74], "folklor": 58, "follow": [1, 7, 62, 77], "format": [4, 58], "four": 67, "fraction": [67, 71, 74], "from": [4, 7, 12, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "full": 10, "function": [10, 12, 20, 37, 50, 65], "further": [0, 76], "galwai": 58, "gap": [54, 58], "garg": 7, "gehman": [12, 74], "gender": [7, 10, 33, 62, 67, 69, 71], "gener": [4, 33, 39, 41, 43, 45, 58, 62, 67, 69, 71, 74], "generate_respons": [10, 12], "get": [4, 10, 12, 58, 62], "get_stereotype_scor": 67, "get_toxicity_scor": 74, "girl": 58, "git": [1, 77], "github": [1, 77], "give": 58, "given": [10, 12], "gpt": [10, 12], "gpu": [4, 74], "ground": [16, 22, 24, 26, 28, 30], "group": [10, 16, 20, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 58, 62], "group_dict_list": 58, "happier": 58, "hate": 74, "have": [45, 69, 74], "he": 10, "health": [1, 10, 77], "helm": [7, 45, 62], "help": [10, 12], "her": 10, "here": [1, 77], "hill": 58, "him": 10, "hispan": 7, "hous": 58, "how": [0, 4, 10, 12, 39, 41, 43, 45, 69, 76], "html": [1, 77], "http": [1, 7, 12, 39, 41, 43, 45, 58, 62, 67, 69, 74, 77], "huggingfac": 41, "i": [4, 10, 12, 30, 41, 43, 45, 58, 62, 67, 69, 71, 74], "ident": 58, "identifi": 10, "ignor": [67, 74], "implement": [20, 37, 50, 65], "includ": [0, 7, 10, 12, 67, 71, 74, 76], "indic": [4, 16, 22, 24, 26, 28, 30, 33, 45, 74], "infinit": 69, "inform": [0, 6, 12, 39, 41, 43, 45, 58, 62, 74, 76], "input": [4, 12, 45, 67, 74], "instal": [0, 76], "instruct": [1, 77], "int": [4, 10, 12, 67, 74], "interior": 58, "invok": 6, "jaccard": 58, "justin": 58, "k": 58, "kei": [10, 12, 67, 69, 71], "kernel": [67, 74], "l": 43, "l6": 41, "label": [16, 22, 24, 26, 28, 30], "langchain": [4, 10, 12], "langchain_llm": [4, 10, 12], "languag": [33, 39, 41, 43, 45, 62, 67, 69, 74], "larg": [67, 74], "latter": 45, "lego": 58, "len": 10, "length": [10, 45, 58, 74], "level": [67, 71, 74], "leverag": [4, 45, 74], "liang": [62, 74], "librari": [1, 77], "like": [16, 22, 24, 26, 28, 30, 41], "limit": [4, 10, 12], "list": [4, 7, 10, 12, 16, 33, 37, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "list1": [50, 52, 54, 56], "list2": [50, 52, 54, 56], "llambda": [1, 77], "llm": [4, 6, 10, 12, 41, 45, 52, 54, 56, 58, 67, 71, 74], "look": 58, "loud": 58, "love": 58, "made": 58, "mai": [22, 24, 26, 28, 30], "make": [4, 10, 12], "male": [7, 10], "man": [7, 10], "mani": [4, 10, 12], "mask": [4, 10, 33], "max": 58, "max_calls_per_min": [4, 10, 12], "maximum": [67, 71, 74], "me": 58, "mean": [39, 41, 43, 45, 58, 62, 69], "measur": [62, 69], "mention": [33, 39, 41, 43, 45, 58], "metadata": [10, 12], "method": [4, 10, 12, 16, 20, 22, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 50, 52, 54, 56, 58, 62, 65, 67, 69, 71, 74], "metric": [4, 7], "metric_typ": 16, "min": 58, "minilm": 41, "minut": [4, 10, 12], "misinform": [56, 58], "model": [4, 10, 12, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 52, 54, 56, 62, 67, 69, 74], "modul": [2, 5, 8, 13, 14, 17, 18, 31, 34, 35, 46, 47, 48, 59, 60, 63, 72], "more": [39, 41, 43, 45, 58, 62, 74], "most": 7, "must": [10, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 62, 69, 74], "name": [4, 7, 10, 12, 16, 33, 58, 71], "natural_language_api": 45, "need": [20, 37, 50, 65], "neg": [16, 22, 24, 26, 28, 30, 45], "neutral": [10, 33], "neutral_dict": 58, "neutralize_token": [4, 10, 33], "never": 58, "new": [1, 20, 37, 50, 65, 77], "non_completion_r": [10, 12], "none": [4, 10, 12, 16, 20, 24, 26, 28, 30, 33, 41, 45, 62, 67, 69, 71, 74], "note": [10, 12], "number": [10, 12, 62], "object": [4, 10, 12, 16, 33, 45, 58, 62, 67, 69, 71, 74], "occur": [10, 62], "occurr": [62, 69], "off": 58, "omiss": 26, "onc": 62, "one": 16, "onli": [10, 12, 30, 45, 67, 71, 74], "openai": [10, 12], "option": [4, 10, 12], "org": [1, 7, 12, 39, 41, 43, 45, 58, 62, 67, 69, 74, 77], "other": [4, 10, 12], "otherwis": [67, 71, 74], "out": [0, 58, 76], "output": [4, 12, 33, 39, 41, 43, 45, 62, 67, 69, 71, 74], "over": [39, 41, 43, 45, 62, 67, 69, 71, 74], "packag": [45, 62], "page": [10, 56, 58], "pair": [33, 39, 41, 43, 45, 71], "pairwis": [16, 39, 41, 43, 45, 54, 58], "paper": [0, 76], "param": 69, "paramet": [10, 12, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "pariti": [22, 24, 26, 28, 30, 45], "pars": 10, "parse_text": 10, "parti": 45, "pass": [4, 10, 12], "pdf": [45, 58, 67], "per": [4, 10, 12, 67, 71, 74], "perfect": 58, "photograph": 58, "pip": [1, 77], "place": 6, "placehold": 30, "pleas": [1, 77], "po": 45, "posit": [16, 24, 26, 28, 30], "prag": 58, "preced": [45, 62, 69, 74], "predict": [4, 16, 22, 24, 26, 28, 30, 45, 74], "prefer": 43, "present": 67, "preval": 30, "prevent": [67, 74], "print": 4, "print_result": 4, "probabl": [67, 69, 71, 74], "process": [10, 12], "profess": [7, 62, 67], "project": [0, 76], "prompt": [4, 10, 12, 58, 67, 71, 74], "protect": [10, 33, 39, 41, 43, 45, 58, 69], "provid": [4, 10, 12, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "punit": 16, "python": [1, 77], "r4": 74, "race": [7, 10, 33, 67, 71], "rang": 58, "rank": [54, 58], "rate": [4, 10, 12, 22, 24, 26, 28, 30, 69], "ratio": [16, 20, 22, 24, 26, 28, 30, 69], "rec_lists1": 58, "rec_lists2": 58, "recommend": [1, 20, 41, 67, 71, 74, 77], "refer": [7, 10, 39, 41, 43, 45, 58, 62, 74], "rel": 69, "relat": 6, "relev": [4, 10, 12], "religion": 67, "replac": 10, "represent": [16, 62], "research": 69, "respect": [16, 24, 26, 28, 30, 62], "respons": [4, 10, 12, 33, 62, 65, 67, 69, 71, 74], "response_sample_s": [10, 12], "responsegener": 10, "result": [4, 56, 58, 67, 71, 74], "return": [10, 12, 16, 20, 22, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 50, 52, 54, 56, 58, 62, 67, 69, 71, 74], "return_data": [67, 71, 74], "return_df": 67, "roberta": 74, "roug": 43, "rouge_metr": 43, "rougel": [4, 33], "rougelsum": 43, "same": [33, 39, 41, 43, 45, 58], "score": [39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "search": [56, 58], "section": [0, 76], "see": [12, 41], "select": [43, 62, 69], "self": 12, "sentenc": [41, 43], "sentiment": [33, 45], "serp": 58, "serv": [20, 37, 50, 65], "set": [4, 12, 45, 67, 74], "shake": 58, "shape": 58, "she": 10, "should": [10, 58, 67, 71, 74], "similar": [39, 41, 43, 45, 52, 58], "sing": 58, "singl": [67, 71, 74], "size": [67, 74], "so": [1, 77], "social": [39, 41, 43], "sort_model": 41, "space": [41, 58], "specif": 7, "specifi": [4, 10, 12, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 62, 67, 69, 71, 74], "speech": 74, "standard": 58, "stanford": [7, 45, 62], "step": 62, "stereotyp": 4, "stereotype_word_list": [62, 69], "storag": 6, "stori": 58, "str": [4, 10, 12, 16, 41, 58, 62, 67, 69, 74], "strict": 45, "string": [4, 10, 12, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "strong": 45, "style": 58, "subset": [71, 74], "substitut": [10, 39, 41, 43], "support": [4, 33, 71], "system": [10, 12], "system_prompt": [10, 12], "t": 58, "take": [45, 62, 69, 74], "target": [45, 62, 69, 74], "target_categori": [62, 69], "team": 58, "temperatur": [4, 10, 12], "templat": [20, 37, 50, 65], "term": 62, "text": [4, 10, 33, 39, 41, 43, 45, 62, 67, 71, 74], "texts1": [33, 37, 39, 41, 43, 45], "texts2": [33, 37, 39, 41, 43, 45], "thei": 58, "thi": [4, 7, 10, 12, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 52, 54, 56, 58, 62, 67, 69, 71, 74], "think": 58, "third": 45, "those": [58, 67], "thresh": 45, "threshold": [45, 67, 74], "tiktoken_model_nam": [10, 12], "time": 62, "togeth": 58, "token": [6, 10, 12], "too": [67, 74], "torch": [4, 74], "total": [10, 12], "toxic": [4, 12], "toxic_threshold": 74, "toxicity_devic": 4, "toxigen": 74, "transform": 41, "true": [4, 33, 67], "truth": [16, 22, 24, 26, 28, 30], "two": [10, 12, 16, 22, 24, 26, 28, 30, 39, 41, 43, 45, 52, 54, 56, 58, 67, 69, 71], "txt": 4, "type": [4, 10, 12, 16, 20, 22, 24, 26, 28, 30, 33, 37, 39, 41, 43, 45, 50, 52, 54, 56, 58, 62, 67, 69, 71, 74], "union": 37, "uniqu": [16, 22, 24, 26, 28, 30], "us": [1, 4, 10, 12, 33, 41, 43, 45, 58, 62, 67, 69, 74, 77], "usag": [0, 76], "user": [4, 10, 12, 20, 22, 24, 26, 28, 30, 37, 45, 50, 65, 74], "utilis": 7, "v2": 41, "vader": 45, "valu": [4, 12, 16, 22, 24, 26, 28, 30, 33, 54, 56, 58, 62, 67, 69, 71, 74], "variat": [39, 41, 43], "vector": 41, "venv": [1, 77], "via": 58, "view": [0, 76], "virtual": [1, 77], "w": 69, "wasserstein": 45, "we": [1, 58, 62, 77], "weak": 45, "weight": 69, "were": [67, 71, 74], "what": [10, 58], "when": [10, 12, 20, 37, 41, 50, 65, 69], "whether": [10, 16, 22, 24, 26, 28, 30, 33, 39, 41, 43, 45, 67, 71, 74], "which": [4, 10, 12, 41, 43, 62, 67, 69, 71, 74], "white": [0, 7, 76], "wildest": 58, "window": 69, "wise": 43, "within": [33, 39, 41, 43, 45], "woman": [7, 10], "word": [7, 10, 62, 69], "y_pred": [16, 20, 22, 24, 26, 28, 30], "y_true": [16, 20, 22, 24, 26, 28, 30], "you": [10, 12, 58], "zhang": 58}, "titles": ["Welcome to LLaMBDA\u2019s documentation!", "Usage", "llambda.auto", "llambda.auto.auto", "llambda.auto.auto.AutoEval", "llambda.constants", "llambda.constants.cost_data", "llambda.constants.word_lists", "llambda.generator", "llambda.generator.counterfactual", "llambda.generator.counterfactual.CounterfactualGenerator", "llambda.generator.generator", "llambda.generator.generator.ResponseGenerator", "llambda.metrics", "llambda.metrics.classification", "llambda.metrics.classification.classification", "llambda.metrics.classification.classification.ClassificationMetrics", "llambda.metrics.classification.metrics", "llambda.metrics.classification.metrics.baseclass", "llambda.metrics.classification.metrics.baseclass.metrics", "llambda.metrics.classification.metrics.baseclass.metrics.Metric", "llambda.metrics.classification.metrics.false_discovery", "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "llambda.metrics.classification.metrics.false_negative", "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "llambda.metrics.classification.metrics.false_omission", "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "llambda.metrics.classification.metrics.false_positive", "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "llambda.metrics.classification.metrics.predicted_prevalence", "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "llambda.metrics.counterfactual", "llambda.metrics.counterfactual.counterfactual", "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "llambda.metrics.counterfactual.metrics", "llambda.metrics.counterfactual.metrics.baseclass", "llambda.metrics.counterfactual.metrics.baseclass.metrics", "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "llambda.metrics.counterfactual.metrics.bleu", "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "llambda.metrics.counterfactual.metrics.cosine", "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "llambda.metrics.counterfactual.metrics.rougel", "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "llambda.metrics.counterfactual.metrics.sentimentbias", "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "llambda.metrics.recommendation", "llambda.metrics.recommendation.metrics", "llambda.metrics.recommendation.metrics.baseclass", "llambda.metrics.recommendation.metrics.baseclass.metrics", "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "llambda.metrics.recommendation.metrics.jaccard", "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "llambda.metrics.recommendation.metrics.prag", "llambda.metrics.recommendation.metrics.prag.PRAG", "llambda.metrics.recommendation.metrics.serp", "llambda.metrics.recommendation.metrics.serp.SERP", "llambda.metrics.recommendation.recommendation", "llambda.metrics.recommendation.recommendation.RecommendationMetrics", "llambda.metrics.stereotype", "llambda.metrics.stereotype.metrics", "llambda.metrics.stereotype.metrics.associations", "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "llambda.metrics.stereotype.metrics.baseclass", "llambda.metrics.stereotype.metrics.baseclass.metrics", "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "llambda.metrics.stereotype.metrics.classifier", "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "llambda.metrics.stereotype.metrics.cooccurrence", "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "llambda.metrics.stereotype.stereotype", "llambda.metrics.stereotype.stereotype.StereotypeMetrics", "llambda.metrics.toxicity", "llambda.metrics.toxicity.toxicity", "llambda.metrics.toxicity.toxicity.ToxicityMetrics", "API", "Welcome to LLaMBDA\u2019s documentation!", "Usage"], "titleterms": {"": [0, 76], "api": 75, "associ": [61, 62], "auto": [2, 3, 4], "autoev": 4, "baseclass": [18, 19, 20, 35, 36, 37, 48, 49, 50, 63, 64, 65], "bleu": [38, 39], "bleusimilar": 39, "classif": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "classifi": [66, 67], "classificationmetr": 16, "constant": [5, 6, 7], "content": 76, "cooccurr": [68, 69], "cooccurrencebiasmetr": 69, "cosin": [40, 41], "cosinesimilar": 41, "cost_data": 6, "counterfactu": [9, 10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "counterfactualgener": 10, "counterfactualmetr": 33, "document": [0, 76], "false_discoveri": [21, 22], "false_neg": [23, 24], "false_omiss": [25, 26], "false_posit": [27, 28], "falsediscoveryratepar": 22, "falsenegativeratepar": 24, "falseomissionratepar": 26, "falsepositiveratepar": 28, "gener": [8, 9, 10, 11, 12], "instal": [1, 77], "jaccard": [51, 52], "jaccardsimilar": 52, "llambda": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76], "metric": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "paramet": 4, "prag": [53, 54], "predicted_preval": [29, 30], "predictedprevalenceratepar": 30, "recommend": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "recommendationmetr": 58, "responsegener": 12, "return": 4, "rougel": [42, 43], "rougelsimilar": 43, "sentimentbia": [44, 45], "serp": [55, 56], "stereotyp": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "stereotypeclassifi": 67, "stereotypemetr": 71, "stereotypicalassoci": 62, "toxic": [72, 73, 74], "toxicitymetr": 74, "usag": [1, 77], "welcom": [0, 76], "word_list": 7}})