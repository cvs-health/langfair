Search.setIndex({"alltitles": {"API": [[74, null]], "Contents:": [[75, null]], "Installation": [[0, "gettingstarted"], [76, "gettingstarted"]], "Parameters:": [[3, "parameters"], [3, "id1"], [3, "id2"]], "Returns:": [[3, "returns"]], "Usage": [[0, null], [76, null]], "Welcome to LLaMBDA\u2019s documentation!": [[75, null]], "llambda.auto": [[1, null]], "llambda.auto.auto": [[2, null]], "llambda.auto.auto.AutoEval": [[3, null]], "llambda.constants": [[4, null]], "llambda.constants.cost_data": [[5, null]], "llambda.constants.word_lists": [[6, null]], "llambda.generator": [[7, null]], "llambda.generator.counterfactual": [[8, null]], "llambda.generator.counterfactual.CounterfactualGenerator": [[9, null]], "llambda.generator.generator": [[10, null]], "llambda.generator.generator.ResponseGenerator": [[11, null]], "llambda.metrics": [[12, null]], "llambda.metrics.classification": [[13, null]], "llambda.metrics.classification.classification": [[14, null]], "llambda.metrics.classification.classification.ClassificationMetrics": [[15, null]], "llambda.metrics.classification.metrics": [[16, null]], "llambda.metrics.classification.metrics.baseclass": [[17, null]], "llambda.metrics.classification.metrics.baseclass.metrics": [[18, null]], "llambda.metrics.classification.metrics.baseclass.metrics.Metric": [[19, null]], "llambda.metrics.classification.metrics.false_discovery": [[20, null]], "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[21, null]], "llambda.metrics.classification.metrics.false_negative": [[22, null]], "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[23, null]], "llambda.metrics.classification.metrics.false_omission": [[24, null]], "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[25, null]], "llambda.metrics.classification.metrics.false_positive": [[26, null]], "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[27, null]], "llambda.metrics.classification.metrics.predicted_prevalence": [[28, null]], "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[29, null]], "llambda.metrics.counterfactual": [[30, null]], "llambda.metrics.counterfactual.counterfactual": [[31, null]], "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[32, null]], "llambda.metrics.counterfactual.metrics": [[33, null]], "llambda.metrics.counterfactual.metrics.baseclass": [[34, null]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[35, null]], "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[36, null]], "llambda.metrics.counterfactual.metrics.bleu": [[37, null]], "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[38, null]], "llambda.metrics.counterfactual.metrics.cosine": [[39, null]], "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[40, null]], "llambda.metrics.counterfactual.metrics.rougel": [[41, null]], "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[42, null]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[43, null]], "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[44, null]], "llambda.metrics.recommendation": [[45, null]], "llambda.metrics.recommendation.metrics": [[46, null]], "llambda.metrics.recommendation.metrics.baseclass": [[47, null]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[48, null]], "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric": [[49, null]], "llambda.metrics.recommendation.metrics.jaccard": [[50, null]], "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[51, null]], "llambda.metrics.recommendation.metrics.prag": [[52, null]], "llambda.metrics.recommendation.metrics.prag.PRAG": [[53, null]], "llambda.metrics.recommendation.metrics.serp": [[54, null]], "llambda.metrics.recommendation.metrics.serp.SERP": [[55, null]], "llambda.metrics.recommendation.recommendation": [[56, null]], "llambda.metrics.recommendation.recommendation.RecommendationMetrics": [[57, null]], "llambda.metrics.stereotype": [[58, null]], "llambda.metrics.stereotype.metrics": [[59, null]], "llambda.metrics.stereotype.metrics.associations": [[60, null]], "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[61, null]], "llambda.metrics.stereotype.metrics.baseclass": [[62, null]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[63, null]], "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric": [[64, null]], "llambda.metrics.stereotype.metrics.classifier": [[65, null]], "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[66, null]], "llambda.metrics.stereotype.metrics.cooccurrence": [[67, null]], "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[68, null]], "llambda.metrics.stereotype.stereotype": [[69, null]], "llambda.metrics.stereotype.stereotype.StereotypeMetrics": [[70, null]], "llambda.metrics.toxicity": [[71, null]], "llambda.metrics.toxicity.toxicity": [[72, null]], "llambda.metrics.toxicity.toxicity.ToxicityMetrics": [[73, null]]}, "docnames": [".ipynb_checkpoints/usage-checkpoint", "_autosummary/llambda.auto", "_autosummary/llambda.auto.auto", "_autosummary/llambda.auto.auto.AutoEval", "_autosummary/llambda.constants", "_autosummary/llambda.constants.cost_data", "_autosummary/llambda.constants.word_lists", "_autosummary/llambda.generator", "_autosummary/llambda.generator.counterfactual", "_autosummary/llambda.generator.counterfactual.CounterfactualGenerator", "_autosummary/llambda.generator.generator", "_autosummary/llambda.generator.generator.ResponseGenerator", "_autosummary/llambda.metrics", "_autosummary/llambda.metrics.classification", "_autosummary/llambda.metrics.classification.classification", "_autosummary/llambda.metrics.classification.classification.ClassificationMetrics", "_autosummary/llambda.metrics.classification.metrics", "_autosummary/llambda.metrics.classification.metrics.baseclass", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.classification.metrics.false_discovery", "_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "_autosummary/llambda.metrics.classification.metrics.false_negative", "_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "_autosummary/llambda.metrics.classification.metrics.false_omission", "_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "_autosummary/llambda.metrics.classification.metrics.false_positive", "_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "_autosummary/llambda.metrics.counterfactual", "_autosummary/llambda.metrics.counterfactual.counterfactual", "_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "_autosummary/llambda.metrics.counterfactual.metrics", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.counterfactual.metrics.bleu", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.cosine", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.rougel", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "_autosummary/llambda.metrics.recommendation", "_autosummary/llambda.metrics.recommendation.metrics", "_autosummary/llambda.metrics.recommendation.metrics.baseclass", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.recommendation.metrics.jaccard", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "_autosummary/llambda.metrics.recommendation.metrics.prag", "_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG", "_autosummary/llambda.metrics.recommendation.metrics.serp", "_autosummary/llambda.metrics.recommendation.metrics.serp.SERP", "_autosummary/llambda.metrics.recommendation.recommendation", "_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics", "_autosummary/llambda.metrics.stereotype", "_autosummary/llambda.metrics.stereotype.metrics", "_autosummary/llambda.metrics.stereotype.metrics.associations", "_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "_autosummary/llambda.metrics.stereotype.metrics.baseclass", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.stereotype.metrics.classifier", "_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "_autosummary/llambda.metrics.stereotype.stereotype", "_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics", "_autosummary/llambda.metrics.toxicity", "_autosummary/llambda.metrics.toxicity.toxicity", "_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics", "api", "index", "usage"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": [".ipynb_checkpoints/usage-checkpoint.rst", "_autosummary/llambda.auto.rst", "_autosummary/llambda.auto.auto.rst", "_autosummary/llambda.auto.auto.AutoEval.rst", "_autosummary/llambda.constants.rst", "_autosummary/llambda.constants.cost_data.rst", "_autosummary/llambda.constants.word_lists.rst", "_autosummary/llambda.generator.rst", "_autosummary/llambda.generator.counterfactual.rst", "_autosummary/llambda.generator.counterfactual.CounterfactualGenerator.rst", "_autosummary/llambda.generator.generator.rst", "_autosummary/llambda.generator.generator.ResponseGenerator.rst", "_autosummary/llambda.metrics.rst", "_autosummary/llambda.metrics.classification.rst", "_autosummary/llambda.metrics.classification.classification.rst", "_autosummary/llambda.metrics.classification.classification.ClassificationMetrics.rst", "_autosummary/llambda.metrics.classification.metrics.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.classification.metrics.false_discovery.rst", "_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_negative.rst", "_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_omission.rst", "_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_positive.rst", "_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.rst", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", "_autosummary/llambda.metrics.counterfactual.rst", "_autosummary/llambda.metrics.counterfactual.counterfactual.rst", "_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.rst", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.rst", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.rst", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", "_autosummary/llambda.metrics.recommendation.rst", "_autosummary/llambda.metrics.recommendation.metrics.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.rst", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", "_autosummary/llambda.metrics.recommendation.metrics.prag.rst", "_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG.rst", "_autosummary/llambda.metrics.recommendation.metrics.serp.rst", "_autosummary/llambda.metrics.recommendation.metrics.serp.SERP.rst", "_autosummary/llambda.metrics.recommendation.recommendation.rst", "_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics.rst", "_autosummary/llambda.metrics.stereotype.rst", "_autosummary/llambda.metrics.stereotype.metrics.rst", "_autosummary/llambda.metrics.stereotype.metrics.associations.rst", "_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.stereotype.metrics.classifier.rst", "_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.rst", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", "_autosummary/llambda.metrics.stereotype.stereotype.rst", "_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics.rst", "_autosummary/llambda.metrics.toxicity.rst", "_autosummary/llambda.metrics.toxicity.toxicity.rst", "_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics.rst", "api.rst", "index.rst", "usage.rst"], "indexentries": {"__init__() (llambda.auto.auto.autoeval method)": [[3, "llambda.auto.auto.AutoEval.__init__", false]], "__init__() (llambda.generator.counterfactual.counterfactualgenerator method)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator.__init__", false]], "__init__() (llambda.generator.generator.responsegenerator method)": [[11, "llambda.generator.generator.ResponseGenerator.__init__", false]], "__init__() (llambda.metrics.classification.classification.classificationmetrics method)": [[15, "llambda.metrics.classification.classification.ClassificationMetrics.__init__", false]], "__init__() (llambda.metrics.classification.metrics.baseclass.metrics.metric method)": [[19, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[21, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[23, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[25, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[27, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[29, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false]], "__init__() (llambda.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[32, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[36, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[38, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[40, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[42, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[44, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[49, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[51, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.prag.prag method)": [[53, "llambda.metrics.recommendation.metrics.prag.PRAG.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.serp.serp method)": [[55, "llambda.metrics.recommendation.metrics.serp.SERP.__init__", false]], "__init__() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[57, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[61, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[64, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[66, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[68, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.__init__", false]], "__init__() (llambda.metrics.stereotype.stereotype.stereotypemetrics method)": [[70, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.__init__", false]], "__init__() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[73, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.__init__", false]], "autoeval (class in llambda.auto.auto)": [[3, "llambda.auto.auto.AutoEval", false]], "bleusimilarity (class in llambda.metrics.counterfactual.metrics.bleu)": [[38, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", false]], "classificationmetrics (class in llambda.metrics.classification.classification)": [[15, "llambda.metrics.classification.classification.ClassificationMetrics", false]], "cooccurrencebiasmetric (class in llambda.metrics.stereotype.metrics.cooccurrence)": [[68, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", false]], "cosinesimilarity (class in llambda.metrics.counterfactual.metrics.cosine)": [[40, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", false]], "cost_mapping (llambda.generator.generator.responsegenerator attribute)": [[11, "llambda.generator.generator.ResponseGenerator.cost_mapping", false]], "counterfactualgenerator (class in llambda.generator.counterfactual)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator", false]], "counterfactualmetrics (class in llambda.metrics.counterfactual.counterfactual)": [[32, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", false]], "create_prompts() (llambda.generator.counterfactual.counterfactualgenerator method)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator.create_prompts", false]], "estimate_token_cost() (llambda.generator.counterfactual.counterfactualgenerator method)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false]], "estimate_token_cost() (llambda.generator.generator.responsegenerator method)": [[11, "llambda.generator.generator.ResponseGenerator.estimate_token_cost", false]], "evaluate() (llambda.auto.auto.autoeval method)": [[3, "llambda.auto.auto.AutoEval.evaluate", false]], "evaluate() (llambda.metrics.classification.classification.classificationmetrics method)": [[15, "llambda.metrics.classification.classification.ClassificationMetrics.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.baseclass.metrics.metric method)": [[19, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[21, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[23, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[25, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[27, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[29, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[32, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[36, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[38, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[40, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[42, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[44, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[49, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[51, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.prag.prag method)": [[53, "llambda.metrics.recommendation.metrics.prag.PRAG.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.serp.serp method)": [[55, "llambda.metrics.recommendation.metrics.serp.SERP.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[61, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[64, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[66, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[68, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.evaluate", false]], "evaluate() (llambda.metrics.stereotype.stereotype.stereotypemetrics method)": [[70, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.evaluate", false]], "evaluate() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[73, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.evaluate", false]], "evaluate_against_neutral() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[57, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_against_neutral", false]], "evaluate_pairwise() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[57, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_pairwise", false]], "export_results() (llambda.auto.auto.autoeval method)": [[3, "llambda.auto.auto.AutoEval.export_results", false]], "falsediscoveryrateparity (class in llambda.metrics.classification.metrics.false_discovery)": [[21, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false]], "falsenegativerateparity (class in llambda.metrics.classification.metrics.false_negative)": [[23, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false]], "falseomissionrateparity (class in llambda.metrics.classification.metrics.false_omission)": [[25, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false]], "falsepositiverateparity (class in llambda.metrics.classification.metrics.false_positive)": [[27, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false]], "generate_responses() (llambda.generator.counterfactual.counterfactualgenerator method)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator.generate_responses", false]], "generate_responses() (llambda.generator.generator.responsegenerator method)": [[11, "llambda.generator.generator.ResponseGenerator.generate_responses", false]], "get_stereotype_scores() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[66, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.get_stereotype_scores", false]], "get_toxicity_scores() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[73, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.get_toxicity_scores", false]], "jaccardsimilarity (class in llambda.metrics.recommendation.metrics.jaccard)": [[51, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", false]], "llambda.auto": [[1, "module-llambda.auto", false]], "llambda.auto.auto": [[2, "module-llambda.auto.auto", false]], "llambda.constants": [[4, "module-llambda.constants", false]], "llambda.constants.cost_data": [[5, "module-llambda.constants.cost_data", false]], "llambda.constants.word_lists": [[6, "module-llambda.constants.word_lists", false]], "llambda.generator": [[7, "module-llambda.generator", false]], "llambda.generator.counterfactual": [[8, "module-llambda.generator.counterfactual", false]], "llambda.generator.generator": [[10, "module-llambda.generator.generator", false]], "llambda.metrics": [[12, "module-llambda.metrics", false]], "llambda.metrics.classification": [[13, "module-llambda.metrics.classification", false]], "llambda.metrics.classification.classification": [[14, "module-llambda.metrics.classification.classification", false]], "llambda.metrics.classification.metrics": [[16, "module-llambda.metrics.classification.metrics", false]], "llambda.metrics.classification.metrics.baseclass": [[17, "module-llambda.metrics.classification.metrics.baseclass", false]], "llambda.metrics.classification.metrics.baseclass.metrics": [[18, "module-llambda.metrics.classification.metrics.baseclass.metrics", false]], "llambda.metrics.classification.metrics.false_discovery": [[20, "module-llambda.metrics.classification.metrics.false_discovery", false]], "llambda.metrics.classification.metrics.false_negative": [[22, "module-llambda.metrics.classification.metrics.false_negative", false]], "llambda.metrics.classification.metrics.false_omission": [[24, "module-llambda.metrics.classification.metrics.false_omission", false]], "llambda.metrics.classification.metrics.false_positive": [[26, "module-llambda.metrics.classification.metrics.false_positive", false]], "llambda.metrics.classification.metrics.predicted_prevalence": [[28, "module-llambda.metrics.classification.metrics.predicted_prevalence", false]], "llambda.metrics.counterfactual": [[30, "module-llambda.metrics.counterfactual", false]], "llambda.metrics.counterfactual.counterfactual": [[31, "module-llambda.metrics.counterfactual.counterfactual", false]], "llambda.metrics.counterfactual.metrics": [[33, "module-llambda.metrics.counterfactual.metrics", false]], "llambda.metrics.counterfactual.metrics.baseclass": [[34, "module-llambda.metrics.counterfactual.metrics.baseclass", false]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[35, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false]], "llambda.metrics.counterfactual.metrics.bleu": [[37, "module-llambda.metrics.counterfactual.metrics.bleu", false]], "llambda.metrics.counterfactual.metrics.cosine": [[39, "module-llambda.metrics.counterfactual.metrics.cosine", false]], "llambda.metrics.counterfactual.metrics.rougel": [[41, "module-llambda.metrics.counterfactual.metrics.rougel", false]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[43, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false]], "llambda.metrics.recommendation": [[45, "module-llambda.metrics.recommendation", false]], "llambda.metrics.recommendation.metrics": [[46, "module-llambda.metrics.recommendation.metrics", false]], "llambda.metrics.recommendation.metrics.baseclass": [[47, "module-llambda.metrics.recommendation.metrics.baseclass", false]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[48, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false]], "llambda.metrics.recommendation.metrics.jaccard": [[50, "module-llambda.metrics.recommendation.metrics.jaccard", false]], "llambda.metrics.recommendation.metrics.prag": [[52, "module-llambda.metrics.recommendation.metrics.prag", false]], "llambda.metrics.recommendation.metrics.serp": [[54, "module-llambda.metrics.recommendation.metrics.serp", false]], "llambda.metrics.recommendation.recommendation": [[56, "module-llambda.metrics.recommendation.recommendation", false]], "llambda.metrics.stereotype": [[58, "module-llambda.metrics.stereotype", false]], "llambda.metrics.stereotype.metrics": [[59, "module-llambda.metrics.stereotype.metrics", false]], "llambda.metrics.stereotype.metrics.associations": [[60, "module-llambda.metrics.stereotype.metrics.associations", false]], "llambda.metrics.stereotype.metrics.baseclass": [[62, "module-llambda.metrics.stereotype.metrics.baseclass", false]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[63, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false]], "llambda.metrics.stereotype.metrics.classifier": [[65, "module-llambda.metrics.stereotype.metrics.classifier", false]], "llambda.metrics.stereotype.metrics.cooccurrence": [[67, "module-llambda.metrics.stereotype.metrics.cooccurrence", false]], "llambda.metrics.stereotype.stereotype": [[69, "module-llambda.metrics.stereotype.stereotype", false]], "llambda.metrics.toxicity": [[71, "module-llambda.metrics.toxicity", false]], "llambda.metrics.toxicity.toxicity": [[72, "module-llambda.metrics.toxicity.toxicity", false]], "metric (class in llambda.metrics.classification.metrics.baseclass.metrics)": [[19, "llambda.metrics.classification.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.counterfactual.metrics.baseclass.metrics)": [[36, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.recommendation.metrics.baseclass.metrics)": [[49, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.stereotype.metrics.baseclass.metrics)": [[64, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", false]], "module": [[1, "module-llambda.auto", false], [2, "module-llambda.auto.auto", false], [4, "module-llambda.constants", false], [5, "module-llambda.constants.cost_data", false], [6, "module-llambda.constants.word_lists", false], [7, "module-llambda.generator", false], [8, "module-llambda.generator.counterfactual", false], [10, "module-llambda.generator.generator", false], [12, "module-llambda.metrics", false], [13, "module-llambda.metrics.classification", false], [14, "module-llambda.metrics.classification.classification", false], [16, "module-llambda.metrics.classification.metrics", false], [17, "module-llambda.metrics.classification.metrics.baseclass", false], [18, "module-llambda.metrics.classification.metrics.baseclass.metrics", false], [20, "module-llambda.metrics.classification.metrics.false_discovery", false], [22, "module-llambda.metrics.classification.metrics.false_negative", false], [24, "module-llambda.metrics.classification.metrics.false_omission", false], [26, "module-llambda.metrics.classification.metrics.false_positive", false], [28, "module-llambda.metrics.classification.metrics.predicted_prevalence", false], [30, "module-llambda.metrics.counterfactual", false], [31, "module-llambda.metrics.counterfactual.counterfactual", false], [33, "module-llambda.metrics.counterfactual.metrics", false], [34, "module-llambda.metrics.counterfactual.metrics.baseclass", false], [35, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false], [37, "module-llambda.metrics.counterfactual.metrics.bleu", false], [39, "module-llambda.metrics.counterfactual.metrics.cosine", false], [41, "module-llambda.metrics.counterfactual.metrics.rougel", false], [43, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false], [45, "module-llambda.metrics.recommendation", false], [46, "module-llambda.metrics.recommendation.metrics", false], [47, "module-llambda.metrics.recommendation.metrics.baseclass", false], [48, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false], [50, "module-llambda.metrics.recommendation.metrics.jaccard", false], [52, "module-llambda.metrics.recommendation.metrics.prag", false], [54, "module-llambda.metrics.recommendation.metrics.serp", false], [56, "module-llambda.metrics.recommendation.recommendation", false], [58, "module-llambda.metrics.stereotype", false], [59, "module-llambda.metrics.stereotype.metrics", false], [60, "module-llambda.metrics.stereotype.metrics.associations", false], [62, "module-llambda.metrics.stereotype.metrics.baseclass", false], [63, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false], [65, "module-llambda.metrics.stereotype.metrics.classifier", false], [67, "module-llambda.metrics.stereotype.metrics.cooccurrence", false], [69, "module-llambda.metrics.stereotype.stereotype", false], [71, "module-llambda.metrics.toxicity", false], [72, "module-llambda.metrics.toxicity.toxicity", false]], "neutralize_tokens() (llambda.generator.counterfactual.counterfactualgenerator method)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false]], "parse_texts() (llambda.generator.counterfactual.counterfactualgenerator method)": [[9, "llambda.generator.counterfactual.CounterfactualGenerator.parse_texts", false]], "prag (class in llambda.metrics.recommendation.metrics.prag)": [[53, "llambda.metrics.recommendation.metrics.prag.PRAG", false]], "predictedprevalencerateparity (class in llambda.metrics.classification.metrics.predicted_prevalence)": [[29, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false]], "print_results() (llambda.auto.auto.autoeval method)": [[3, "llambda.auto.auto.AutoEval.print_results", false]], "recommendationmetrics (class in llambda.metrics.recommendation.recommendation)": [[57, "llambda.metrics.recommendation.recommendation.RecommendationMetrics", false]], "responsegenerator (class in llambda.generator.generator)": [[11, "llambda.generator.generator.ResponseGenerator", false]], "rougelsimilarity (class in llambda.metrics.counterfactual.metrics.rougel)": [[42, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", false]], "sentimentbias (class in llambda.metrics.counterfactual.metrics.sentimentbias)": [[44, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", false]], "serp (class in llambda.metrics.recommendation.metrics.serp)": [[55, "llambda.metrics.recommendation.metrics.serp.SERP", false]], "stereotypeclassifier (class in llambda.metrics.stereotype.metrics.classifier)": [[66, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", false]], "stereotypemetrics (class in llambda.metrics.stereotype.stereotype)": [[70, "llambda.metrics.stereotype.stereotype.StereotypeMetrics", false]], "stereotypicalassociations (class in llambda.metrics.stereotype.metrics.associations)": [[61, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", false]], "toxicitymetrics (class in llambda.metrics.toxicity.toxicity)": [[73, "llambda.metrics.toxicity.toxicity.ToxicityMetrics", false]]}, "objects": {"llambda": [[1, 0, 0, "-", "auto"], [4, 0, 0, "-", "constants"], [7, 0, 0, "-", "generator"], [12, 0, 0, "-", "metrics"]], "llambda.auto": [[2, 0, 0, "-", "auto"]], "llambda.auto.auto": [[3, 1, 1, "", "AutoEval"]], "llambda.auto.auto.AutoEval": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "export_results"], [3, 2, 1, "", "print_results"]], "llambda.constants": [[5, 0, 0, "-", "cost_data"], [6, 0, 0, "-", "word_lists"]], "llambda.generator": [[8, 0, 0, "-", "counterfactual"], [10, 0, 0, "-", "generator"]], "llambda.generator.counterfactual": [[9, 1, 1, "", "CounterfactualGenerator"]], "llambda.generator.counterfactual.CounterfactualGenerator": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "create_prompts"], [9, 2, 1, "", "estimate_token_cost"], [9, 2, 1, "", "generate_responses"], [9, 2, 1, "", "neutralize_tokens"], [9, 2, 1, "", "parse_texts"]], "llambda.generator.generator": [[11, 1, 1, "", "ResponseGenerator"]], "llambda.generator.generator.ResponseGenerator": [[11, 2, 1, "", "__init__"], [11, 3, 1, "", "cost_mapping"], [11, 2, 1, "", "estimate_token_cost"], [11, 2, 1, "", "generate_responses"]], "llambda.metrics": [[13, 0, 0, "-", "classification"], [30, 0, 0, "-", "counterfactual"], [45, 0, 0, "-", "recommendation"], [58, 0, 0, "-", "stereotype"], [71, 0, 0, "-", "toxicity"]], "llambda.metrics.classification": [[14, 0, 0, "-", "classification"], [16, 0, 0, "-", "metrics"]], "llambda.metrics.classification.classification": [[15, 1, 1, "", "ClassificationMetrics"]], "llambda.metrics.classification.classification.ClassificationMetrics": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics": [[17, 0, 0, "-", "baseclass"], [20, 0, 0, "-", "false_discovery"], [22, 0, 0, "-", "false_negative"], [24, 0, 0, "-", "false_omission"], [26, 0, 0, "-", "false_positive"], [28, 0, 0, "-", "predicted_prevalence"]], "llambda.metrics.classification.metrics.baseclass": [[18, 0, 0, "-", "metrics"]], "llambda.metrics.classification.metrics.baseclass.metrics": [[19, 1, 1, "", "Metric"]], "llambda.metrics.classification.metrics.baseclass.metrics.Metric": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_discovery": [[21, 1, 1, "", "FalseDiscoveryRateParity"]], "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_negative": [[23, 1, 1, "", "FalseNegativeRateParity"]], "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_omission": [[25, 1, 1, "", "FalseOmissionRateParity"]], "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_positive": [[27, 1, 1, "", "FalsePositiveRateParity"]], "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.predicted_prevalence": [[29, 1, 1, "", "PredictedPrevalenceRateParity"]], "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual": [[31, 0, 0, "-", "counterfactual"], [33, 0, 0, "-", "metrics"]], "llambda.metrics.counterfactual.counterfactual": [[32, 1, 1, "", "CounterfactualMetrics"]], "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[32, 2, 1, "", "__init__"], [32, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics": [[34, 0, 0, "-", "baseclass"], [37, 0, 0, "-", "bleu"], [39, 0, 0, "-", "cosine"], [41, 0, 0, "-", "rougel"], [43, 0, 0, "-", "sentimentbias"]], "llambda.metrics.counterfactual.metrics.baseclass": [[35, 0, 0, "-", "metrics"]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[36, 1, 1, "", "Metric"]], "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[36, 2, 1, "", "__init__"], [36, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.bleu": [[38, 1, 1, "", "BleuSimilarity"]], "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.cosine": [[40, 1, 1, "", "CosineSimilarity"]], "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.rougel": [[42, 1, 1, "", "RougelSimilarity"]], "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[44, 1, 1, "", "SentimentBias"]], "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation": [[46, 0, 0, "-", "metrics"], [56, 0, 0, "-", "recommendation"]], "llambda.metrics.recommendation.metrics": [[47, 0, 0, "-", "baseclass"], [50, 0, 0, "-", "jaccard"], [52, 0, 0, "-", "prag"], [54, 0, 0, "-", "serp"]], "llambda.metrics.recommendation.metrics.baseclass": [[48, 0, 0, "-", "metrics"]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[49, 1, 1, "", "Metric"]], "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.jaccard": [[51, 1, 1, "", "JaccardSimilarity"]], "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.prag": [[53, 1, 1, "", "PRAG"]], "llambda.metrics.recommendation.metrics.prag.PRAG": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.serp": [[55, 1, 1, "", "SERP"]], "llambda.metrics.recommendation.metrics.serp.SERP": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.recommendation": [[57, 1, 1, "", "RecommendationMetrics"]], "llambda.metrics.recommendation.recommendation.RecommendationMetrics": [[57, 2, 1, "", "__init__"], [57, 2, 1, "", "evaluate_against_neutral"], [57, 2, 1, "", "evaluate_pairwise"]], "llambda.metrics.stereotype": [[59, 0, 0, "-", "metrics"], [69, 0, 0, "-", "stereotype"]], "llambda.metrics.stereotype.metrics": [[60, 0, 0, "-", "associations"], [62, 0, 0, "-", "baseclass"], [65, 0, 0, "-", "classifier"], [67, 0, 0, "-", "cooccurrence"]], "llambda.metrics.stereotype.metrics.associations": [[61, 1, 1, "", "StereotypicalAssociations"]], "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.metrics.baseclass": [[63, 0, 0, "-", "metrics"]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[64, 1, 1, "", "Metric"]], "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.metrics.classifier": [[66, 1, 1, "", "StereotypeClassifier"]], "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[66, 2, 1, "", "__init__"], [66, 2, 1, "", "evaluate"], [66, 2, 1, "", "get_stereotype_scores"]], "llambda.metrics.stereotype.metrics.cooccurrence": [[68, 1, 1, "", "CooccurrenceBiasMetric"]], "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.stereotype": [[70, 1, 1, "", "StereotypeMetrics"]], "llambda.metrics.stereotype.stereotype.StereotypeMetrics": [[70, 2, 1, "", "__init__"], [70, 2, 1, "", "evaluate"]], "llambda.metrics.toxicity": [[72, 0, 0, "-", "toxicity"]], "llambda.metrics.toxicity.toxicity": [[73, 1, 1, "", "ToxicityMetrics"]], "llambda.metrics.toxicity.toxicity.ToxicityMetrics": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "evaluate"], [73, 2, 1, "", "get_toxicity_scores"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "terms": {"": 61, "0": [15, 23, 25, 27, 29, 44, 66, 68, 73], "03035": 68, "03064": 44, "06520": 6, "07": 11, "07609": 57, "08": 11, "08412": 6, "09110": [61, 73], "1": [15, 23, 25, 27, 29, 44], "10853": [38, 40, 42], "11462": 66, "11698": 11, "1607": 6, "1711": 6, "1904": 68, "1911": 44, "2009": 66, "2016": 6, "2018": 6, "2019": 68, "2020": [11, 73], "2023": [57, 61, 73], "2024": 11, "2211": [61, 73], "2305": 57, "2306": 11, "2407": [38, 40, 42], "25": [9, 11, 66, 70, 73], "250": [66, 73], "3": [0, 73, 76], "30": [9, 11], "301": [11, 73], "325": 73, "4": 6, "5": [44, 66], "9": [0, 76], "95": 68, "A": [3, 9, 11, 15, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "By": [3, 9, 11], "For": [9, 11, 38, 40, 42, 44, 57, 61, 73], "If": [0, 3, 9, 11, 32, 42, 44, 61, 66, 68, 70, 73, 76], "It": 57, "Not": [61, 68], "One": [44, 61], "The": [0, 9, 11, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 57, 61, 66, 68, 73, 76], "These": 66, "To": [0, 76], "__init__": [3, 9, 11, 15, 19, 21, 23, 25, 27, 29, 32, 36, 38, 40, 42, 44, 49, 51, 53, 55, 57, 61, 64, 66, 68, 70, 73], "_group_counts_to_bia": 61, "ab": [6, 11, 38, 40, 42, 57, 61, 68, 73], "abc": [19, 36, 49, 64], "abl": [3, 73], "about": [9, 11], "abstract": [19, 36, 49, 64], "accept": [44, 73], "access": [0, 76], "accuraci": [53, 57], "aclanthologi": [11, 73], "across": [57, 66, 70, 73], "activ": [0, 76], "adapt": [6, 44, 61], "adject": [6, 61, 68], "aforement": [3, 32], "al": [6, 11, 57, 61, 73], "all": [3, 15, 19, 32, 36, 38, 40, 42, 44, 49, 64, 66, 70, 73], "among": 9, "an": [0, 3, 32, 44, 51, 53, 55, 66, 70, 73, 76], "analog": [32, 38, 40, 42, 44, 57], "ani": [11, 57, 73], "anoth": [51, 53, 55], "api": [3, 9, 11, 75], "appli": [66, 70, 73], "applic": [44, 73], "ar": [3, 9, 11, 32, 57, 61, 66, 68, 70, 73], "argument": [11, 29, 73], "arrai": [15, 21, 23, 25, 27, 29], "arxiv": [6, 11, 38, 40, 42, 44, 57, 61, 66, 68, 73], "asian": 6, "assess": 42, "assist": [9, 11, 15], "associ": 70, "assum": 44, "async": [3, 9, 11], "asynchron": 9, "atleast": [66, 70, 73], "attribut": [3, 9, 32, 38, 40, 42, 44, 57, 68, 70], "avail": 3, "averag": [61, 66, 68, 70, 73], "avoid": [3, 9, 11, 66, 73], "back": 57, "bad": 57, "base": [3, 9, 11, 15, 19, 21, 23, 25, 27, 29, 32, 36, 38, 40, 42, 44, 49, 51, 53, 55, 57, 61, 64, 66, 68, 70, 73], "batch": [66, 73], "batch_siz": [66, 73], "befor": [0, 3, 32, 76], "being": 9, "belong": 57, "beta": 68, "between": [21, 23, 25, 27, 29, 38, 40, 42, 44, 51, 53, 55], "bia": [6, 32, 44, 61, 66, 68, 70, 73], "bieber": 57, "binar": 44, "binari": [15, 21, 23, 25, 27, 29], "blank": 57, "bleu": 32, "blood": 57, "blue": [3, 32], "bolukbasi": 6, "bool": [15, 21, 23, 25, 27, 29, 66, 70, 73], "boolean": [3, 32], "bordia": 68, "both": 70, "bowman": 68, "by_prompt": 73, "calcul": [3, 38, 40, 42, 44, 57, 61, 66, 68, 70, 73], "call": [3, 9, 11, 66, 73], "can": 44, "cardigan": 57, "care": 57, "castl": 57, "categori": [6, 44, 61, 66, 68, 70], "chain": [3, 9, 11], "check": 75, "class": [2, 3, 8, 9, 10, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73], "classif": [44, 66, 73], "classifi": [3, 44, 70, 73], "co": [40, 61, 68], "cob": 68, "code": [44, 61, 68], "com": [0, 76], "common": 6, "compat": [9, 11], "complet": [9, 11], "comput": [3, 6, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "conda": [0, 76], "condit": 68, "consist": 57, "constant": 9, "constructor": [3, 9, 11], "contain": [3, 9, 11, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 57, 66, 70, 73], "context": 68, "convent": 11, "cooccurr": 70, "correspond": [9, 11, 57, 61, 73], "cosin": [32, 38, 42, 44], "cost": [5, 9, 11], "cost_map": 11, "count": [9, 11, 61], "counterfactu": 3, "counterfactualgener": [3, 32], "cpu": [3, 73], "creat": [0, 9, 19, 36, 49, 64, 76], "create_prompt": 9, "crfm": [6, 44, 61], "cuda": [3, 73], "current": [3, 73], "custom": [9, 11, 44], "custom_classifi": [44, 73], "custom_dict": 9, "custom_list": 9, "cv": [0, 76], "data": [3, 9, 11, 66, 70, 73], "datafram": 3, "dataset": 11, "decodingtrust": 11, "default": [3, 9, 11, 15, 21, 23, 25, 27, 29, 32, 40, 42, 44, 57, 61, 66, 68, 70, 73], "defin": [44, 68, 73], "delic": 57, "demograph": [44, 61, 68], "demographic_categori": 61, "demographic_group": 61, "demographic_group_word_list": [61, 68], "desir": 3, "detoxify_origin": [3, 73], "detoxify_unbias": [3, 73], "deviat": 57, "devic": [3, 73], "dict": [3, 9, 11, 57, 61, 68, 73], "dictinari": 68, "dictionari": [3, 9, 11, 15, 32, 57, 61, 66, 68, 70, 73], "did": [9, 11], "differ": [11, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 57, 61], "directli": [0, 76], "dispar": [21, 23, 25, 27, 29], "distanc": [38, 40, 42, 44], "distribut": 44, "dive": 57, "diverg": 61, "do": 57, "don": 57, "done": 9, "dream": 57, "dy": [66, 73], "dynabench": 73, "e": 57, "each": [6, 9, 11, 32, 38, 40, 42, 44, 57, 61, 68], "either": 9, "element": [9, 57], "els": 68, "emnlp": [11, 73], "enabl": [38, 40, 42, 57, 66, 73], "ensembl": 73, "env": [0, 76], "environ": [0, 76], "equal": [44, 61, 73], "equival": 9, "error": [3, 9, 11], "estim": [9, 11], "estimate_token_cost": [9, 11], "et": [6, 11, 57, 61, 73], "etc": 6, "evalu": [3, 11, 15, 19, 21, 23, 25, 27, 29, 32, 36, 38, 40, 42, 44, 49, 51, 53, 55, 61, 64, 66, 68, 70, 73], "evaluate_against_neutr": 57, "evaluate_pairwis": 57, "ever": 57, "exactli": [15, 21, 23, 25, 27, 29, 68], "exampl": [9, 11, 57], "example_respons": [9, 11], "except": 57, "expect": [66, 70, 73], "export": 3, "export_result": 3, "extens": 66, "extent": 61, "factor": 68, "fair": [15, 57], "fairllm": 57, "fals": [15, 19, 21, 23, 25, 27, 29, 66, 70, 73], "femal": [6, 9], "few": [32, 70], "file": [3, 6], "file_nam": 3, "find": [11, 73], "first": [0, 66, 73, 76], "float": [3, 9, 11, 19, 21, 23, 25, 27, 29, 36, 44, 49, 51, 53, 55, 61, 66, 68, 73], "folklor": 57, "follow": [6, 61], "format": [3, 57], "four": 66, "fraction": [66, 70, 73], "from": [0, 3, 6, 11, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73, 76], "full": 9, "function": [9, 11, 19, 36, 49, 64], "further": 75, "galwai": 57, "gap": [53, 57], "garg": 6, "gehman": [11, 73], "gender": [6, 9, 32, 61, 66, 68, 70], "gener": [3, 32, 38, 40, 42, 44, 57, 61, 66, 68, 70, 73], "generate_respons": [9, 11], "get": [3, 9, 11, 57, 61], "get_stereotype_scor": 66, "get_toxicity_scor": 73, "girl": 57, "git": [0, 76], "github": [0, 76], "give": 57, "given": [9, 11], "gpt": [9, 11], "gpu": [3, 73], "ground": [15, 21, 23, 25, 27, 29], "group": [9, 15, 19, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 57, 61], "group_dict_list": 57, "happier": 57, "hate": 73, "have": [44, 68, 73], "he": 9, "health": [0, 76], "helm": [6, 44, 61], "help": [9, 11], "her": 9, "higher": [0, 76], "hill": 57, "him": 9, "hispan": 6, "hous": 57, "how": [3, 9, 11, 38, 40, 42, 44, 68, 75], "http": [0, 6, 11, 38, 40, 42, 44, 57, 61, 66, 68, 73, 76], "huggingfac": 40, "i": [3, 9, 11, 29, 40, 42, 44, 57, 61, 66, 68, 70, 73], "ident": 57, "identifi": 9, "ignor": [66, 73], "implement": [19, 36, 49, 64], "includ": [6, 9, 11, 66, 70, 73, 75], "indic": [3, 15, 21, 23, 25, 27, 29, 32, 44, 73], "infinit": 68, "inform": [5, 11, 38, 40, 42, 44, 57, 61, 73, 75], "input": [3, 11, 44, 66, 73], "instal": 75, "int": [3, 9, 11, 66, 73], "interior": 57, "invok": 5, "isol": [0, 76], "jaccard": 57, "jupyt": [0, 76], "justin": 57, "k": 57, "kei": [9, 11, 66, 68, 70], "kernel": [0, 66, 73, 76], "l": 42, "l6": 40, "label": [15, 21, 23, 25, 27, 29], "langchain": [3, 9, 11], "langchain_llm": [3, 9, 11], "languag": [32, 38, 40, 42, 44, 61, 66, 68, 73], "larg": [66, 73], "latter": 44, "lego": 57, "len": 9, "length": [9, 44, 57, 73], "level": [66, 70, 73], "leverag": [3, 44, 73], "liang": [61, 73], "like": [0, 15, 21, 23, 25, 27, 29, 40, 76], "limit": [3, 9, 11], "list": [3, 6, 9, 11, 15, 32, 36, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "list1": [49, 51, 53, 55], "list2": [49, 51, 53, 55], "llambda": [0, 76], "llm": [3, 5, 9, 11, 40, 44, 51, 53, 55, 57, 66, 70, 73], "look": [0, 57, 76], "loud": 57, "love": 57, "made": 57, "mai": [21, 23, 25, 27, 29], "make": [3, 9, 11], "male": [6, 9], "man": [6, 9], "mani": [3, 9, 11], "mask": [3, 9, 32], "max": 57, "max_calls_per_min": [3, 9, 11], "maximum": [66, 70, 73], "me": 57, "mean": [38, 40, 42, 44, 57, 61, 68], "measur": [61, 68], "mention": [32, 38, 40, 42, 44, 57], "metadata": [9, 11], "method": [3, 9, 11, 15, 19, 21, 23, 25, 27, 29, 32, 36, 38, 40, 42, 44, 49, 51, 53, 55, 57, 61, 64, 66, 68, 70, 73], "metric": [3, 6], "metric_typ": 15, "min": 57, "minilm": 40, "minut": [3, 9, 11], "misinform": [55, 57], "model": [3, 9, 11, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 51, 53, 55, 61, 66, 68, 73], "modul": [1, 4, 7, 12, 13, 16, 17, 30, 33, 34, 45, 46, 47, 58, 59, 62, 71], "more": [38, 40, 42, 44, 57, 61, 73], "most": 6, "must": [9, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 61, 68, 73], "name": [0, 3, 6, 9, 11, 15, 32, 57, 70, 76], "natural_language_api": 44, "need": [19, 36, 49, 64], "neg": [15, 21, 23, 25, 27, 29, 44], "neutral": [9, 32], "neutral_dict": 57, "neutralize_token": [3, 9, 32], "never": 57, "new": [0, 19, 36, 49, 64, 76], "non_completion_r": [9, 11], "none": [3, 9, 11, 15, 19, 23, 25, 27, 29, 32, 40, 44, 61, 66, 68, 70, 73], "note": [9, 11], "notebook": [0, 76], "now": [0, 76], "number": [9, 11, 61], "object": [3, 9, 11, 15, 32, 44, 57, 61, 66, 68, 70, 73], "occur": [9, 61], "occurr": [61, 68], "off": 57, "omiss": 25, "onc": 61, "one": 15, "onli": [9, 11, 29, 44, 66, 70, 73], "openai": [9, 11], "option": [3, 9, 11], "org": [6, 11, 38, 40, 42, 44, 57, 61, 66, 68, 73], "other": [3, 9, 11], "otherwis": [66, 70, 73], "out": [57, 75], "output": [3, 11, 32, 38, 40, 42, 44, 61, 66, 68, 70, 73], "over": [38, 40, 42, 44, 61, 66, 68, 70, 73], "packag": [44, 61], "page": [55, 57], "pair": [32, 38, 40, 42, 44, 70], "pairwis": [15, 38, 40, 42, 44, 53, 57], "paper": 75, "param": 68, "paramet": [9, 11, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "pariti": [21, 23, 25, 27, 29, 44], "pars": 9, "parse_text": 9, "parti": 44, "pass": [3, 9, 11], "pdf": [44, 57, 66], "per": [3, 9, 11, 66, 70, 73], "perfect": 57, "photograph": 57, "pip": [0, 76], "place": 5, "placehold": 29, "po": 44, "posit": [15, 23, 25, 27, 29], "prag": 57, "preced": [44, 61, 68, 73], "predict": [3, 15, 21, 23, 25, 27, 29, 44, 73], "prefer": 42, "present": 66, "preval": 29, "prevent": [66, 73], "print": 3, "print_result": 3, "probabl": [66, 68, 70, 73], "process": [9, 11], "profess": [6, 61, 66], "project": 75, "prompt": [3, 9, 11, 57, 66, 70, 73], "protect": [9, 32, 38, 40, 42, 44, 57, 68], "provid": [3, 9, 11, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "punit": 15, "py": 9, "python": [0, 76], "r4": 73, "race": [6, 9, 32, 66, 70], "rang": 57, "rank": [53, 57], "rate": [3, 9, 11, 21, 23, 25, 27, 29, 68], "ratio": [15, 19, 21, 23, 25, 27, 29, 68], "rec_lists1": 57, "rec_lists2": 57, "recommend": [0, 19, 40, 66, 70, 73, 76], "refer": [6, 9, 38, 40, 42, 44, 57, 61, 73], "rel": 68, "relat": 5, "relev": [3, 9, 11], "religion": 66, "replac": 9, "repositori": [0, 76], "represent": [15, 61], "research": 68, "respect": [15, 23, 25, 27, 29, 61], "respons": [3, 9, 11, 32, 61, 64, 66, 68, 70, 73], "response_sample_s": [9, 11], "responsegener": 9, "result": [3, 55, 57, 66, 70, 73], "return": [9, 11, 15, 19, 21, 23, 25, 27, 29, 32, 36, 38, 40, 42, 44, 49, 51, 53, 55, 57, 61, 66, 68, 70, 73], "return_data": [66, 70, 73], "return_df": 66, "roberta": 73, "roug": 42, "rouge_metr": 42, "rougel": [3, 32], "rougelsum": 42, "same": [32, 38, 40, 42, 44, 57], "score": [38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "search": [55, 57], "section": 75, "see": [11, 40], "select": [42, 61, 68], "self": 11, "sentenc": [40, 42], "sentiment": [32, 44], "serp": 57, "serv": [19, 36, 49, 64], "set": [3, 11, 44, 66, 73], "shake": 57, "shape": 57, "she": 9, "shell": [0, 76], "should": [0, 9, 57, 66, 70, 73, 76], "similar": [38, 40, 42, 44, 51, 57], "sing": 57, "singl": [66, 70, 73], "size": [66, 73], "social": [38, 40, 42], "sort_model": 40, "space": [40, 57], "specif": 6, "specifi": [3, 9, 11, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 61, 66, 68, 70, 73], "speech": 73, "standard": 57, "stanford": [6, 44, 61], "step": 61, "stereotyp": 3, "stereotype_word_list": [61, 68], "storag": 5, "stori": 57, "str": [3, 9, 11, 15, 40, 57, 61, 66, 68, 73], "strict": 44, "string": [3, 9, 11, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "strong": 44, "style": 57, "subset": [70, 73], "substitut": [9, 38, 40, 42], "support": [3, 32, 70], "system": [9, 11], "system_prompt": [9, 11], "t": 57, "take": [44, 61, 68, 73], "target": [44, 61, 68, 73], "target_categori": [61, 68], "team": 57, "temperatur": [3, 9, 11], "templat": [19, 36, 49, 64], "term": 61, "text": [3, 9, 32, 38, 40, 42, 44, 61, 66, 70, 73], "texts1": [32, 36, 38, 40, 42, 44], "texts2": [32, 36, 38, 40, 42, 44], "thei": 57, "thi": [3, 6, 9, 11, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 51, 53, 55, 57, 61, 66, 68, 70, 73], "think": 57, "third": 44, "those": [57, 66], "thresh": 44, "threshold": [44, 66, 73], "tiktoken_model_nam": [9, 11], "time": 61, "togeth": 57, "token": [5, 9, 11], "too": [66, 73], "torch": [3, 73], "total": [9, 11], "toxic": [3, 11], "toxic_threshold": 73, "toxicity_devic": 3, "toxigen": 73, "transform": 40, "true": [3, 32, 66], "truth": [15, 21, 23, 25, 27, 29], "two": [9, 11, 15, 21, 23, 25, 27, 29, 38, 40, 42, 44, 51, 53, 55, 57, 66, 68, 70], "txt": 3, "type": [3, 9, 11, 15, 19, 21, 23, 25, 27, 29, 32, 36, 38, 40, 42, 44, 49, 51, 53, 55, 57, 61, 66, 68, 70, 73], "union": 36, "uniqu": [15, 21, 23, 25, 27, 29], "us": [0, 3, 9, 11, 32, 40, 42, 44, 57, 61, 66, 68, 73, 76], "usag": 75, "user": [0, 3, 9, 11, 19, 21, 23, 25, 27, 29, 36, 44, 49, 64, 73, 76], "utilis": 6, "v2": 40, "vader": 44, "valu": [3, 11, 15, 21, 23, 25, 27, 29, 32, 53, 55, 57, 61, 66, 68, 70, 73], "variat": [38, 40, 42], "vector": 40, "via": 57, "view": 75, "virtual": [0, 76], "w": 68, "wasserstein": 44, "we": [0, 57, 61, 76], "weak": 44, "weight": 68, "were": [66, 70, 73], "what": [9, 57], "when": [9, 11, 19, 36, 40, 49, 64, 68], "whether": [9, 15, 21, 23, 25, 27, 29, 32, 38, 40, 42, 44, 66, 70, 73], "which": [3, 9, 11, 40, 42, 61, 66, 68, 70, 73], "white": [6, 75], "wildest": 57, "window": 68, "wise": 42, "within": [32, 38, 40, 42, 44], "woman": [6, 9], "word": [6, 9, 61, 68], "word_list": 9, "would": [0, 76], "y_pred": [15, 19, 21, 23, 25, 27, 29], "y_true": [15, 19, 21, 23, 25, 27, 29], "you": [0, 9, 11, 57, 76], "your": [0, 76], "zhang": 57}, "titles": ["Usage", "llambda.auto", "llambda.auto.auto", "llambda.auto.auto.AutoEval", "llambda.constants", "llambda.constants.cost_data", "llambda.constants.word_lists", "llambda.generator", "llambda.generator.counterfactual", "llambda.generator.counterfactual.CounterfactualGenerator", "llambda.generator.generator", "llambda.generator.generator.ResponseGenerator", "llambda.metrics", "llambda.metrics.classification", "llambda.metrics.classification.classification", "llambda.metrics.classification.classification.ClassificationMetrics", "llambda.metrics.classification.metrics", "llambda.metrics.classification.metrics.baseclass", "llambda.metrics.classification.metrics.baseclass.metrics", "llambda.metrics.classification.metrics.baseclass.metrics.Metric", "llambda.metrics.classification.metrics.false_discovery", "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "llambda.metrics.classification.metrics.false_negative", "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "llambda.metrics.classification.metrics.false_omission", "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "llambda.metrics.classification.metrics.false_positive", "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "llambda.metrics.classification.metrics.predicted_prevalence", "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "llambda.metrics.counterfactual", "llambda.metrics.counterfactual.counterfactual", "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "llambda.metrics.counterfactual.metrics", "llambda.metrics.counterfactual.metrics.baseclass", "llambda.metrics.counterfactual.metrics.baseclass.metrics", "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "llambda.metrics.counterfactual.metrics.bleu", "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "llambda.metrics.counterfactual.metrics.cosine", "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "llambda.metrics.counterfactual.metrics.rougel", "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "llambda.metrics.counterfactual.metrics.sentimentbias", "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "llambda.metrics.recommendation", "llambda.metrics.recommendation.metrics", "llambda.metrics.recommendation.metrics.baseclass", "llambda.metrics.recommendation.metrics.baseclass.metrics", "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "llambda.metrics.recommendation.metrics.jaccard", "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "llambda.metrics.recommendation.metrics.prag", "llambda.metrics.recommendation.metrics.prag.PRAG", "llambda.metrics.recommendation.metrics.serp", "llambda.metrics.recommendation.metrics.serp.SERP", "llambda.metrics.recommendation.recommendation", "llambda.metrics.recommendation.recommendation.RecommendationMetrics", "llambda.metrics.stereotype", "llambda.metrics.stereotype.metrics", "llambda.metrics.stereotype.metrics.associations", "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "llambda.metrics.stereotype.metrics.baseclass", "llambda.metrics.stereotype.metrics.baseclass.metrics", "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "llambda.metrics.stereotype.metrics.classifier", "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "llambda.metrics.stereotype.metrics.cooccurrence", "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "llambda.metrics.stereotype.stereotype", "llambda.metrics.stereotype.stereotype.StereotypeMetrics", "llambda.metrics.toxicity", "llambda.metrics.toxicity.toxicity", "llambda.metrics.toxicity.toxicity.ToxicityMetrics", "API", "Welcome to LLaMBDA\u2019s documentation!", "Usage"], "titleterms": {"": 75, "api": 74, "associ": [60, 61], "auto": [1, 2, 3], "autoev": 3, "baseclass": [17, 18, 19, 34, 35, 36, 47, 48, 49, 62, 63, 64], "bleu": [37, 38], "bleusimilar": 38, "classif": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "classifi": [65, 66], "classificationmetr": 15, "constant": [4, 5, 6], "content": 75, "cooccurr": [67, 68], "cooccurrencebiasmetr": 68, "cosin": [39, 40], "cosinesimilar": 40, "cost_data": 5, "counterfactu": [8, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "counterfactualgener": 9, "counterfactualmetr": 32, "document": 75, "false_discoveri": [20, 21], "false_neg": [22, 23], "false_omiss": [24, 25], "false_posit": [26, 27], "falsediscoveryratepar": 21, "falsenegativeratepar": 23, "falseomissionratepar": 25, "falsepositiveratepar": 27, "gener": [7, 8, 9, 10, 11], "instal": [0, 76], "jaccard": [50, 51], "jaccardsimilar": 51, "llambda": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75], "metric": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "paramet": 3, "prag": [52, 53], "predicted_preval": [28, 29], "predictedprevalenceratepar": 29, "recommend": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "recommendationmetr": 57, "responsegener": 11, "return": 3, "rougel": [41, 42], "rougelsimilar": 42, "sentimentbia": [43, 44], "serp": [54, 55], "stereotyp": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "stereotypeclassifi": 66, "stereotypemetr": 70, "stereotypicalassoci": 61, "toxic": [71, 72, 73], "toxicitymetr": 73, "usag": [0, 76], "welcom": 75, "word_list": 6}})