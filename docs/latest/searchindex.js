Search.setIndex({"alltitles": {"API": [[146, null], [295, null]], "Contents:": [[296, null]], "Installation": [[148, "gettingstarted"], [297, "gettingstarted"]], "Parameters:": [[2, "parameters"], [2, "id1"], [2, "id2"], [75, "parameters"], [75, "id1"], [75, "id2"], [151, "parameters"], [151, "id1"], [151, "id2"], [224, "parameters"], [224, "id1"], [224, "id2"]], "Returns:": [[2, "returns"], [75, "returns"], [151, "returns"], [224, "returns"]], "Usage": [[148, null], [297, null]], "Welcome to LangFair\u2019s documentation!": [[147, null], [296, null]], "langfair.auto": [[0, null], [149, null]], "langfair.auto.auto": [[1, null], [150, null]], "langfair.auto.auto.AutoEval": [[2, null], [151, null]], "langfair.constants": [[3, null], [152, null]], "langfair.constants.cost_data": [[4, null], [153, null]], "langfair.constants.word_lists": [[5, null], [154, null]], "langfair.generator": [[6, null], [155, null]], "langfair.generator.counterfactual": [[7, null], [156, null]], "langfair.generator.counterfactual.CounterfactualGenerator": [[8, null], [157, null]], "langfair.generator.generator": [[9, null], [158, null]], "langfair.generator.generator.ResponseGenerator": [[10, null], [159, null]], "langfair.metrics": [[11, null], [160, null]], "langfair.metrics.classification": [[12, null], [161, null]], "langfair.metrics.classification.classification": [[13, null], [162, null]], "langfair.metrics.classification.classification.ClassificationMetrics": [[14, null], [163, null]], "langfair.metrics.classification.metrics": [[15, null], [164, null]], "langfair.metrics.classification.metrics.baseclass": [[16, null], [165, null]], "langfair.metrics.classification.metrics.baseclass.metrics": [[17, null], [166, null]], "langfair.metrics.classification.metrics.baseclass.metrics.Metric": [[18, null], [167, null]], "langfair.metrics.classification.metrics.false_discovery": [[19, null], [168, null]], "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[20, null], [169, null]], "langfair.metrics.classification.metrics.false_negative": [[21, null], [170, null]], "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[22, null], [171, null]], "langfair.metrics.classification.metrics.false_omission": [[23, null], [172, null]], "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[24, null], [173, null]], "langfair.metrics.classification.metrics.false_positive": [[25, null], [174, null]], "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[26, null], [175, null]], "langfair.metrics.classification.metrics.predicted_prevalence": [[27, null], [176, null]], "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[28, null], [177, null]], "langfair.metrics.counterfactual": [[29, null], [178, null]], "langfair.metrics.counterfactual.counterfactual": [[30, null], [179, null]], "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[31, null], [180, null]], "langfair.metrics.counterfactual.metrics": [[32, null], [181, null]], "langfair.metrics.counterfactual.metrics.baseclass": [[33, null], [182, null]], "langfair.metrics.counterfactual.metrics.baseclass.metrics": [[34, null], [183, null]], "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[35, null], [184, null]], "langfair.metrics.counterfactual.metrics.bleu": [[36, null], [185, null]], "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[37, null], [186, null]], "langfair.metrics.counterfactual.metrics.cosine": [[38, null], [187, null]], "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[39, null], [188, null]], "langfair.metrics.counterfactual.metrics.rougel": [[40, null], [189, null]], "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[41, null], [190, null]], "langfair.metrics.counterfactual.metrics.sentimentbias": [[42, null], [191, null]], "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[43, null], [192, null]], "langfair.metrics.recommendation": [[44, null], [193, null]], "langfair.metrics.recommendation.metrics": [[45, null], [194, null]], "langfair.metrics.recommendation.metrics.baseclass": [[46, null], [195, null]], "langfair.metrics.recommendation.metrics.baseclass.metrics": [[47, null], [196, null]], "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric": [[48, null], [197, null]], "langfair.metrics.recommendation.metrics.jaccard": [[49, null], [198, null]], "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[50, null], [199, null]], "langfair.metrics.recommendation.metrics.prag": [[51, null], [200, null]], "langfair.metrics.recommendation.metrics.prag.PRAG": [[52, null], [201, null]], "langfair.metrics.recommendation.metrics.serp": [[53, null], [202, null]], "langfair.metrics.recommendation.metrics.serp.SERP": [[54, null], [203, null]], "langfair.metrics.recommendation.recommendation": [[55, null], [204, null]], "langfair.metrics.recommendation.recommendation.RecommendationMetrics": [[56, null], [205, null]], "langfair.metrics.stereotype": [[57, null], [206, null]], "langfair.metrics.stereotype.metrics": [[58, null], [207, null]], "langfair.metrics.stereotype.metrics.associations": [[59, null], [208, null]], "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[60, null], [209, null]], "langfair.metrics.stereotype.metrics.baseclass": [[61, null], [210, null]], "langfair.metrics.stereotype.metrics.baseclass.metrics": [[62, null], [211, null]], "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric": [[63, null], [212, null]], "langfair.metrics.stereotype.metrics.classifier": [[64, null], [213, null]], "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[65, null], [214, null]], "langfair.metrics.stereotype.metrics.cooccurrence": [[66, null], [215, null]], "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[67, null], [216, null]], "langfair.metrics.stereotype.stereotype": [[68, null], [217, null]], "langfair.metrics.stereotype.stereotype.StereotypeMetrics": [[69, null], [218, null]], "langfair.metrics.toxicity": [[70, null], [219, null]], "langfair.metrics.toxicity.toxicity": [[71, null], [220, null]], "langfair.metrics.toxicity.toxicity.ToxicityMetrics": [[72, null], [221, null]], "llambda.auto": [[73, null], [222, null]], "llambda.auto.auto": [[74, null], [223, null]], "llambda.auto.auto.AutoEval": [[75, null], [224, null]], "llambda.constants": [[76, null], [225, null]], "llambda.constants.cost_data": [[77, null], [226, null]], "llambda.constants.word_lists": [[78, null], [227, null]], "llambda.generator": [[79, null], [228, null]], "llambda.generator.counterfactual": [[80, null], [229, null]], "llambda.generator.counterfactual.CounterfactualGenerator": [[81, null], [230, null]], "llambda.generator.generator": [[82, null], [231, null]], "llambda.generator.generator.ResponseGenerator": [[83, null], [232, null]], "llambda.metrics": [[84, null], [233, null]], "llambda.metrics.classification": [[85, null], [234, null]], "llambda.metrics.classification.classification": [[86, null], [235, null]], "llambda.metrics.classification.classification.ClassificationMetrics": [[87, null], [236, null]], "llambda.metrics.classification.metrics": [[88, null], [237, null]], "llambda.metrics.classification.metrics.baseclass": [[89, null], [238, null]], "llambda.metrics.classification.metrics.baseclass.metrics": [[90, null], [239, null]], "llambda.metrics.classification.metrics.baseclass.metrics.Metric": [[91, null], [240, null]], "llambda.metrics.classification.metrics.false_discovery": [[92, null], [241, null]], "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[93, null], [242, null]], "llambda.metrics.classification.metrics.false_negative": [[94, null], [243, null]], "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[95, null], [244, null]], "llambda.metrics.classification.metrics.false_omission": [[96, null], [245, null]], "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[97, null], [246, null]], "llambda.metrics.classification.metrics.false_positive": [[98, null], [247, null]], "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[99, null], [248, null]], "llambda.metrics.classification.metrics.predicted_prevalence": [[100, null], [249, null]], "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[101, null], [250, null]], "llambda.metrics.counterfactual": [[102, null], [251, null]], "llambda.metrics.counterfactual.counterfactual": [[103, null], [252, null]], "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[104, null], [253, null]], "llambda.metrics.counterfactual.metrics": [[105, null], [254, null]], "llambda.metrics.counterfactual.metrics.baseclass": [[106, null], [255, null]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[107, null], [256, null]], "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[108, null], [257, null]], "llambda.metrics.counterfactual.metrics.bleu": [[109, null], [258, null]], "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[110, null], [259, null]], "llambda.metrics.counterfactual.metrics.cosine": [[111, null], [260, null]], "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[112, null], [261, null]], "llambda.metrics.counterfactual.metrics.rougel": [[113, null], [262, null]], "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[114, null], [263, null]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[115, null], [264, null]], "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[116, null], [265, null]], "llambda.metrics.recommendation": [[117, null], [266, null]], "llambda.metrics.recommendation.metrics": [[118, null], [267, null]], "llambda.metrics.recommendation.metrics.baseclass": [[119, null], [268, null]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[120, null], [269, null]], "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric": [[121, null], [270, null]], "llambda.metrics.recommendation.metrics.jaccard": [[122, null], [271, null]], "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[123, null], [272, null]], "llambda.metrics.recommendation.metrics.prag": [[124, null], [273, null]], "llambda.metrics.recommendation.metrics.prag.PRAG": [[125, null], [274, null]], "llambda.metrics.recommendation.metrics.serp": [[126, null], [275, null]], "llambda.metrics.recommendation.metrics.serp.SERP": [[127, null], [276, null]], "llambda.metrics.recommendation.recommendation": [[128, null], [277, null]], "llambda.metrics.recommendation.recommendation.RecommendationMetrics": [[129, null], [278, null]], "llambda.metrics.stereotype": [[130, null], [279, null]], "llambda.metrics.stereotype.metrics": [[131, null], [280, null]], "llambda.metrics.stereotype.metrics.associations": [[132, null], [281, null]], "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[133, null], [282, null]], "llambda.metrics.stereotype.metrics.baseclass": [[134, null], [283, null]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[135, null], [284, null]], "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric": [[136, null], [285, null]], "llambda.metrics.stereotype.metrics.classifier": [[137, null], [286, null]], "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[138, null], [287, null]], "llambda.metrics.stereotype.metrics.cooccurrence": [[139, null], [288, null]], "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[140, null], [289, null]], "llambda.metrics.stereotype.stereotype": [[141, null], [290, null]], "llambda.metrics.stereotype.stereotype.StereotypeMetrics": [[142, null], [291, null]], "llambda.metrics.toxicity": [[143, null], [292, null]], "llambda.metrics.toxicity.toxicity": [[144, null], [293, null]], "llambda.metrics.toxicity.toxicity.ToxicityMetrics": [[145, null], [294, null]]}, "docnames": [".ipynb_checkpoints/_autosummary/langfair.auto", ".ipynb_checkpoints/_autosummary/langfair.auto.auto", ".ipynb_checkpoints/_autosummary/langfair.auto.auto.AutoEval", ".ipynb_checkpoints/_autosummary/langfair.constants", ".ipynb_checkpoints/_autosummary/langfair.constants.cost_data", ".ipynb_checkpoints/_autosummary/langfair.constants.word_lists", ".ipynb_checkpoints/_autosummary/langfair.generator", ".ipynb_checkpoints/_autosummary/langfair.generator.counterfactual", ".ipynb_checkpoints/_autosummary/langfair.generator.counterfactual.CounterfactualGenerator", ".ipynb_checkpoints/_autosummary/langfair.generator.generator", ".ipynb_checkpoints/_autosummary/langfair.generator.generator.ResponseGenerator", ".ipynb_checkpoints/_autosummary/langfair.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.classification", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.classification.ClassificationMetrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.baseclass", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_discovery", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_negative", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_omission", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_positive", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.predicted_prevalence", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.counterfactual", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.baseclass", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.bleu", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.cosine", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.rougel", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.baseclass", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.jaccard", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.prag", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.prag.PRAG", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.serp", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.serp.SERP", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.recommendation", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.recommendation.RecommendationMetrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.associations", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.baseclass", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.classifier", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.cooccurrence", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.stereotype", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.stereotype.StereotypeMetrics", ".ipynb_checkpoints/_autosummary/langfair.metrics.toxicity", ".ipynb_checkpoints/_autosummary/langfair.metrics.toxicity.toxicity", ".ipynb_checkpoints/_autosummary/langfair.metrics.toxicity.toxicity.ToxicityMetrics", ".ipynb_checkpoints/_autosummary/llambda.auto", ".ipynb_checkpoints/_autosummary/llambda.auto.auto", ".ipynb_checkpoints/_autosummary/llambda.auto.auto.AutoEval", ".ipynb_checkpoints/_autosummary/llambda.constants", ".ipynb_checkpoints/_autosummary/llambda.constants.cost_data", ".ipynb_checkpoints/_autosummary/llambda.constants.word_lists", ".ipynb_checkpoints/_autosummary/llambda.generator", ".ipynb_checkpoints/_autosummary/llambda.generator.counterfactual", ".ipynb_checkpoints/_autosummary/llambda.generator.counterfactual.CounterfactualGenerator", ".ipynb_checkpoints/_autosummary/llambda.generator.generator", ".ipynb_checkpoints/_autosummary/llambda.generator.generator.ResponseGenerator", ".ipynb_checkpoints/_autosummary/llambda.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.classification", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.classification.ClassificationMetrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.baseclass", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_discovery", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_negative", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_omission", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_positive", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.predicted_prevalence", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.counterfactual", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.baseclass", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.bleu", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.cosine", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.rougel", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.baseclass", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.jaccard", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.prag", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.serp", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.serp.SERP", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.recommendation", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.associations", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.baseclass", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.classifier", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.cooccurrence", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.stereotype", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics", ".ipynb_checkpoints/_autosummary/llambda.metrics.toxicity", ".ipynb_checkpoints/_autosummary/llambda.metrics.toxicity.toxicity", ".ipynb_checkpoints/_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics", ".ipynb_checkpoints/api-checkpoint", ".ipynb_checkpoints/index-checkpoint", ".ipynb_checkpoints/usage-checkpoint", "_autosummary/langfair.auto", "_autosummary/langfair.auto.auto", "_autosummary/langfair.auto.auto.AutoEval", "_autosummary/langfair.constants", "_autosummary/langfair.constants.cost_data", "_autosummary/langfair.constants.word_lists", "_autosummary/langfair.generator", "_autosummary/langfair.generator.counterfactual", "_autosummary/langfair.generator.counterfactual.CounterfactualGenerator", "_autosummary/langfair.generator.generator", "_autosummary/langfair.generator.generator.ResponseGenerator", "_autosummary/langfair.metrics", "_autosummary/langfair.metrics.classification", "_autosummary/langfair.metrics.classification.classification", "_autosummary/langfair.metrics.classification.classification.ClassificationMetrics", "_autosummary/langfair.metrics.classification.metrics", "_autosummary/langfair.metrics.classification.metrics.baseclass", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.classification.metrics.false_discovery", "_autosummary/langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "_autosummary/langfair.metrics.classification.metrics.false_negative", "_autosummary/langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "_autosummary/langfair.metrics.classification.metrics.false_omission", "_autosummary/langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "_autosummary/langfair.metrics.classification.metrics.false_positive", "_autosummary/langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "_autosummary/langfair.metrics.counterfactual", "_autosummary/langfair.metrics.counterfactual.counterfactual", "_autosummary/langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", "_autosummary/langfair.metrics.counterfactual.metrics", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.counterfactual.metrics.bleu", "_autosummary/langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", "_autosummary/langfair.metrics.counterfactual.metrics.cosine", "_autosummary/langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", "_autosummary/langfair.metrics.counterfactual.metrics.rougel", "_autosummary/langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "_autosummary/langfair.metrics.recommendation", "_autosummary/langfair.metrics.recommendation.metrics", "_autosummary/langfair.metrics.recommendation.metrics.baseclass", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.recommendation.metrics.jaccard", "_autosummary/langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "_autosummary/langfair.metrics.recommendation.metrics.prag", "_autosummary/langfair.metrics.recommendation.metrics.prag.PRAG", "_autosummary/langfair.metrics.recommendation.metrics.serp", "_autosummary/langfair.metrics.recommendation.metrics.serp.SERP", "_autosummary/langfair.metrics.recommendation.recommendation", "_autosummary/langfair.metrics.recommendation.recommendation.RecommendationMetrics", "_autosummary/langfair.metrics.stereotype", "_autosummary/langfair.metrics.stereotype.metrics", "_autosummary/langfair.metrics.stereotype.metrics.associations", "_autosummary/langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", "_autosummary/langfair.metrics.stereotype.metrics.baseclass", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.stereotype.metrics.classifier", "_autosummary/langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "_autosummary/langfair.metrics.stereotype.stereotype", "_autosummary/langfair.metrics.stereotype.stereotype.StereotypeMetrics", "_autosummary/langfair.metrics.toxicity", "_autosummary/langfair.metrics.toxicity.toxicity", "_autosummary/langfair.metrics.toxicity.toxicity.ToxicityMetrics", "_autosummary/llambda.auto", "_autosummary/llambda.auto.auto", "_autosummary/llambda.auto.auto.AutoEval", "_autosummary/llambda.constants", "_autosummary/llambda.constants.cost_data", "_autosummary/llambda.constants.word_lists", "_autosummary/llambda.generator", "_autosummary/llambda.generator.counterfactual", "_autosummary/llambda.generator.counterfactual.CounterfactualGenerator", "_autosummary/llambda.generator.generator", "_autosummary/llambda.generator.generator.ResponseGenerator", "_autosummary/llambda.metrics", "_autosummary/llambda.metrics.classification", "_autosummary/llambda.metrics.classification.classification", "_autosummary/llambda.metrics.classification.classification.ClassificationMetrics", "_autosummary/llambda.metrics.classification.metrics", "_autosummary/llambda.metrics.classification.metrics.baseclass", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.classification.metrics.false_discovery", "_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "_autosummary/llambda.metrics.classification.metrics.false_negative", "_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "_autosummary/llambda.metrics.classification.metrics.false_omission", "_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "_autosummary/llambda.metrics.classification.metrics.false_positive", "_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "_autosummary/llambda.metrics.counterfactual", "_autosummary/llambda.metrics.counterfactual.counterfactual", "_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "_autosummary/llambda.metrics.counterfactual.metrics", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.counterfactual.metrics.bleu", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.cosine", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.rougel", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "_autosummary/llambda.metrics.recommendation", "_autosummary/llambda.metrics.recommendation.metrics", "_autosummary/llambda.metrics.recommendation.metrics.baseclass", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.recommendation.metrics.jaccard", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "_autosummary/llambda.metrics.recommendation.metrics.prag", "_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG", "_autosummary/llambda.metrics.recommendation.metrics.serp", "_autosummary/llambda.metrics.recommendation.metrics.serp.SERP", "_autosummary/llambda.metrics.recommendation.recommendation", "_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics", "_autosummary/llambda.metrics.stereotype", "_autosummary/llambda.metrics.stereotype.metrics", "_autosummary/llambda.metrics.stereotype.metrics.associations", "_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "_autosummary/llambda.metrics.stereotype.metrics.baseclass", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "_autosummary/llambda.metrics.stereotype.metrics.classifier", "_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "_autosummary/llambda.metrics.stereotype.stereotype", "_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics", "_autosummary/llambda.metrics.toxicity", "_autosummary/llambda.metrics.toxicity.toxicity", "_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics", "api", "index", "usage"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": [".ipynb_checkpoints/_autosummary/langfair.auto.rst", ".ipynb_checkpoints/_autosummary/langfair.auto.auto.rst", ".ipynb_checkpoints/_autosummary/langfair.auto.auto.AutoEval.rst", ".ipynb_checkpoints/_autosummary/langfair.constants.rst", ".ipynb_checkpoints/_autosummary/langfair.constants.cost_data.rst", ".ipynb_checkpoints/_autosummary/langfair.constants.word_lists.rst", ".ipynb_checkpoints/_autosummary/langfair.generator.rst", ".ipynb_checkpoints/_autosummary/langfair.generator.counterfactual.rst", ".ipynb_checkpoints/_autosummary/langfair.generator.counterfactual.CounterfactualGenerator.rst", ".ipynb_checkpoints/_autosummary/langfair.generator.generator.rst", ".ipynb_checkpoints/_autosummary/langfair.generator.generator.ResponseGenerator.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.classification.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.classification.ClassificationMetrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_discovery.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_negative.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_omission.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_positive.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.counterfactual.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.bleu.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.cosine.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.rougel.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.jaccard.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.prag.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.prag.PRAG.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.serp.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.metrics.serp.SERP.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.recommendation.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.recommendation.recommendation.RecommendationMetrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.associations.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.classifier.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.stereotype.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.stereotype.stereotype.StereotypeMetrics.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.toxicity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.toxicity.toxicity.rst", ".ipynb_checkpoints/_autosummary/langfair.metrics.toxicity.toxicity.ToxicityMetrics.rst", ".ipynb_checkpoints/_autosummary/llambda.auto.rst", ".ipynb_checkpoints/_autosummary/llambda.auto.auto.rst", ".ipynb_checkpoints/_autosummary/llambda.auto.auto.AutoEval.rst", ".ipynb_checkpoints/_autosummary/llambda.constants.rst", ".ipynb_checkpoints/_autosummary/llambda.constants.cost_data.rst", ".ipynb_checkpoints/_autosummary/llambda.constants.word_lists.rst", ".ipynb_checkpoints/_autosummary/llambda.generator.rst", ".ipynb_checkpoints/_autosummary/llambda.generator.counterfactual.rst", ".ipynb_checkpoints/_autosummary/llambda.generator.counterfactual.CounterfactualGenerator.rst", ".ipynb_checkpoints/_autosummary/llambda.generator.generator.rst", ".ipynb_checkpoints/_autosummary/llambda.generator.generator.ResponseGenerator.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.classification.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.classification.ClassificationMetrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_discovery.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_negative.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_omission.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_positive.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.counterfactual.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.bleu.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.cosine.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.rougel.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.jaccard.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.prag.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.serp.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.metrics.serp.SERP.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.recommendation.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.associations.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.baseclass.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.classifier.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.stereotype.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.toxicity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.toxicity.toxicity.rst", ".ipynb_checkpoints/_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics.rst", ".ipynb_checkpoints/api-checkpoint.rst", ".ipynb_checkpoints/index-checkpoint.rst", ".ipynb_checkpoints/usage-checkpoint.rst", "_autosummary/langfair.auto.rst", "_autosummary/langfair.auto.auto.rst", "_autosummary/langfair.auto.auto.AutoEval.rst", "_autosummary/langfair.constants.rst", "_autosummary/langfair.constants.cost_data.rst", "_autosummary/langfair.constants.word_lists.rst", "_autosummary/langfair.generator.rst", "_autosummary/langfair.generator.counterfactual.rst", "_autosummary/langfair.generator.counterfactual.CounterfactualGenerator.rst", "_autosummary/langfair.generator.generator.rst", "_autosummary/langfair.generator.generator.ResponseGenerator.rst", "_autosummary/langfair.metrics.rst", "_autosummary/langfair.metrics.classification.rst", "_autosummary/langfair.metrics.classification.classification.rst", "_autosummary/langfair.metrics.classification.classification.ClassificationMetrics.rst", "_autosummary/langfair.metrics.classification.metrics.rst", "_autosummary/langfair.metrics.classification.metrics.baseclass.rst", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.classification.metrics.false_discovery.rst", "_autosummary/langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.false_negative.rst", "_autosummary/langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.false_omission.rst", "_autosummary/langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.false_positive.rst", "_autosummary/langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.rst", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", "_autosummary/langfair.metrics.counterfactual.rst", "_autosummary/langfair.metrics.counterfactual.counterfactual.rst", "_autosummary/langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", "_autosummary/langfair.metrics.counterfactual.metrics.rst", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.rst", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.counterfactual.metrics.bleu.rst", "_autosummary/langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", "_autosummary/langfair.metrics.counterfactual.metrics.cosine.rst", "_autosummary/langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", "_autosummary/langfair.metrics.counterfactual.metrics.rougel.rst", "_autosummary/langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.rst", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", "_autosummary/langfair.metrics.recommendation.rst", "_autosummary/langfair.metrics.recommendation.metrics.rst", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.rst", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.recommendation.metrics.jaccard.rst", "_autosummary/langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", "_autosummary/langfair.metrics.recommendation.metrics.prag.rst", "_autosummary/langfair.metrics.recommendation.metrics.prag.PRAG.rst", "_autosummary/langfair.metrics.recommendation.metrics.serp.rst", "_autosummary/langfair.metrics.recommendation.metrics.serp.SERP.rst", "_autosummary/langfair.metrics.recommendation.recommendation.rst", "_autosummary/langfair.metrics.recommendation.recommendation.RecommendationMetrics.rst", "_autosummary/langfair.metrics.stereotype.rst", "_autosummary/langfair.metrics.stereotype.metrics.rst", "_autosummary/langfair.metrics.stereotype.metrics.associations.rst", "_autosummary/langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.rst", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.stereotype.metrics.classifier.rst", "_autosummary/langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.rst", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", "_autosummary/langfair.metrics.stereotype.stereotype.rst", "_autosummary/langfair.metrics.stereotype.stereotype.StereotypeMetrics.rst", "_autosummary/langfair.metrics.toxicity.rst", "_autosummary/langfair.metrics.toxicity.toxicity.rst", "_autosummary/langfair.metrics.toxicity.toxicity.ToxicityMetrics.rst", "_autosummary/llambda.auto.rst", "_autosummary/llambda.auto.auto.rst", "_autosummary/llambda.auto.auto.AutoEval.rst", "_autosummary/llambda.constants.rst", "_autosummary/llambda.constants.cost_data.rst", "_autosummary/llambda.constants.word_lists.rst", "_autosummary/llambda.generator.rst", "_autosummary/llambda.generator.counterfactual.rst", "_autosummary/llambda.generator.counterfactual.CounterfactualGenerator.rst", "_autosummary/llambda.generator.generator.rst", "_autosummary/llambda.generator.generator.ResponseGenerator.rst", "_autosummary/llambda.metrics.rst", "_autosummary/llambda.metrics.classification.rst", "_autosummary/llambda.metrics.classification.classification.rst", "_autosummary/llambda.metrics.classification.classification.ClassificationMetrics.rst", "_autosummary/llambda.metrics.classification.metrics.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.classification.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.classification.metrics.false_discovery.rst", "_autosummary/llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_negative.rst", "_autosummary/llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_omission.rst", "_autosummary/llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.false_positive.rst", "_autosummary/llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.rst", "_autosummary/llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", "_autosummary/llambda.metrics.counterfactual.rst", "_autosummary/llambda.metrics.counterfactual.counterfactual.rst", "_autosummary/llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.rst", "_autosummary/llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.rst", "_autosummary/llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.rst", "_autosummary/llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.rst", "_autosummary/llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", "_autosummary/llambda.metrics.recommendation.rst", "_autosummary/llambda.metrics.recommendation.metrics.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.rst", "_autosummary/llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", "_autosummary/llambda.metrics.recommendation.metrics.prag.rst", "_autosummary/llambda.metrics.recommendation.metrics.prag.PRAG.rst", "_autosummary/llambda.metrics.recommendation.metrics.serp.rst", "_autosummary/llambda.metrics.recommendation.metrics.serp.SERP.rst", "_autosummary/llambda.metrics.recommendation.recommendation.rst", "_autosummary/llambda.metrics.recommendation.recommendation.RecommendationMetrics.rst", "_autosummary/llambda.metrics.stereotype.rst", "_autosummary/llambda.metrics.stereotype.metrics.rst", "_autosummary/llambda.metrics.stereotype.metrics.associations.rst", "_autosummary/llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.rst", "_autosummary/llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", "_autosummary/llambda.metrics.stereotype.metrics.classifier.rst", "_autosummary/llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.rst", "_autosummary/llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", "_autosummary/llambda.metrics.stereotype.stereotype.rst", "_autosummary/llambda.metrics.stereotype.stereotype.StereotypeMetrics.rst", "_autosummary/llambda.metrics.toxicity.rst", "_autosummary/llambda.metrics.toxicity.toxicity.rst", "_autosummary/llambda.metrics.toxicity.toxicity.ToxicityMetrics.rst", "api.rst", "index.rst", "usage.rst"], "indexentries": {"__init__() (langfair.auto.auto.autoeval method)": [[2, "langfair.auto.auto.AutoEval.__init__", false], [151, "langfair.auto.auto.AutoEval.__init__", false]], "__init__() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.__init__", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator.__init__", false]], "__init__() (langfair.generator.generator.responsegenerator method)": [[10, "langfair.generator.generator.ResponseGenerator.__init__", false], [159, "langfair.generator.generator.ResponseGenerator.__init__", false]], "__init__() (langfair.metrics.classification.classification.classificationmetrics method)": [[14, "langfair.metrics.classification.classification.ClassificationMetrics.__init__", false], [163, "langfair.metrics.classification.classification.ClassificationMetrics.__init__", false]], "__init__() (langfair.metrics.classification.metrics.baseclass.metrics.metric method)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false], [167, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false], [169, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false], [171, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false], [173, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false], [175, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false], [177, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false]], "__init__() (langfair.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[31, "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.__init__", false], [180, "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.__init__", false]], "__init__() (langfair.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[35, "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.__init__", false], [184, "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (langfair.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[37, "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.__init__", false], [186, "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.__init__", false]], "__init__() (langfair.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[39, "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.__init__", false], [188, "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.__init__", false]], "__init__() (langfair.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[41, "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.__init__", false], [190, "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.__init__", false]], "__init__() (langfair.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[43, "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.__init__", false], [192, "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.__init__", false]], "__init__() (langfair.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[48, "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.__init__", false], [197, "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (langfair.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[50, "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.__init__", false], [199, "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.__init__", false]], "__init__() (langfair.metrics.recommendation.metrics.prag.prag method)": [[52, "langfair.metrics.recommendation.metrics.prag.PRAG.__init__", false], [201, "langfair.metrics.recommendation.metrics.prag.PRAG.__init__", false]], "__init__() (langfair.metrics.recommendation.metrics.serp.serp method)": [[54, "langfair.metrics.recommendation.metrics.serp.SERP.__init__", false], [203, "langfair.metrics.recommendation.metrics.serp.SERP.__init__", false]], "__init__() (langfair.metrics.recommendation.recommendation.recommendationmetrics method)": [[56, "langfair.metrics.recommendation.recommendation.RecommendationMetrics.__init__", false], [205, "langfair.metrics.recommendation.recommendation.RecommendationMetrics.__init__", false]], "__init__() (langfair.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[60, "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.__init__", false], [209, "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.__init__", false]], "__init__() (langfair.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[63, "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.__init__", false], [212, "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (langfair.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[65, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.__init__", false], [214, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.__init__", false]], "__init__() (langfair.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[67, "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.__init__", false], [216, "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.__init__", false]], "__init__() (langfair.metrics.stereotype.stereotype.stereotypemetrics method)": [[69, "langfair.metrics.stereotype.stereotype.StereotypeMetrics.__init__", false], [218, "langfair.metrics.stereotype.stereotype.StereotypeMetrics.__init__", false]], "__init__() (langfair.metrics.toxicity.toxicity.toxicitymetrics method)": [[72, "langfair.metrics.toxicity.toxicity.ToxicityMetrics.__init__", false], [221, "langfair.metrics.toxicity.toxicity.ToxicityMetrics.__init__", false]], "__init__() (llambda.auto.auto.autoeval method)": [[75, "llambda.auto.auto.AutoEval.__init__", false], [224, "llambda.auto.auto.AutoEval.__init__", false]], "__init__() (llambda.generator.counterfactual.counterfactualgenerator method)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator.__init__", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator.__init__", false]], "__init__() (llambda.generator.generator.responsegenerator method)": [[83, "llambda.generator.generator.ResponseGenerator.__init__", false], [232, "llambda.generator.generator.ResponseGenerator.__init__", false]], "__init__() (llambda.metrics.classification.classification.classificationmetrics method)": [[87, "llambda.metrics.classification.classification.ClassificationMetrics.__init__", false], [236, "llambda.metrics.classification.classification.ClassificationMetrics.__init__", false]], "__init__() (llambda.metrics.classification.metrics.baseclass.metrics.metric method)": [[91, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false], [240, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[93, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false], [242, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[95, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false], [244, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[97, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false], [246, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[99, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false], [248, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false]], "__init__() (llambda.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[101, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false], [250, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false]], "__init__() (llambda.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[104, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.__init__", false], [253, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[108, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.__init__", false], [257, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[110, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.__init__", false], [259, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[112, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.__init__", false], [261, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[114, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.__init__", false], [263, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.__init__", false]], "__init__() (llambda.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[116, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.__init__", false], [265, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[121, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.__init__", false], [270, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[123, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.__init__", false], [272, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.prag.prag method)": [[125, "llambda.metrics.recommendation.metrics.prag.PRAG.__init__", false], [274, "llambda.metrics.recommendation.metrics.prag.PRAG.__init__", false]], "__init__() (llambda.metrics.recommendation.metrics.serp.serp method)": [[127, "llambda.metrics.recommendation.metrics.serp.SERP.__init__", false], [276, "llambda.metrics.recommendation.metrics.serp.SERP.__init__", false]], "__init__() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[129, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.__init__", false], [278, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[133, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.__init__", false], [282, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[136, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.__init__", false], [285, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[138, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.__init__", false], [287, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.__init__", false]], "__init__() (llambda.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[140, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.__init__", false], [289, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.__init__", false]], "__init__() (llambda.metrics.stereotype.stereotype.stereotypemetrics method)": [[142, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.__init__", false], [291, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.__init__", false]], "__init__() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[145, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.__init__", false], [294, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.__init__", false]], "autoeval (class in langfair.auto.auto)": [[2, "langfair.auto.auto.AutoEval", false], [151, "langfair.auto.auto.AutoEval", false]], "autoeval (class in llambda.auto.auto)": [[75, "llambda.auto.auto.AutoEval", false], [224, "llambda.auto.auto.AutoEval", false]], "bleusimilarity (class in langfair.metrics.counterfactual.metrics.bleu)": [[37, "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", false], [186, "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", false]], "bleusimilarity (class in llambda.metrics.counterfactual.metrics.bleu)": [[110, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", false], [259, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", false]], "classificationmetrics (class in langfair.metrics.classification.classification)": [[14, "langfair.metrics.classification.classification.ClassificationMetrics", false], [163, "langfair.metrics.classification.classification.ClassificationMetrics", false]], "classificationmetrics (class in llambda.metrics.classification.classification)": [[87, "llambda.metrics.classification.classification.ClassificationMetrics", false], [236, "llambda.metrics.classification.classification.ClassificationMetrics", false]], "cooccurrencebiasmetric (class in langfair.metrics.stereotype.metrics.cooccurrence)": [[67, "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", false], [216, "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", false]], "cooccurrencebiasmetric (class in llambda.metrics.stereotype.metrics.cooccurrence)": [[140, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", false], [289, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", false]], "cosinesimilarity (class in langfair.metrics.counterfactual.metrics.cosine)": [[39, "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", false], [188, "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", false]], "cosinesimilarity (class in llambda.metrics.counterfactual.metrics.cosine)": [[112, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", false], [261, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", false]], "cost_mapping (langfair.generator.generator.responsegenerator attribute)": [[10, "langfair.generator.generator.ResponseGenerator.cost_mapping", false], [159, "langfair.generator.generator.ResponseGenerator.cost_mapping", false]], "cost_mapping (llambda.generator.generator.responsegenerator attribute)": [[83, "llambda.generator.generator.ResponseGenerator.cost_mapping", false], [232, "llambda.generator.generator.ResponseGenerator.cost_mapping", false]], "counterfactualgenerator (class in langfair.generator.counterfactual)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator", false]], "counterfactualgenerator (class in llambda.generator.counterfactual)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator", false]], "counterfactualmetrics (class in langfair.metrics.counterfactual.counterfactual)": [[31, "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", false], [180, "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", false]], "counterfactualmetrics (class in llambda.metrics.counterfactual.counterfactual)": [[104, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", false], [253, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", false]], "create_prompts() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.create_prompts", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator.create_prompts", false]], "create_prompts() (llambda.generator.counterfactual.counterfactualgenerator method)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator.create_prompts", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator.create_prompts", false]], "estimate_token_cost() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false]], "estimate_token_cost() (langfair.generator.generator.responsegenerator method)": [[10, "langfair.generator.generator.ResponseGenerator.estimate_token_cost", false], [159, "langfair.generator.generator.ResponseGenerator.estimate_token_cost", false]], "estimate_token_cost() (llambda.generator.counterfactual.counterfactualgenerator method)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false]], "estimate_token_cost() (llambda.generator.generator.responsegenerator method)": [[83, "llambda.generator.generator.ResponseGenerator.estimate_token_cost", false], [232, "llambda.generator.generator.ResponseGenerator.estimate_token_cost", false]], "evaluate() (langfair.auto.auto.autoeval method)": [[2, "langfair.auto.auto.AutoEval.evaluate", false], [151, "langfair.auto.auto.AutoEval.evaluate", false]], "evaluate() (langfair.metrics.classification.classification.classificationmetrics method)": [[14, "langfair.metrics.classification.classification.ClassificationMetrics.evaluate", false], [163, "langfair.metrics.classification.classification.ClassificationMetrics.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.baseclass.metrics.metric method)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false], [167, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false], [169, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false], [171, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false], [173, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false], [175, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false], [177, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false]], "evaluate() (langfair.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[31, "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.evaluate", false], [180, "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.evaluate", false]], "evaluate() (langfair.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[35, "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.evaluate", false], [184, "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (langfair.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[37, "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.evaluate", false], [186, "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.evaluate", false]], "evaluate() (langfair.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[39, "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.evaluate", false], [188, "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.evaluate", false]], "evaluate() (langfair.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[41, "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.evaluate", false], [190, "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.evaluate", false]], "evaluate() (langfair.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[43, "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.evaluate", false], [192, "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.evaluate", false]], "evaluate() (langfair.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[48, "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.evaluate", false], [197, "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (langfair.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[50, "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.evaluate", false], [199, "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.evaluate", false]], "evaluate() (langfair.metrics.recommendation.metrics.prag.prag method)": [[52, "langfair.metrics.recommendation.metrics.prag.PRAG.evaluate", false], [201, "langfair.metrics.recommendation.metrics.prag.PRAG.evaluate", false]], "evaluate() (langfair.metrics.recommendation.metrics.serp.serp method)": [[54, "langfair.metrics.recommendation.metrics.serp.SERP.evaluate", false], [203, "langfair.metrics.recommendation.metrics.serp.SERP.evaluate", false]], "evaluate() (langfair.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[60, "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.evaluate", false], [209, "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.evaluate", false]], "evaluate() (langfair.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[63, "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.evaluate", false], [212, "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (langfair.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[65, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.evaluate", false], [214, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.evaluate", false]], "evaluate() (langfair.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[67, "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.evaluate", false], [216, "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.evaluate", false]], "evaluate() (langfair.metrics.stereotype.stereotype.stereotypemetrics method)": [[69, "langfair.metrics.stereotype.stereotype.StereotypeMetrics.evaluate", false], [218, "langfair.metrics.stereotype.stereotype.StereotypeMetrics.evaluate", false]], "evaluate() (langfair.metrics.toxicity.toxicity.toxicitymetrics method)": [[72, "langfair.metrics.toxicity.toxicity.ToxicityMetrics.evaluate", false], [221, "langfair.metrics.toxicity.toxicity.ToxicityMetrics.evaluate", false]], "evaluate() (llambda.auto.auto.autoeval method)": [[75, "llambda.auto.auto.AutoEval.evaluate", false], [224, "llambda.auto.auto.AutoEval.evaluate", false]], "evaluate() (llambda.metrics.classification.classification.classificationmetrics method)": [[87, "llambda.metrics.classification.classification.ClassificationMetrics.evaluate", false], [236, "llambda.metrics.classification.classification.ClassificationMetrics.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.baseclass.metrics.metric method)": [[91, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false], [240, "llambda.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[93, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false], [242, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[95, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false], [244, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[97, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false], [246, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[99, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false], [248, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false]], "evaluate() (llambda.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[101, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false], [250, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.counterfactual.counterfactualmetrics method)": [[104, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.evaluate", false], [253, "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.baseclass.metrics.metric method)": [[108, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.evaluate", false], [257, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.bleu.bleusimilarity method)": [[110, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.evaluate", false], [259, "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.cosine.cosinesimilarity method)": [[112, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.evaluate", false], [261, "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.rougel.rougelsimilarity method)": [[114, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.evaluate", false], [263, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity.evaluate", false]], "evaluate() (llambda.metrics.counterfactual.metrics.sentimentbias.sentimentbias method)": [[116, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.evaluate", false], [265, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.baseclass.metrics.metric method)": [[121, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.evaluate", false], [270, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.jaccard.jaccardsimilarity method)": [[123, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.evaluate", false], [272, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.prag.prag method)": [[125, "llambda.metrics.recommendation.metrics.prag.PRAG.evaluate", false], [274, "llambda.metrics.recommendation.metrics.prag.PRAG.evaluate", false]], "evaluate() (llambda.metrics.recommendation.metrics.serp.serp method)": [[127, "llambda.metrics.recommendation.metrics.serp.SERP.evaluate", false], [276, "llambda.metrics.recommendation.metrics.serp.SERP.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.associations.stereotypicalassociations method)": [[133, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.evaluate", false], [282, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.baseclass.metrics.metric method)": [[136, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.evaluate", false], [285, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[138, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.evaluate", false], [287, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.evaluate", false]], "evaluate() (llambda.metrics.stereotype.metrics.cooccurrence.cooccurrencebiasmetric method)": [[140, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.evaluate", false], [289, "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.evaluate", false]], "evaluate() (llambda.metrics.stereotype.stereotype.stereotypemetrics method)": [[142, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.evaluate", false], [291, "llambda.metrics.stereotype.stereotype.StereotypeMetrics.evaluate", false]], "evaluate() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[145, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.evaluate", false], [294, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.evaluate", false]], "evaluate_against_neutral() (langfair.metrics.recommendation.recommendation.recommendationmetrics method)": [[56, "langfair.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_against_neutral", false], [205, "langfair.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_against_neutral", false]], "evaluate_against_neutral() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[129, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_against_neutral", false], [278, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_against_neutral", false]], "evaluate_pairwise() (langfair.metrics.recommendation.recommendation.recommendationmetrics method)": [[56, "langfair.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_pairwise", false], [205, "langfair.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_pairwise", false]], "evaluate_pairwise() (llambda.metrics.recommendation.recommendation.recommendationmetrics method)": [[129, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_pairwise", false], [278, "llambda.metrics.recommendation.recommendation.RecommendationMetrics.evaluate_pairwise", false]], "export_results() (langfair.auto.auto.autoeval method)": [[2, "langfair.auto.auto.AutoEval.export_results", false], [151, "langfair.auto.auto.AutoEval.export_results", false]], "export_results() (llambda.auto.auto.autoeval method)": [[75, "llambda.auto.auto.AutoEval.export_results", false], [224, "llambda.auto.auto.AutoEval.export_results", false]], "falsediscoveryrateparity (class in langfair.metrics.classification.metrics.false_discovery)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false], [169, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false]], "falsediscoveryrateparity (class in llambda.metrics.classification.metrics.false_discovery)": [[93, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false], [242, "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false]], "falsenegativerateparity (class in langfair.metrics.classification.metrics.false_negative)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false], [171, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false]], "falsenegativerateparity (class in llambda.metrics.classification.metrics.false_negative)": [[95, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false], [244, "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false]], "falseomissionrateparity (class in langfair.metrics.classification.metrics.false_omission)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false], [173, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false]], "falseomissionrateparity (class in llambda.metrics.classification.metrics.false_omission)": [[97, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false], [246, "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false]], "falsepositiverateparity (class in langfair.metrics.classification.metrics.false_positive)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false], [175, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false]], "falsepositiverateparity (class in llambda.metrics.classification.metrics.false_positive)": [[99, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false], [248, "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false]], "generate_responses() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.generate_responses", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator.generate_responses", false]], "generate_responses() (langfair.generator.generator.responsegenerator method)": [[10, "langfair.generator.generator.ResponseGenerator.generate_responses", false], [159, "langfair.generator.generator.ResponseGenerator.generate_responses", false]], "generate_responses() (llambda.generator.counterfactual.counterfactualgenerator method)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator.generate_responses", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator.generate_responses", false]], "generate_responses() (llambda.generator.generator.responsegenerator method)": [[83, "llambda.generator.generator.ResponseGenerator.generate_responses", false], [232, "llambda.generator.generator.ResponseGenerator.generate_responses", false]], "get_stereotype_scores() (langfair.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[65, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.get_stereotype_scores", false], [214, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.get_stereotype_scores", false]], "get_stereotype_scores() (llambda.metrics.stereotype.metrics.classifier.stereotypeclassifier method)": [[138, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.get_stereotype_scores", false], [287, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier.get_stereotype_scores", false]], "get_toxicity_scores() (langfair.metrics.toxicity.toxicity.toxicitymetrics method)": [[72, "langfair.metrics.toxicity.toxicity.ToxicityMetrics.get_toxicity_scores", false], [221, "langfair.metrics.toxicity.toxicity.ToxicityMetrics.get_toxicity_scores", false]], "get_toxicity_scores() (llambda.metrics.toxicity.toxicity.toxicitymetrics method)": [[145, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.get_toxicity_scores", false], [294, "llambda.metrics.toxicity.toxicity.ToxicityMetrics.get_toxicity_scores", false]], "jaccardsimilarity (class in langfair.metrics.recommendation.metrics.jaccard)": [[50, "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", false], [199, "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", false]], "jaccardsimilarity (class in llambda.metrics.recommendation.metrics.jaccard)": [[123, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", false], [272, "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", false]], "langfair.auto": [[0, "module-langfair.auto", false], [149, "module-langfair.auto", false]], "langfair.auto.auto": [[1, "module-langfair.auto.auto", false], [150, "module-langfair.auto.auto", false]], "langfair.constants": [[3, "module-langfair.constants", false], [152, "module-langfair.constants", false]], "langfair.constants.cost_data": [[4, "module-langfair.constants.cost_data", false], [153, "module-langfair.constants.cost_data", false]], "langfair.constants.word_lists": [[5, "module-langfair.constants.word_lists", false], [154, "module-langfair.constants.word_lists", false]], "langfair.generator": [[6, "module-langfair.generator", false], [155, "module-langfair.generator", false]], "langfair.generator.counterfactual": [[7, "module-langfair.generator.counterfactual", false], [156, "module-langfair.generator.counterfactual", false]], "langfair.generator.generator": [[9, "module-langfair.generator.generator", false], [158, "module-langfair.generator.generator", false]], "langfair.metrics": [[11, "module-langfair.metrics", false], [160, "module-langfair.metrics", false]], "langfair.metrics.classification": [[12, "module-langfair.metrics.classification", false], [161, "module-langfair.metrics.classification", false]], "langfair.metrics.classification.classification": [[13, "module-langfair.metrics.classification.classification", false], [162, "module-langfair.metrics.classification.classification", false]], "langfair.metrics.classification.metrics": [[15, "module-langfair.metrics.classification.metrics", false], [164, "module-langfair.metrics.classification.metrics", false]], "langfair.metrics.classification.metrics.baseclass": [[16, "module-langfair.metrics.classification.metrics.baseclass", false], [165, "module-langfair.metrics.classification.metrics.baseclass", false]], "langfair.metrics.classification.metrics.baseclass.metrics": [[17, "module-langfair.metrics.classification.metrics.baseclass.metrics", false], [166, "module-langfair.metrics.classification.metrics.baseclass.metrics", false]], "langfair.metrics.classification.metrics.false_discovery": [[19, "module-langfair.metrics.classification.metrics.false_discovery", false], [168, "module-langfair.metrics.classification.metrics.false_discovery", false]], "langfair.metrics.classification.metrics.false_negative": [[21, "module-langfair.metrics.classification.metrics.false_negative", false], [170, "module-langfair.metrics.classification.metrics.false_negative", false]], "langfair.metrics.classification.metrics.false_omission": [[23, "module-langfair.metrics.classification.metrics.false_omission", false], [172, "module-langfair.metrics.classification.metrics.false_omission", false]], "langfair.metrics.classification.metrics.false_positive": [[25, "module-langfair.metrics.classification.metrics.false_positive", false], [174, "module-langfair.metrics.classification.metrics.false_positive", false]], "langfair.metrics.classification.metrics.predicted_prevalence": [[27, "module-langfair.metrics.classification.metrics.predicted_prevalence", false], [176, "module-langfair.metrics.classification.metrics.predicted_prevalence", false]], "langfair.metrics.counterfactual": [[29, "module-langfair.metrics.counterfactual", false], [178, "module-langfair.metrics.counterfactual", false]], "langfair.metrics.counterfactual.counterfactual": [[30, "module-langfair.metrics.counterfactual.counterfactual", false], [179, "module-langfair.metrics.counterfactual.counterfactual", false]], "langfair.metrics.counterfactual.metrics": [[32, "module-langfair.metrics.counterfactual.metrics", false], [181, "module-langfair.metrics.counterfactual.metrics", false]], "langfair.metrics.counterfactual.metrics.baseclass": [[33, "module-langfair.metrics.counterfactual.metrics.baseclass", false], [182, "module-langfair.metrics.counterfactual.metrics.baseclass", false]], "langfair.metrics.counterfactual.metrics.baseclass.metrics": [[34, "module-langfair.metrics.counterfactual.metrics.baseclass.metrics", false], [183, "module-langfair.metrics.counterfactual.metrics.baseclass.metrics", false]], "langfair.metrics.counterfactual.metrics.bleu": [[36, "module-langfair.metrics.counterfactual.metrics.bleu", false], [185, "module-langfair.metrics.counterfactual.metrics.bleu", false]], "langfair.metrics.counterfactual.metrics.cosine": [[38, "module-langfair.metrics.counterfactual.metrics.cosine", false], [187, "module-langfair.metrics.counterfactual.metrics.cosine", false]], "langfair.metrics.counterfactual.metrics.rougel": [[40, "module-langfair.metrics.counterfactual.metrics.rougel", false], [189, "module-langfair.metrics.counterfactual.metrics.rougel", false]], "langfair.metrics.counterfactual.metrics.sentimentbias": [[42, "module-langfair.metrics.counterfactual.metrics.sentimentbias", false], [191, "module-langfair.metrics.counterfactual.metrics.sentimentbias", false]], "langfair.metrics.recommendation": [[44, "module-langfair.metrics.recommendation", false], [193, "module-langfair.metrics.recommendation", false]], "langfair.metrics.recommendation.metrics": [[45, "module-langfair.metrics.recommendation.metrics", false], [194, "module-langfair.metrics.recommendation.metrics", false]], "langfair.metrics.recommendation.metrics.baseclass": [[46, "module-langfair.metrics.recommendation.metrics.baseclass", false], [195, "module-langfair.metrics.recommendation.metrics.baseclass", false]], "langfair.metrics.recommendation.metrics.baseclass.metrics": [[47, "module-langfair.metrics.recommendation.metrics.baseclass.metrics", false], [196, "module-langfair.metrics.recommendation.metrics.baseclass.metrics", false]], "langfair.metrics.recommendation.metrics.jaccard": [[49, "module-langfair.metrics.recommendation.metrics.jaccard", false], [198, "module-langfair.metrics.recommendation.metrics.jaccard", false]], "langfair.metrics.recommendation.metrics.prag": [[51, "module-langfair.metrics.recommendation.metrics.prag", false], [200, "module-langfair.metrics.recommendation.metrics.prag", false]], "langfair.metrics.recommendation.metrics.serp": [[53, "module-langfair.metrics.recommendation.metrics.serp", false], [202, "module-langfair.metrics.recommendation.metrics.serp", false]], "langfair.metrics.recommendation.recommendation": [[55, "module-langfair.metrics.recommendation.recommendation", false], [204, "module-langfair.metrics.recommendation.recommendation", false]], "langfair.metrics.stereotype": [[57, "module-langfair.metrics.stereotype", false], [206, "module-langfair.metrics.stereotype", false]], "langfair.metrics.stereotype.metrics": [[58, "module-langfair.metrics.stereotype.metrics", false], [207, "module-langfair.metrics.stereotype.metrics", false]], "langfair.metrics.stereotype.metrics.associations": [[59, "module-langfair.metrics.stereotype.metrics.associations", false], [208, "module-langfair.metrics.stereotype.metrics.associations", false]], "langfair.metrics.stereotype.metrics.baseclass": [[61, "module-langfair.metrics.stereotype.metrics.baseclass", false], [210, "module-langfair.metrics.stereotype.metrics.baseclass", false]], "langfair.metrics.stereotype.metrics.baseclass.metrics": [[62, "module-langfair.metrics.stereotype.metrics.baseclass.metrics", false], [211, "module-langfair.metrics.stereotype.metrics.baseclass.metrics", false]], "langfair.metrics.stereotype.metrics.classifier": [[64, "module-langfair.metrics.stereotype.metrics.classifier", false], [213, "module-langfair.metrics.stereotype.metrics.classifier", false]], "langfair.metrics.stereotype.metrics.cooccurrence": [[66, "module-langfair.metrics.stereotype.metrics.cooccurrence", false], [215, "module-langfair.metrics.stereotype.metrics.cooccurrence", false]], "langfair.metrics.stereotype.stereotype": [[68, "module-langfair.metrics.stereotype.stereotype", false], [217, "module-langfair.metrics.stereotype.stereotype", false]], "langfair.metrics.toxicity": [[70, "module-langfair.metrics.toxicity", false], [219, "module-langfair.metrics.toxicity", false]], "langfair.metrics.toxicity.toxicity": [[71, "module-langfair.metrics.toxicity.toxicity", false], [220, "module-langfair.metrics.toxicity.toxicity", false]], "llambda.auto": [[73, "module-llambda.auto", false], [222, "module-llambda.auto", false]], "llambda.auto.auto": [[74, "module-llambda.auto.auto", false], [223, "module-llambda.auto.auto", false]], "llambda.constants": [[76, "module-llambda.constants", false], [225, "module-llambda.constants", false]], "llambda.constants.cost_data": [[77, "module-llambda.constants.cost_data", false], [226, "module-llambda.constants.cost_data", false]], "llambda.constants.word_lists": [[78, "module-llambda.constants.word_lists", false], [227, "module-llambda.constants.word_lists", false]], "llambda.generator": [[79, "module-llambda.generator", false], [228, "module-llambda.generator", false]], "llambda.generator.counterfactual": [[80, "module-llambda.generator.counterfactual", false], [229, "module-llambda.generator.counterfactual", false]], "llambda.generator.generator": [[82, "module-llambda.generator.generator", false], [231, "module-llambda.generator.generator", false]], "llambda.metrics": [[84, "module-llambda.metrics", false], [233, "module-llambda.metrics", false]], "llambda.metrics.classification": [[85, "module-llambda.metrics.classification", false], [234, "module-llambda.metrics.classification", false]], "llambda.metrics.classification.classification": [[86, "module-llambda.metrics.classification.classification", false], [235, "module-llambda.metrics.classification.classification", false]], "llambda.metrics.classification.metrics": [[88, "module-llambda.metrics.classification.metrics", false], [237, "module-llambda.metrics.classification.metrics", false]], "llambda.metrics.classification.metrics.baseclass": [[89, "module-llambda.metrics.classification.metrics.baseclass", false], [238, "module-llambda.metrics.classification.metrics.baseclass", false]], "llambda.metrics.classification.metrics.baseclass.metrics": [[90, "module-llambda.metrics.classification.metrics.baseclass.metrics", false], [239, "module-llambda.metrics.classification.metrics.baseclass.metrics", false]], "llambda.metrics.classification.metrics.false_discovery": [[92, "module-llambda.metrics.classification.metrics.false_discovery", false], [241, "module-llambda.metrics.classification.metrics.false_discovery", false]], "llambda.metrics.classification.metrics.false_negative": [[94, "module-llambda.metrics.classification.metrics.false_negative", false], [243, "module-llambda.metrics.classification.metrics.false_negative", false]], "llambda.metrics.classification.metrics.false_omission": [[96, "module-llambda.metrics.classification.metrics.false_omission", false], [245, "module-llambda.metrics.classification.metrics.false_omission", false]], "llambda.metrics.classification.metrics.false_positive": [[98, "module-llambda.metrics.classification.metrics.false_positive", false], [247, "module-llambda.metrics.classification.metrics.false_positive", false]], "llambda.metrics.classification.metrics.predicted_prevalence": [[100, "module-llambda.metrics.classification.metrics.predicted_prevalence", false], [249, "module-llambda.metrics.classification.metrics.predicted_prevalence", false]], "llambda.metrics.counterfactual": [[102, "module-llambda.metrics.counterfactual", false], [251, "module-llambda.metrics.counterfactual", false]], "llambda.metrics.counterfactual.counterfactual": [[103, "module-llambda.metrics.counterfactual.counterfactual", false], [252, "module-llambda.metrics.counterfactual.counterfactual", false]], "llambda.metrics.counterfactual.metrics": [[105, "module-llambda.metrics.counterfactual.metrics", false], [254, "module-llambda.metrics.counterfactual.metrics", false]], "llambda.metrics.counterfactual.metrics.baseclass": [[106, "module-llambda.metrics.counterfactual.metrics.baseclass", false], [255, "module-llambda.metrics.counterfactual.metrics.baseclass", false]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[107, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false], [256, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false]], "llambda.metrics.counterfactual.metrics.bleu": [[109, "module-llambda.metrics.counterfactual.metrics.bleu", false], [258, "module-llambda.metrics.counterfactual.metrics.bleu", false]], "llambda.metrics.counterfactual.metrics.cosine": [[111, "module-llambda.metrics.counterfactual.metrics.cosine", false], [260, "module-llambda.metrics.counterfactual.metrics.cosine", false]], "llambda.metrics.counterfactual.metrics.rougel": [[113, "module-llambda.metrics.counterfactual.metrics.rougel", false], [262, "module-llambda.metrics.counterfactual.metrics.rougel", false]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[115, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false], [264, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false]], "llambda.metrics.recommendation": [[117, "module-llambda.metrics.recommendation", false], [266, "module-llambda.metrics.recommendation", false]], "llambda.metrics.recommendation.metrics": [[118, "module-llambda.metrics.recommendation.metrics", false], [267, "module-llambda.metrics.recommendation.metrics", false]], "llambda.metrics.recommendation.metrics.baseclass": [[119, "module-llambda.metrics.recommendation.metrics.baseclass", false], [268, "module-llambda.metrics.recommendation.metrics.baseclass", false]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[120, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false], [269, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false]], "llambda.metrics.recommendation.metrics.jaccard": [[122, "module-llambda.metrics.recommendation.metrics.jaccard", false], [271, "module-llambda.metrics.recommendation.metrics.jaccard", false]], "llambda.metrics.recommendation.metrics.prag": [[124, "module-llambda.metrics.recommendation.metrics.prag", false], [273, "module-llambda.metrics.recommendation.metrics.prag", false]], "llambda.metrics.recommendation.metrics.serp": [[126, "module-llambda.metrics.recommendation.metrics.serp", false], [275, "module-llambda.metrics.recommendation.metrics.serp", false]], "llambda.metrics.recommendation.recommendation": [[128, "module-llambda.metrics.recommendation.recommendation", false], [277, "module-llambda.metrics.recommendation.recommendation", false]], "llambda.metrics.stereotype": [[130, "module-llambda.metrics.stereotype", false], [279, "module-llambda.metrics.stereotype", false]], "llambda.metrics.stereotype.metrics": [[131, "module-llambda.metrics.stereotype.metrics", false], [280, "module-llambda.metrics.stereotype.metrics", false]], "llambda.metrics.stereotype.metrics.associations": [[132, "module-llambda.metrics.stereotype.metrics.associations", false], [281, "module-llambda.metrics.stereotype.metrics.associations", false]], "llambda.metrics.stereotype.metrics.baseclass": [[134, "module-llambda.metrics.stereotype.metrics.baseclass", false], [283, "module-llambda.metrics.stereotype.metrics.baseclass", false]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[135, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false], [284, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false]], "llambda.metrics.stereotype.metrics.classifier": [[137, "module-llambda.metrics.stereotype.metrics.classifier", false], [286, "module-llambda.metrics.stereotype.metrics.classifier", false]], "llambda.metrics.stereotype.metrics.cooccurrence": [[139, "module-llambda.metrics.stereotype.metrics.cooccurrence", false], [288, "module-llambda.metrics.stereotype.metrics.cooccurrence", false]], "llambda.metrics.stereotype.stereotype": [[141, "module-llambda.metrics.stereotype.stereotype", false], [290, "module-llambda.metrics.stereotype.stereotype", false]], "llambda.metrics.toxicity": [[143, "module-llambda.metrics.toxicity", false], [292, "module-llambda.metrics.toxicity", false]], "llambda.metrics.toxicity.toxicity": [[144, "module-llambda.metrics.toxicity.toxicity", false], [293, "module-llambda.metrics.toxicity.toxicity", false]], "metric (class in langfair.metrics.classification.metrics.baseclass.metrics)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric", false], [167, "langfair.metrics.classification.metrics.baseclass.metrics.Metric", false]], "metric (class in langfair.metrics.counterfactual.metrics.baseclass.metrics)": [[35, "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", false], [184, "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", false]], "metric (class in langfair.metrics.recommendation.metrics.baseclass.metrics)": [[48, "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", false], [197, "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", false]], "metric (class in langfair.metrics.stereotype.metrics.baseclass.metrics)": [[63, "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", false], [212, "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.classification.metrics.baseclass.metrics)": [[91, "llambda.metrics.classification.metrics.baseclass.metrics.Metric", false], [240, "llambda.metrics.classification.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.counterfactual.metrics.baseclass.metrics)": [[108, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", false], [257, "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.recommendation.metrics.baseclass.metrics)": [[121, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", false], [270, "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", false]], "metric (class in llambda.metrics.stereotype.metrics.baseclass.metrics)": [[136, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", false], [285, "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", false]], "module": [[0, "module-langfair.auto", false], [1, "module-langfair.auto.auto", false], [3, "module-langfair.constants", false], [4, "module-langfair.constants.cost_data", false], [5, "module-langfair.constants.word_lists", false], [6, "module-langfair.generator", false], [7, "module-langfair.generator.counterfactual", false], [9, "module-langfair.generator.generator", false], [11, "module-langfair.metrics", false], [12, "module-langfair.metrics.classification", false], [13, "module-langfair.metrics.classification.classification", false], [15, "module-langfair.metrics.classification.metrics", false], [16, "module-langfair.metrics.classification.metrics.baseclass", false], [17, "module-langfair.metrics.classification.metrics.baseclass.metrics", false], [19, "module-langfair.metrics.classification.metrics.false_discovery", false], [21, "module-langfair.metrics.classification.metrics.false_negative", false], [23, "module-langfair.metrics.classification.metrics.false_omission", false], [25, "module-langfair.metrics.classification.metrics.false_positive", false], [27, "module-langfair.metrics.classification.metrics.predicted_prevalence", false], [29, "module-langfair.metrics.counterfactual", false], [30, "module-langfair.metrics.counterfactual.counterfactual", false], [32, "module-langfair.metrics.counterfactual.metrics", false], [33, "module-langfair.metrics.counterfactual.metrics.baseclass", false], [34, "module-langfair.metrics.counterfactual.metrics.baseclass.metrics", false], [36, "module-langfair.metrics.counterfactual.metrics.bleu", false], [38, "module-langfair.metrics.counterfactual.metrics.cosine", false], [40, "module-langfair.metrics.counterfactual.metrics.rougel", false], [42, "module-langfair.metrics.counterfactual.metrics.sentimentbias", false], [44, "module-langfair.metrics.recommendation", false], [45, "module-langfair.metrics.recommendation.metrics", false], [46, "module-langfair.metrics.recommendation.metrics.baseclass", false], [47, "module-langfair.metrics.recommendation.metrics.baseclass.metrics", false], [49, "module-langfair.metrics.recommendation.metrics.jaccard", false], [51, "module-langfair.metrics.recommendation.metrics.prag", false], [53, "module-langfair.metrics.recommendation.metrics.serp", false], [55, "module-langfair.metrics.recommendation.recommendation", false], [57, "module-langfair.metrics.stereotype", false], [58, "module-langfair.metrics.stereotype.metrics", false], [59, "module-langfair.metrics.stereotype.metrics.associations", false], [61, "module-langfair.metrics.stereotype.metrics.baseclass", false], [62, "module-langfair.metrics.stereotype.metrics.baseclass.metrics", false], [64, "module-langfair.metrics.stereotype.metrics.classifier", false], [66, "module-langfair.metrics.stereotype.metrics.cooccurrence", false], [68, "module-langfair.metrics.stereotype.stereotype", false], [70, "module-langfair.metrics.toxicity", false], [71, "module-langfair.metrics.toxicity.toxicity", false], [73, "module-llambda.auto", false], [74, "module-llambda.auto.auto", false], [76, "module-llambda.constants", false], [77, "module-llambda.constants.cost_data", false], [78, "module-llambda.constants.word_lists", false], [79, "module-llambda.generator", false], [80, "module-llambda.generator.counterfactual", false], [82, "module-llambda.generator.generator", false], [84, "module-llambda.metrics", false], [85, "module-llambda.metrics.classification", false], [86, "module-llambda.metrics.classification.classification", false], [88, "module-llambda.metrics.classification.metrics", false], [89, "module-llambda.metrics.classification.metrics.baseclass", false], [90, "module-llambda.metrics.classification.metrics.baseclass.metrics", false], [92, "module-llambda.metrics.classification.metrics.false_discovery", false], [94, "module-llambda.metrics.classification.metrics.false_negative", false], [96, "module-llambda.metrics.classification.metrics.false_omission", false], [98, "module-llambda.metrics.classification.metrics.false_positive", false], [100, "module-llambda.metrics.classification.metrics.predicted_prevalence", false], [102, "module-llambda.metrics.counterfactual", false], [103, "module-llambda.metrics.counterfactual.counterfactual", false], [105, "module-llambda.metrics.counterfactual.metrics", false], [106, "module-llambda.metrics.counterfactual.metrics.baseclass", false], [107, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false], [109, "module-llambda.metrics.counterfactual.metrics.bleu", false], [111, "module-llambda.metrics.counterfactual.metrics.cosine", false], [113, "module-llambda.metrics.counterfactual.metrics.rougel", false], [115, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false], [117, "module-llambda.metrics.recommendation", false], [118, "module-llambda.metrics.recommendation.metrics", false], [119, "module-llambda.metrics.recommendation.metrics.baseclass", false], [120, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false], [122, "module-llambda.metrics.recommendation.metrics.jaccard", false], [124, "module-llambda.metrics.recommendation.metrics.prag", false], [126, "module-llambda.metrics.recommendation.metrics.serp", false], [128, "module-llambda.metrics.recommendation.recommendation", false], [130, "module-llambda.metrics.stereotype", false], [131, "module-llambda.metrics.stereotype.metrics", false], [132, "module-llambda.metrics.stereotype.metrics.associations", false], [134, "module-llambda.metrics.stereotype.metrics.baseclass", false], [135, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false], [137, "module-llambda.metrics.stereotype.metrics.classifier", false], [139, "module-llambda.metrics.stereotype.metrics.cooccurrence", false], [141, "module-llambda.metrics.stereotype.stereotype", false], [143, "module-llambda.metrics.toxicity", false], [144, "module-llambda.metrics.toxicity.toxicity", false], [149, "module-langfair.auto", false], [150, "module-langfair.auto.auto", false], [152, "module-langfair.constants", false], [153, "module-langfair.constants.cost_data", false], [154, "module-langfair.constants.word_lists", false], [155, "module-langfair.generator", false], [156, "module-langfair.generator.counterfactual", false], [158, "module-langfair.generator.generator", false], [160, "module-langfair.metrics", false], [161, "module-langfair.metrics.classification", false], [162, "module-langfair.metrics.classification.classification", false], [164, "module-langfair.metrics.classification.metrics", false], [165, "module-langfair.metrics.classification.metrics.baseclass", false], [166, "module-langfair.metrics.classification.metrics.baseclass.metrics", false], [168, "module-langfair.metrics.classification.metrics.false_discovery", false], [170, "module-langfair.metrics.classification.metrics.false_negative", false], [172, "module-langfair.metrics.classification.metrics.false_omission", false], [174, "module-langfair.metrics.classification.metrics.false_positive", false], [176, "module-langfair.metrics.classification.metrics.predicted_prevalence", false], [178, "module-langfair.metrics.counterfactual", false], [179, "module-langfair.metrics.counterfactual.counterfactual", false], [181, "module-langfair.metrics.counterfactual.metrics", false], [182, "module-langfair.metrics.counterfactual.metrics.baseclass", false], [183, "module-langfair.metrics.counterfactual.metrics.baseclass.metrics", false], [185, "module-langfair.metrics.counterfactual.metrics.bleu", false], [187, "module-langfair.metrics.counterfactual.metrics.cosine", false], [189, "module-langfair.metrics.counterfactual.metrics.rougel", false], [191, "module-langfair.metrics.counterfactual.metrics.sentimentbias", false], [193, "module-langfair.metrics.recommendation", false], [194, "module-langfair.metrics.recommendation.metrics", false], [195, "module-langfair.metrics.recommendation.metrics.baseclass", false], [196, "module-langfair.metrics.recommendation.metrics.baseclass.metrics", false], [198, "module-langfair.metrics.recommendation.metrics.jaccard", false], [200, "module-langfair.metrics.recommendation.metrics.prag", false], [202, "module-langfair.metrics.recommendation.metrics.serp", false], [204, "module-langfair.metrics.recommendation.recommendation", false], [206, "module-langfair.metrics.stereotype", false], [207, "module-langfair.metrics.stereotype.metrics", false], [208, "module-langfair.metrics.stereotype.metrics.associations", false], [210, "module-langfair.metrics.stereotype.metrics.baseclass", false], [211, "module-langfair.metrics.stereotype.metrics.baseclass.metrics", false], [213, "module-langfair.metrics.stereotype.metrics.classifier", false], [215, "module-langfair.metrics.stereotype.metrics.cooccurrence", false], [217, "module-langfair.metrics.stereotype.stereotype", false], [219, "module-langfair.metrics.toxicity", false], [220, "module-langfair.metrics.toxicity.toxicity", false], [222, "module-llambda.auto", false], [223, "module-llambda.auto.auto", false], [225, "module-llambda.constants", false], [226, "module-llambda.constants.cost_data", false], [227, "module-llambda.constants.word_lists", false], [228, "module-llambda.generator", false], [229, "module-llambda.generator.counterfactual", false], [231, "module-llambda.generator.generator", false], [233, "module-llambda.metrics", false], [234, "module-llambda.metrics.classification", false], [235, "module-llambda.metrics.classification.classification", false], [237, "module-llambda.metrics.classification.metrics", false], [238, "module-llambda.metrics.classification.metrics.baseclass", false], [239, "module-llambda.metrics.classification.metrics.baseclass.metrics", false], [241, "module-llambda.metrics.classification.metrics.false_discovery", false], [243, "module-llambda.metrics.classification.metrics.false_negative", false], [245, "module-llambda.metrics.classification.metrics.false_omission", false], [247, "module-llambda.metrics.classification.metrics.false_positive", false], [249, "module-llambda.metrics.classification.metrics.predicted_prevalence", false], [251, "module-llambda.metrics.counterfactual", false], [252, "module-llambda.metrics.counterfactual.counterfactual", false], [254, "module-llambda.metrics.counterfactual.metrics", false], [255, "module-llambda.metrics.counterfactual.metrics.baseclass", false], [256, "module-llambda.metrics.counterfactual.metrics.baseclass.metrics", false], [258, "module-llambda.metrics.counterfactual.metrics.bleu", false], [260, "module-llambda.metrics.counterfactual.metrics.cosine", false], [262, "module-llambda.metrics.counterfactual.metrics.rougel", false], [264, "module-llambda.metrics.counterfactual.metrics.sentimentbias", false], [266, "module-llambda.metrics.recommendation", false], [267, "module-llambda.metrics.recommendation.metrics", false], [268, "module-llambda.metrics.recommendation.metrics.baseclass", false], [269, "module-llambda.metrics.recommendation.metrics.baseclass.metrics", false], [271, "module-llambda.metrics.recommendation.metrics.jaccard", false], [273, "module-llambda.metrics.recommendation.metrics.prag", false], [275, "module-llambda.metrics.recommendation.metrics.serp", false], [277, "module-llambda.metrics.recommendation.recommendation", false], [279, "module-llambda.metrics.stereotype", false], [280, "module-llambda.metrics.stereotype.metrics", false], [281, "module-llambda.metrics.stereotype.metrics.associations", false], [283, "module-llambda.metrics.stereotype.metrics.baseclass", false], [284, "module-llambda.metrics.stereotype.metrics.baseclass.metrics", false], [286, "module-llambda.metrics.stereotype.metrics.classifier", false], [288, "module-llambda.metrics.stereotype.metrics.cooccurrence", false], [290, "module-llambda.metrics.stereotype.stereotype", false], [292, "module-llambda.metrics.toxicity", false], [293, "module-llambda.metrics.toxicity.toxicity", false]], "neutralize_tokens() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false]], "neutralize_tokens() (llambda.generator.counterfactual.counterfactualgenerator method)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false]], "parse_texts() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.parse_texts", false], [157, "langfair.generator.counterfactual.CounterfactualGenerator.parse_texts", false]], "parse_texts() (llambda.generator.counterfactual.counterfactualgenerator method)": [[81, "llambda.generator.counterfactual.CounterfactualGenerator.parse_texts", false], [230, "llambda.generator.counterfactual.CounterfactualGenerator.parse_texts", false]], "prag (class in langfair.metrics.recommendation.metrics.prag)": [[52, "langfair.metrics.recommendation.metrics.prag.PRAG", false], [201, "langfair.metrics.recommendation.metrics.prag.PRAG", false]], "prag (class in llambda.metrics.recommendation.metrics.prag)": [[125, "llambda.metrics.recommendation.metrics.prag.PRAG", false], [274, "llambda.metrics.recommendation.metrics.prag.PRAG", false]], "predictedprevalencerateparity (class in langfair.metrics.classification.metrics.predicted_prevalence)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false], [177, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false]], "predictedprevalencerateparity (class in llambda.metrics.classification.metrics.predicted_prevalence)": [[101, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false], [250, "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false]], "print_results() (langfair.auto.auto.autoeval method)": [[2, "langfair.auto.auto.AutoEval.print_results", false], [151, "langfair.auto.auto.AutoEval.print_results", false]], "print_results() (llambda.auto.auto.autoeval method)": [[75, "llambda.auto.auto.AutoEval.print_results", false], [224, "llambda.auto.auto.AutoEval.print_results", false]], "recommendationmetrics (class in langfair.metrics.recommendation.recommendation)": [[56, "langfair.metrics.recommendation.recommendation.RecommendationMetrics", false], [205, "langfair.metrics.recommendation.recommendation.RecommendationMetrics", false]], "recommendationmetrics (class in llambda.metrics.recommendation.recommendation)": [[129, "llambda.metrics.recommendation.recommendation.RecommendationMetrics", false], [278, "llambda.metrics.recommendation.recommendation.RecommendationMetrics", false]], "responsegenerator (class in langfair.generator.generator)": [[10, "langfair.generator.generator.ResponseGenerator", false], [159, "langfair.generator.generator.ResponseGenerator", false]], "responsegenerator (class in llambda.generator.generator)": [[83, "llambda.generator.generator.ResponseGenerator", false], [232, "llambda.generator.generator.ResponseGenerator", false]], "rougelsimilarity (class in langfair.metrics.counterfactual.metrics.rougel)": [[41, "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", false], [190, "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", false]], "rougelsimilarity (class in llambda.metrics.counterfactual.metrics.rougel)": [[114, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", false], [263, "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", false]], "sentimentbias (class in langfair.metrics.counterfactual.metrics.sentimentbias)": [[43, "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", false], [192, "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", false]], "sentimentbias (class in llambda.metrics.counterfactual.metrics.sentimentbias)": [[116, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", false], [265, "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", false]], "serp (class in langfair.metrics.recommendation.metrics.serp)": [[54, "langfair.metrics.recommendation.metrics.serp.SERP", false], [203, "langfair.metrics.recommendation.metrics.serp.SERP", false]], "serp (class in llambda.metrics.recommendation.metrics.serp)": [[127, "llambda.metrics.recommendation.metrics.serp.SERP", false], [276, "llambda.metrics.recommendation.metrics.serp.SERP", false]], "stereotypeclassifier (class in langfair.metrics.stereotype.metrics.classifier)": [[65, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", false], [214, "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", false]], "stereotypeclassifier (class in llambda.metrics.stereotype.metrics.classifier)": [[138, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", false], [287, "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", false]], "stereotypemetrics (class in langfair.metrics.stereotype.stereotype)": [[69, "langfair.metrics.stereotype.stereotype.StereotypeMetrics", false], [218, "langfair.metrics.stereotype.stereotype.StereotypeMetrics", false]], "stereotypemetrics (class in llambda.metrics.stereotype.stereotype)": [[142, "llambda.metrics.stereotype.stereotype.StereotypeMetrics", false], [291, "llambda.metrics.stereotype.stereotype.StereotypeMetrics", false]], "stereotypicalassociations (class in langfair.metrics.stereotype.metrics.associations)": [[60, "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", false], [209, "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", false]], "stereotypicalassociations (class in llambda.metrics.stereotype.metrics.associations)": [[133, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", false], [282, "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", false]], "toxicitymetrics (class in langfair.metrics.toxicity.toxicity)": [[72, "langfair.metrics.toxicity.toxicity.ToxicityMetrics", false], [221, "langfair.metrics.toxicity.toxicity.ToxicityMetrics", false]], "toxicitymetrics (class in llambda.metrics.toxicity.toxicity)": [[145, "llambda.metrics.toxicity.toxicity.ToxicityMetrics", false], [294, "llambda.metrics.toxicity.toxicity.ToxicityMetrics", false]]}, "objects": {"langfair": [[149, 0, 0, "-", "auto"], [152, 0, 0, "-", "constants"], [155, 0, 0, "-", "generator"], [160, 0, 0, "-", "metrics"]], "langfair.auto": [[150, 0, 0, "-", "auto"]], "langfair.auto.auto": [[151, 1, 1, "", "AutoEval"]], "langfair.auto.auto.AutoEval": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "evaluate"], [151, 2, 1, "", "export_results"], [151, 2, 1, "", "print_results"]], "langfair.constants": [[153, 0, 0, "-", "cost_data"], [154, 0, 0, "-", "word_lists"]], "langfair.generator": [[156, 0, 0, "-", "counterfactual"], [158, 0, 0, "-", "generator"]], "langfair.generator.counterfactual": [[157, 1, 1, "", "CounterfactualGenerator"]], "langfair.generator.counterfactual.CounterfactualGenerator": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "create_prompts"], [157, 2, 1, "", "estimate_token_cost"], [157, 2, 1, "", "generate_responses"], [157, 2, 1, "", "neutralize_tokens"], [157, 2, 1, "", "parse_texts"]], "langfair.generator.generator": [[159, 1, 1, "", "ResponseGenerator"]], "langfair.generator.generator.ResponseGenerator": [[159, 2, 1, "", "__init__"], [159, 3, 1, "", "cost_mapping"], [159, 2, 1, "", "estimate_token_cost"], [159, 2, 1, "", "generate_responses"]], "langfair.metrics": [[161, 0, 0, "-", "classification"], [178, 0, 0, "-", "counterfactual"], [193, 0, 0, "-", "recommendation"], [206, 0, 0, "-", "stereotype"], [219, 0, 0, "-", "toxicity"]], "langfair.metrics.classification": [[162, 0, 0, "-", "classification"], [164, 0, 0, "-", "metrics"]], "langfair.metrics.classification.classification": [[163, 1, 1, "", "ClassificationMetrics"]], "langfair.metrics.classification.classification.ClassificationMetrics": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics": [[165, 0, 0, "-", "baseclass"], [168, 0, 0, "-", "false_discovery"], [170, 0, 0, "-", "false_negative"], [172, 0, 0, "-", "false_omission"], [174, 0, 0, "-", "false_positive"], [176, 0, 0, "-", "predicted_prevalence"]], "langfair.metrics.classification.metrics.baseclass": [[166, 0, 0, "-", "metrics"]], "langfair.metrics.classification.metrics.baseclass.metrics": [[167, 1, 1, "", "Metric"]], "langfair.metrics.classification.metrics.baseclass.metrics.Metric": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_discovery": [[169, 1, 1, "", "FalseDiscoveryRateParity"]], "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_negative": [[171, 1, 1, "", "FalseNegativeRateParity"]], "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_omission": [[173, 1, 1, "", "FalseOmissionRateParity"]], "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_positive": [[175, 1, 1, "", "FalsePositiveRateParity"]], "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.predicted_prevalence": [[177, 1, 1, "", "PredictedPrevalenceRateParity"]], "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[177, 2, 1, "", "__init__"], [177, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual": [[179, 0, 0, "-", "counterfactual"], [181, 0, 0, "-", "metrics"]], "langfair.metrics.counterfactual.counterfactual": [[180, 1, 1, "", "CounterfactualMetrics"]], "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics": [[182, 0, 0, "-", "baseclass"], [185, 0, 0, "-", "bleu"], [187, 0, 0, "-", "cosine"], [189, 0, 0, "-", "rougel"], [191, 0, 0, "-", "sentimentbias"]], "langfair.metrics.counterfactual.metrics.baseclass": [[183, 0, 0, "-", "metrics"]], "langfair.metrics.counterfactual.metrics.baseclass.metrics": [[184, 1, 1, "", "Metric"]], "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.bleu": [[186, 1, 1, "", "BleuSimilarity"]], "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.cosine": [[188, 1, 1, "", "CosineSimilarity"]], "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.rougel": [[190, 1, 1, "", "RougelSimilarity"]], "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.sentimentbias": [[192, 1, 1, "", "SentimentBias"]], "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation": [[194, 0, 0, "-", "metrics"], [204, 0, 0, "-", "recommendation"]], "langfair.metrics.recommendation.metrics": [[195, 0, 0, "-", "baseclass"], [198, 0, 0, "-", "jaccard"], [200, 0, 0, "-", "prag"], [202, 0, 0, "-", "serp"]], "langfair.metrics.recommendation.metrics.baseclass": [[196, 0, 0, "-", "metrics"]], "langfair.metrics.recommendation.metrics.baseclass.metrics": [[197, 1, 1, "", "Metric"]], "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.metrics.jaccard": [[199, 1, 1, "", "JaccardSimilarity"]], "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[199, 2, 1, "", "__init__"], [199, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.metrics.prag": [[201, 1, 1, "", "PRAG"]], "langfair.metrics.recommendation.metrics.prag.PRAG": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.metrics.serp": [[203, 1, 1, "", "SERP"]], "langfair.metrics.recommendation.metrics.serp.SERP": [[203, 2, 1, "", "__init__"], [203, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.recommendation": [[205, 1, 1, "", "RecommendationMetrics"]], "langfair.metrics.recommendation.recommendation.RecommendationMetrics": [[205, 2, 1, "", "__init__"], [205, 2, 1, "", "evaluate_against_neutral"], [205, 2, 1, "", "evaluate_pairwise"]], "langfair.metrics.stereotype": [[207, 0, 0, "-", "metrics"], [217, 0, 0, "-", "stereotype"]], "langfair.metrics.stereotype.metrics": [[208, 0, 0, "-", "associations"], [210, 0, 0, "-", "baseclass"], [213, 0, 0, "-", "classifier"], [215, 0, 0, "-", "cooccurrence"]], "langfair.metrics.stereotype.metrics.associations": [[209, 1, 1, "", "StereotypicalAssociations"]], "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[209, 2, 1, "", "__init__"], [209, 2, 1, "", "evaluate"]], "langfair.metrics.stereotype.metrics.baseclass": [[211, 0, 0, "-", "metrics"]], "langfair.metrics.stereotype.metrics.baseclass.metrics": [[212, 1, 1, "", "Metric"]], "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric": [[212, 2, 1, "", "__init__"], [212, 2, 1, "", "evaluate"]], "langfair.metrics.stereotype.metrics.classifier": [[214, 1, 1, "", "StereotypeClassifier"]], "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "evaluate"], [214, 2, 1, "", "get_stereotype_scores"]], "langfair.metrics.stereotype.metrics.cooccurrence": [[216, 1, 1, "", "CooccurrenceBiasMetric"]], "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[216, 2, 1, "", "__init__"], [216, 2, 1, "", "evaluate"]], "langfair.metrics.stereotype.stereotype": [[218, 1, 1, "", "StereotypeMetrics"]], "langfair.metrics.stereotype.stereotype.StereotypeMetrics": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "evaluate"]], "langfair.metrics.toxicity": [[220, 0, 0, "-", "toxicity"]], "langfair.metrics.toxicity.toxicity": [[221, 1, 1, "", "ToxicityMetrics"]], "langfair.metrics.toxicity.toxicity.ToxicityMetrics": [[221, 2, 1, "", "__init__"], [221, 2, 1, "", "evaluate"], [221, 2, 1, "", "get_toxicity_scores"]], "llambda": [[222, 0, 0, "-", "auto"], [225, 0, 0, "-", "constants"], [228, 0, 0, "-", "generator"], [233, 0, 0, "-", "metrics"]], "llambda.auto": [[223, 0, 0, "-", "auto"]], "llambda.auto.auto": [[224, 1, 1, "", "AutoEval"]], "llambda.auto.auto.AutoEval": [[224, 2, 1, "", "__init__"], [224, 2, 1, "", "evaluate"], [224, 2, 1, "", "export_results"], [224, 2, 1, "", "print_results"]], "llambda.constants": [[226, 0, 0, "-", "cost_data"], [227, 0, 0, "-", "word_lists"]], "llambda.generator": [[229, 0, 0, "-", "counterfactual"], [231, 0, 0, "-", "generator"]], "llambda.generator.counterfactual": [[230, 1, 1, "", "CounterfactualGenerator"]], "llambda.generator.counterfactual.CounterfactualGenerator": [[230, 2, 1, "", "__init__"], [230, 2, 1, "", "create_prompts"], [230, 2, 1, "", "estimate_token_cost"], [230, 2, 1, "", "generate_responses"], [230, 2, 1, "", "neutralize_tokens"], [230, 2, 1, "", "parse_texts"]], "llambda.generator.generator": [[232, 1, 1, "", "ResponseGenerator"]], "llambda.generator.generator.ResponseGenerator": [[232, 2, 1, "", "__init__"], [232, 3, 1, "", "cost_mapping"], [232, 2, 1, "", "estimate_token_cost"], [232, 2, 1, "", "generate_responses"]], "llambda.metrics": [[234, 0, 0, "-", "classification"], [251, 0, 0, "-", "counterfactual"], [266, 0, 0, "-", "recommendation"], [279, 0, 0, "-", "stereotype"], [292, 0, 0, "-", "toxicity"]], "llambda.metrics.classification": [[235, 0, 0, "-", "classification"], [237, 0, 0, "-", "metrics"]], "llambda.metrics.classification.classification": [[236, 1, 1, "", "ClassificationMetrics"]], "llambda.metrics.classification.classification.ClassificationMetrics": [[236, 2, 1, "", "__init__"], [236, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics": [[238, 0, 0, "-", "baseclass"], [241, 0, 0, "-", "false_discovery"], [243, 0, 0, "-", "false_negative"], [245, 0, 0, "-", "false_omission"], [247, 0, 0, "-", "false_positive"], [249, 0, 0, "-", "predicted_prevalence"]], "llambda.metrics.classification.metrics.baseclass": [[239, 0, 0, "-", "metrics"]], "llambda.metrics.classification.metrics.baseclass.metrics": [[240, 1, 1, "", "Metric"]], "llambda.metrics.classification.metrics.baseclass.metrics.Metric": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_discovery": [[242, 1, 1, "", "FalseDiscoveryRateParity"]], "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_negative": [[244, 1, 1, "", "FalseNegativeRateParity"]], "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_omission": [[246, 1, 1, "", "FalseOmissionRateParity"]], "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.false_positive": [[248, 1, 1, "", "FalsePositiveRateParity"]], "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "evaluate"]], "llambda.metrics.classification.metrics.predicted_prevalence": [[250, 1, 1, "", "PredictedPrevalenceRateParity"]], "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual": [[252, 0, 0, "-", "counterfactual"], [254, 0, 0, "-", "metrics"]], "llambda.metrics.counterfactual.counterfactual": [[253, 1, 1, "", "CounterfactualMetrics"]], "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[253, 2, 1, "", "__init__"], [253, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics": [[255, 0, 0, "-", "baseclass"], [258, 0, 0, "-", "bleu"], [260, 0, 0, "-", "cosine"], [262, 0, 0, "-", "rougel"], [264, 0, 0, "-", "sentimentbias"]], "llambda.metrics.counterfactual.metrics.baseclass": [[256, 0, 0, "-", "metrics"]], "llambda.metrics.counterfactual.metrics.baseclass.metrics": [[257, 1, 1, "", "Metric"]], "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.bleu": [[259, 1, 1, "", "BleuSimilarity"]], "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[259, 2, 1, "", "__init__"], [259, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.cosine": [[261, 1, 1, "", "CosineSimilarity"]], "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[261, 2, 1, "", "__init__"], [261, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.rougel": [[263, 1, 1, "", "RougelSimilarity"]], "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[263, 2, 1, "", "__init__"], [263, 2, 1, "", "evaluate"]], "llambda.metrics.counterfactual.metrics.sentimentbias": [[265, 1, 1, "", "SentimentBias"]], "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[265, 2, 1, "", "__init__"], [265, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation": [[267, 0, 0, "-", "metrics"], [277, 0, 0, "-", "recommendation"]], "llambda.metrics.recommendation.metrics": [[268, 0, 0, "-", "baseclass"], [271, 0, 0, "-", "jaccard"], [273, 0, 0, "-", "prag"], [275, 0, 0, "-", "serp"]], "llambda.metrics.recommendation.metrics.baseclass": [[269, 0, 0, "-", "metrics"]], "llambda.metrics.recommendation.metrics.baseclass.metrics": [[270, 1, 1, "", "Metric"]], "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric": [[270, 2, 1, "", "__init__"], [270, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.jaccard": [[272, 1, 1, "", "JaccardSimilarity"]], "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[272, 2, 1, "", "__init__"], [272, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.prag": [[274, 1, 1, "", "PRAG"]], "llambda.metrics.recommendation.metrics.prag.PRAG": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.metrics.serp": [[276, 1, 1, "", "SERP"]], "llambda.metrics.recommendation.metrics.serp.SERP": [[276, 2, 1, "", "__init__"], [276, 2, 1, "", "evaluate"]], "llambda.metrics.recommendation.recommendation": [[278, 1, 1, "", "RecommendationMetrics"]], "llambda.metrics.recommendation.recommendation.RecommendationMetrics": [[278, 2, 1, "", "__init__"], [278, 2, 1, "", "evaluate_against_neutral"], [278, 2, 1, "", "evaluate_pairwise"]], "llambda.metrics.stereotype": [[280, 0, 0, "-", "metrics"], [290, 0, 0, "-", "stereotype"]], "llambda.metrics.stereotype.metrics": [[281, 0, 0, "-", "associations"], [283, 0, 0, "-", "baseclass"], [286, 0, 0, "-", "classifier"], [288, 0, 0, "-", "cooccurrence"]], "llambda.metrics.stereotype.metrics.associations": [[282, 1, 1, "", "StereotypicalAssociations"]], "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.metrics.baseclass": [[284, 0, 0, "-", "metrics"]], "llambda.metrics.stereotype.metrics.baseclass.metrics": [[285, 1, 1, "", "Metric"]], "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric": [[285, 2, 1, "", "__init__"], [285, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.metrics.classifier": [[287, 1, 1, "", "StereotypeClassifier"]], "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[287, 2, 1, "", "__init__"], [287, 2, 1, "", "evaluate"], [287, 2, 1, "", "get_stereotype_scores"]], "llambda.metrics.stereotype.metrics.cooccurrence": [[289, 1, 1, "", "CooccurrenceBiasMetric"]], "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[289, 2, 1, "", "__init__"], [289, 2, 1, "", "evaluate"]], "llambda.metrics.stereotype.stereotype": [[291, 1, 1, "", "StereotypeMetrics"]], "llambda.metrics.stereotype.stereotype.StereotypeMetrics": [[291, 2, 1, "", "__init__"], [291, 2, 1, "", "evaluate"]], "llambda.metrics.toxicity": [[293, 0, 0, "-", "toxicity"]], "llambda.metrics.toxicity.toxicity": [[294, 1, 1, "", "ToxicityMetrics"]], "llambda.metrics.toxicity.toxicity.ToxicityMetrics": [[294, 2, 1, "", "__init__"], [294, 2, 1, "", "evaluate"], [294, 2, 1, "", "get_toxicity_scores"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "terms": {"": [60, 133, 209, 282], "0": [14, 22, 24, 26, 28, 43, 65, 67, 72, 87, 95, 97, 99, 101, 116, 138, 140, 145, 163, 171, 173, 175, 177, 192, 214, 216, 221, 236, 244, 246, 248, 250, 265, 287, 289, 294], "03035": [67, 140, 216, 289], "03064": [43, 116, 192, 265], "06520": [5, 78, 154, 227], "07": [10, 83, 159, 232], "07609": [56, 129, 205, 278], "08": [10, 83, 159, 232], "08412": [5, 78, 154, 227], "09110": [60, 72, 133, 145, 209, 221, 282, 294], "1": [14, 22, 24, 26, 28, 43, 87, 95, 97, 99, 101, 116, 163, 171, 173, 175, 177, 192, 236, 244, 246, 248, 250, 265], "10853": [37, 39, 41, 110, 112, 114, 186, 188, 190, 259, 261, 263], "11462": [65, 138, 214, 287], "11698": [10, 83, 159, 232], "1607": [5, 78, 154, 227], "1711": [5, 78, 154, 227], "1904": [67, 140, 216, 289], "1911": [43, 116, 192, 265], "2009": [65, 138, 214, 287], "2016": [5, 78, 154, 227], "2018": [5, 78, 154, 227], "2019": [67, 140, 216, 289], "2020": [10, 72, 83, 145, 159, 221, 232, 294], "2023": [56, 60, 72, 129, 133, 145, 205, 209, 221, 278, 282, 294], "2024": [10, 83, 159, 232], "2211": [60, 72, 133, 145, 209, 221, 282, 294], "2305": [56, 129, 205, 278], "2306": [10, 83, 159, 232], "2407": [37, 39, 41, 110, 112, 114, 186, 188, 190, 259, 261, 263], "25": [8, 10, 65, 69, 72, 81, 83, 138, 142, 145, 157, 159, 214, 218, 221, 230, 232, 287, 291, 294], "250": [65, 72, 138, 145, 214, 221, 287, 294], "3": [72, 145, 221, 294], "30": [8, 10, 81, 83, 157, 159, 230, 232], "301": [10, 72, 83, 145, 159, 221, 232, 294], "325": [72, 145, 221, 294], "4": [5, 78, 154, 227], "5": [43, 65, 116, 138, 192, 214, 265, 287], "95": [67, 140, 216, 289], "A": [2, 8, 10, 14, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 81, 83, 87, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 157, 159, 163, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 230, 232, 236, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "By": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "For": [8, 10, 37, 39, 41, 43, 56, 60, 72, 81, 83, 110, 112, 114, 116, 129, 133, 145, 157, 159, 186, 188, 190, 192, 205, 209, 221, 230, 232, 259, 261, 263, 265, 278, 282, 294], "If": [2, 8, 10, 31, 41, 43, 60, 65, 67, 69, 72, 75, 81, 83, 104, 114, 116, 133, 138, 140, 142, 145, 151, 157, 159, 180, 190, 192, 209, 214, 216, 218, 221, 224, 230, 232, 253, 263, 265, 282, 287, 289, 291, 294], "It": [56, 129, 205, 278], "Not": [60, 67, 133, 140, 209, 216, 282, 289], "One": [43, 60, 116, 133, 192, 209, 265, 282], "The": [8, 10, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 65, 67, 72, 81, 83, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 129, 133, 138, 140, 145, 157, 159, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 205, 209, 214, 216, 221, 230, 232, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 278, 282, 287, 289, 294], "These": [65, 138, 214, 287], "To": [148, 297], "__init__": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72, 75, 81, 83, 87, 91, 93, 95, 97, 99, 101, 104, 108, 110, 112, 114, 116, 121, 123, 125, 127, 129, 133, 136, 138, 140, 142, 145, 151, 157, 159, 163, 167, 169, 171, 173, 175, 177, 180, 184, 186, 188, 190, 192, 197, 199, 201, 203, 205, 209, 212, 214, 216, 218, 221, 224, 230, 232, 236, 240, 242, 244, 246, 248, 250, 253, 257, 259, 261, 263, 265, 270, 272, 274, 276, 278, 282, 285, 287, 289, 291, 294], "_group_counts_to_bia": [60, 133, 209, 282], "ab": [5, 10, 37, 39, 41, 56, 60, 67, 72, 78, 83, 110, 112, 114, 129, 133, 140, 145, 154, 159, 186, 188, 190, 205, 209, 216, 221, 227, 232, 259, 261, 263, 278, 282, 289, 294], "abc": [18, 35, 48, 63, 91, 108, 121, 136, 167, 184, 197, 212, 240, 257, 270, 285], "abl": [2, 72, 75, 145, 151, 221, 224, 294], "about": [8, 10, 81, 83, 157, 159, 230, 232], "abstract": [18, 35, 48, 63, 91, 108, 121, 136, 167, 184, 197, 212, 240, 257, 270, 285], "accept": [43, 72, 116, 145, 192, 221, 265, 294], "accuraci": [52, 56, 125, 129, 201, 205, 274, 278], "aclanthologi": [10, 72, 83, 145, 159, 221, 232, 294], "across": [56, 65, 69, 72, 129, 138, 142, 145, 205, 214, 218, 221, 278, 287, 291, 294], "adapt": [5, 43, 60, 78, 116, 133, 154, 192, 209, 227, 265, 282], "adject": [5, 60, 67, 78, 133, 140, 154, 209, 216, 227, 282, 289], "aforement": [2, 31, 75, 104, 151, 180, 224, 253], "al": [5, 10, 56, 60, 72, 78, 83, 129, 133, 145, 154, 159, 205, 209, 221, 227, 232, 278, 282, 294], "all": [2, 14, 18, 31, 35, 37, 39, 41, 43, 48, 63, 65, 69, 72, 75, 87, 91, 104, 108, 110, 112, 114, 116, 121, 136, 138, 142, 145, 151, 163, 167, 180, 184, 186, 188, 190, 192, 197, 212, 214, 218, 221, 224, 236, 240, 253, 257, 259, 261, 263, 265, 270, 285, 287, 291, 294], "among": [8, 81, 157, 230], "an": [2, 31, 43, 50, 52, 54, 65, 69, 72, 75, 104, 116, 123, 125, 127, 138, 142, 145, 151, 180, 192, 199, 201, 203, 214, 218, 221, 224, 253, 265, 272, 274, 276, 287, 291, 294], "analog": [31, 37, 39, 41, 43, 56, 104, 110, 112, 114, 116, 129, 180, 186, 188, 190, 192, 205, 253, 259, 261, 263, 265, 278], "ani": [10, 56, 72, 83, 129, 145, 159, 205, 221, 232, 278, 294], "anoth": [50, 52, 54, 123, 125, 127, 199, 201, 203, 272, 274, 276], "api": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232, 296], "appli": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "applic": [43, 72, 116, 145, 192, 221, 265, 294], "ar": [2, 8, 10, 31, 56, 60, 65, 67, 69, 72, 75, 81, 83, 104, 129, 133, 138, 140, 142, 145, 151, 157, 159, 180, 205, 209, 214, 216, 218, 221, 224, 230, 232, 253, 278, 282, 287, 289, 291, 294], "argument": [10, 28, 72, 83, 101, 145, 159, 177, 221, 232, 250, 294], "arrai": [14, 20, 22, 24, 26, 28, 87, 93, 95, 97, 99, 101, 163, 169, 171, 173, 175, 177, 236, 242, 244, 246, 248, 250], "arxiv": [5, 10, 37, 39, 41, 43, 56, 60, 65, 67, 72, 78, 83, 110, 112, 114, 116, 129, 133, 138, 140, 145, 154, 159, 186, 188, 190, 192, 205, 209, 214, 216, 221, 227, 232, 259, 261, 263, 265, 278, 282, 287, 289, 294], "asian": [5, 78, 154, 227], "assess": [41, 114, 190, 263], "assist": [8, 10, 14, 81, 83, 87, 157, 159, 163, 230, 232, 236], "associ": [69, 142, 218, 291], "assum": [43, 116, 192, 265], "async": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "asynchron": [8, 81, 157, 230], "atleast": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "attribut": [2, 8, 31, 37, 39, 41, 43, 56, 67, 69, 75, 81, 104, 110, 112, 114, 116, 129, 140, 142, 151, 157, 180, 186, 188, 190, 192, 205, 216, 218, 224, 230, 253, 259, 261, 263, 265, 278, 289, 291], "avail": [2, 75, 151, 224], "averag": [60, 65, 67, 69, 72, 133, 138, 140, 142, 145, 209, 214, 216, 218, 221, 282, 287, 289, 291, 294], "avoid": [2, 8, 10, 65, 72, 75, 81, 83, 138, 145, 151, 157, 159, 214, 221, 224, 230, 232, 287, 294], "back": [56, 129, 205, 278], "bad": [56, 129, 205, 278], "base": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72, 75, 81, 83, 87, 91, 93, 95, 97, 99, 101, 104, 108, 110, 112, 114, 116, 121, 123, 125, 127, 129, 133, 136, 138, 140, 142, 145, 151, 157, 159, 163, 167, 169, 171, 173, 175, 177, 180, 184, 186, 188, 190, 192, 197, 199, 201, 203, 205, 209, 212, 214, 216, 218, 221, 224, 230, 232, 236, 240, 242, 244, 246, 248, 250, 253, 257, 259, 261, 263, 265, 270, 272, 274, 276, 278, 282, 285, 287, 289, 291, 294], "batch": [65, 72, 138, 145, 214, 221, 287, 294], "batch_siz": [65, 72, 138, 145, 214, 221, 287, 294], "befor": [2, 31, 75, 104, 148, 151, 180, 224, 253, 297], "being": [8, 81, 157, 230], "belong": [56, 129, 205, 278], "beta": [67, 140, 216, 289], "between": [20, 22, 24, 26, 28, 37, 39, 41, 43, 50, 52, 54, 93, 95, 97, 99, 101, 110, 112, 114, 116, 123, 125, 127, 169, 171, 173, 175, 177, 186, 188, 190, 192, 199, 201, 203, 242, 244, 246, 248, 250, 259, 261, 263, 265, 272, 274, 276], "bia": [5, 31, 43, 60, 65, 67, 69, 72, 78, 104, 116, 133, 138, 140, 142, 145, 154, 180, 192, 209, 214, 216, 218, 221, 227, 253, 265, 282, 287, 289, 291, 294], "bieber": [56, 129, 205, 278], "binar": [43, 116, 192, 265], "binari": [14, 20, 22, 24, 26, 28, 87, 93, 95, 97, 99, 101, 163, 169, 171, 173, 175, 177, 236, 242, 244, 246, 248, 250], "blank": [56, 129, 205, 278], "bleu": [31, 104, 180, 253], "blood": [56, 129, 205, 278], "blue": [2, 31, 75, 104, 151, 180, 224, 253], "bolukbasi": [5, 78, 154, 227], "bool": [14, 20, 22, 24, 26, 28, 65, 69, 72, 87, 93, 95, 97, 99, 101, 138, 142, 145, 163, 169, 171, 173, 175, 177, 214, 218, 221, 236, 242, 244, 246, 248, 250, 287, 291, 294], "boolean": [2, 31, 75, 104, 151, 180, 224, 253], "bordia": [67, 140, 216, 289], "both": [69, 142, 218, 291], "bowman": [67, 140, 216, 289], "by_prompt": [72, 145, 221, 294], "calcul": [2, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 75, 110, 112, 114, 116, 129, 133, 138, 140, 142, 145, 151, 186, 188, 190, 192, 205, 209, 214, 216, 218, 221, 224, 259, 261, 263, 265, 278, 282, 287, 289, 291, 294], "call": [2, 8, 10, 65, 72, 75, 81, 83, 138, 145, 151, 157, 159, 214, 221, 224, 230, 232, 287, 294], "can": [43, 116, 192, 265], "cardigan": [56, 129, 205, 278], "care": [56, 129, 205, 278], "castl": [56, 129, 205, 278], "categori": [5, 43, 60, 65, 67, 69, 78, 116, 133, 138, 140, 142, 154, 192, 209, 214, 216, 218, 227, 265, 282, 287, 289, 291], "chain": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "check": [147, 296], "class": [1, 2, 7, 8, 9, 10, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 80, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 150, 151, 156, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 229, 230, 231, 232, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294], "classif": [43, 65, 72, 116, 138, 145, 192, 214, 221, 265, 287, 294], "classifi": [2, 43, 69, 72, 75, 116, 142, 145, 151, 192, 218, 221, 224, 265, 291, 294], "co": [39, 60, 67, 112, 133, 140, 188, 209, 216, 261, 282, 289], "cob": [67, 140, 216, 289], "code": [43, 60, 67, 116, 133, 140, 192, 209, 216, 265, 282, 289], "common": [5, 78, 154, 227], "compat": [8, 10, 81, 83, 157, 159, 230, 232], "complet": [8, 10, 81, 83, 157, 159, 230, 232], "comput": [2, 5, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 78, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 154, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 227, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "condit": [67, 140, 216, 289], "consist": [56, 129, 205, 278], "constructor": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "contain": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 65, 69, 72, 75, 81, 83, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 129, 138, 142, 145, 151, 157, 159, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 205, 214, 218, 221, 224, 230, 232, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 278, 287, 291, 294], "context": [67, 140, 216, 289], "convent": [10, 83, 159, 232], "cooccurr": [69, 142, 218, 291], "correspond": [8, 10, 56, 60, 72, 81, 83, 129, 133, 145, 157, 159, 205, 209, 221, 230, 232, 278, 282, 294], "cosin": [31, 37, 41, 43, 104, 110, 114, 116, 180, 186, 190, 192, 253, 259, 263, 265], "cost": [4, 8, 10, 77, 81, 83, 153, 157, 159, 226, 230, 232], "cost_map": [10, 83, 159, 232], "count": [8, 10, 60, 81, 83, 133, 157, 159, 209, 230, 232, 282], "counterfactu": [2, 75, 151, 224], "counterfactualgener": [2, 31, 75, 104, 151, 180, 224, 253], "cpu": [2, 72, 75, 145, 151, 221, 224, 294], "creat": [8, 18, 35, 48, 63, 81, 91, 108, 121, 136, 148, 157, 167, 184, 197, 212, 230, 240, 257, 270, 285, 297], "create_prompt": [8, 81, 157, 230], "crfm": [5, 43, 60, 78, 116, 133, 154, 192, 209, 227, 265, 282], "cuda": [2, 72, 75, 145, 151, 221, 224, 294], "current": [2, 72, 75, 145, 151, 221, 224, 294], "custom": [8, 10, 43, 81, 83, 116, 157, 159, 192, 230, 232, 265], "custom_classifi": [43, 72, 116, 145, 192, 221, 265, 294], "custom_dict": [8, 81, 157, 230], "custom_list": [8, 81, 157, 230], "cv": [8, 81, 157, 230], "data": [2, 8, 10, 65, 69, 72, 75, 81, 83, 138, 142, 145, 151, 157, 159, 214, 218, 221, 224, 230, 232, 287, 291, 294], "datafram": [2, 75, 151, 224], "dataset": [10, 83, 159, 232], "decodingtrust": [10, 83, 159, 232], "default": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 39, 41, 43, 56, 60, 65, 67, 69, 72, 75, 81, 83, 87, 93, 95, 97, 99, 101, 104, 112, 114, 116, 129, 133, 138, 140, 142, 145, 151, 157, 159, 163, 169, 171, 173, 175, 177, 180, 188, 190, 192, 205, 209, 214, 216, 218, 221, 224, 230, 232, 236, 242, 244, 246, 248, 250, 253, 261, 263, 265, 278, 282, 287, 289, 291, 294], "defin": [43, 67, 72, 116, 140, 145, 192, 216, 221, 265, 289, 294], "delic": [56, 129, 205, 278], "demograph": [43, 60, 67, 116, 133, 140, 192, 209, 216, 265, 282, 289], "demographic_categori": [60, 133, 209, 282], "demographic_group": [60, 133, 209, 282], "demographic_group_word_list": [60, 67, 133, 140, 209, 216, 282, 289], "desir": [2, 75, 151, 224], "detoxify_origin": [2, 72, 75, 145, 151, 221, 224, 294], "detoxify_unbias": [2, 72, 75, 145, 151, 221, 224, 294], "deviat": [56, 129, 205, 278], "devic": [2, 72, 75, 145, 151, 221, 224, 294], "dict": [2, 8, 10, 56, 60, 67, 72, 75, 81, 83, 129, 133, 140, 145, 151, 157, 159, 205, 209, 216, 221, 224, 230, 232, 278, 282, 289, 294], "dictinari": [67, 140, 216, 289], "dictionari": [2, 8, 10, 14, 31, 56, 60, 65, 67, 69, 72, 75, 81, 83, 87, 104, 129, 133, 138, 140, 142, 145, 151, 157, 159, 163, 180, 205, 209, 214, 216, 218, 221, 224, 230, 232, 236, 253, 278, 282, 287, 289, 291, 294], "did": [8, 10, 81, 83, 157, 159, 230, 232], "differ": [10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 83, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 129, 133, 159, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 205, 209, 232, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 278, 282], "dispar": [20, 22, 24, 26, 28, 93, 95, 97, 99, 101, 169, 171, 173, 175, 177, 242, 244, 246, 248, 250], "distanc": [37, 39, 41, 43, 110, 112, 114, 116, 186, 188, 190, 192, 259, 261, 263, 265], "distribut": [43, 116, 192, 265], "dive": [56, 129, 205, 278], "diverg": [60, 133, 209, 282], "do": [56, 129, 148, 205, 278, 297], "don": [56, 129, 205, 278], "done": [8, 81, 157, 230], "dream": [56, 129, 205, 278], "dy": [65, 72, 138, 145, 214, 221, 287, 294], "dynabench": [72, 145, 221, 294], "e": [56, 129, 205, 278], "each": [5, 8, 10, 31, 37, 39, 41, 43, 56, 60, 67, 78, 81, 83, 104, 110, 112, 114, 116, 129, 133, 140, 154, 157, 159, 180, 186, 188, 190, 192, 205, 209, 216, 227, 230, 232, 253, 259, 261, 263, 265, 278, 282, 289], "either": [8, 81, 157, 230], "element": [8, 56, 81, 129, 157, 205, 230, 278], "els": [140, 289], "emnlp": [10, 72, 83, 145, 159, 221, 232, 294], "enabl": [37, 39, 41, 56, 65, 72, 110, 112, 114, 129, 138, 145, 186, 188, 190, 205, 214, 221, 259, 261, 263, 278, 287, 294], "ensembl": [72, 145, 221, 294], "environ": [148, 297], "equal": [43, 60, 72, 116, 133, 145, 192, 209, 221, 265, 282, 294], "equival": [8, 81, 157, 230], "error": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "estim": [8, 10, 81, 83, 157, 159, 230, 232], "estimate_token_cost": [8, 10, 81, 83, 157, 159, 230, 232], "et": [5, 10, 56, 60, 72, 78, 83, 129, 133, 145, 154, 159, 205, 209, 221, 227, 232, 278, 282, 294], "etc": [5, 78, 154, 227], "evalu": [2, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 60, 63, 65, 67, 69, 72, 75, 83, 87, 91, 93, 95, 97, 99, 101, 104, 108, 110, 112, 114, 116, 121, 123, 125, 127, 133, 136, 138, 140, 142, 145, 151, 159, 163, 167, 169, 171, 173, 175, 177, 180, 184, 186, 188, 190, 192, 197, 199, 201, 203, 209, 212, 214, 216, 218, 221, 224, 232, 236, 240, 242, 244, 246, 248, 250, 253, 257, 259, 261, 263, 265, 270, 272, 274, 276, 282, 285, 287, 289, 291, 294], "evaluate_against_neutr": [56, 129, 205, 278], "evaluate_pairwis": [56, 129, 205, 278], "ever": [56, 129, 205, 278], "exactli": [14, 20, 22, 24, 26, 28, 67, 87, 93, 95, 97, 99, 101, 140, 163, 169, 171, 173, 175, 177, 216, 236, 242, 244, 246, 248, 250, 289], "exampl": [8, 10, 56, 81, 83, 129, 157, 159, 205, 230, 232, 278], "example_respons": [8, 10, 81, 83, 157, 159, 230, 232], "except": [56, 129, 205, 278], "expect": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "export": [2, 75, 151, 224], "export_result": [2, 75, 151, 224], "extens": [65, 138, 214, 287], "extent": [60, 133, 209, 282], "factor": [67, 140, 216, 289], "fair": [14, 56, 87, 129, 163, 205, 236, 278], "fairllm": [56, 129, 205, 278], "fals": [14, 18, 20, 22, 24, 26, 28, 65, 69, 72, 87, 91, 93, 95, 97, 99, 101, 138, 142, 145, 163, 167, 169, 171, 173, 175, 177, 214, 218, 221, 236, 240, 242, 244, 246, 248, 250, 287, 291, 294], "femal": [5, 8, 78, 81, 154, 157, 227, 230], "few": [31, 69, 104, 142, 180, 218, 253, 291], "file": [2, 5, 75, 78, 151, 154, 224, 227], "file_nam": [2, 75, 151, 224], "find": [10, 72, 83, 145, 159, 221, 232, 294], "first": [65, 72, 138, 145, 214, 221, 287, 294], "float": [2, 8, 10, 18, 20, 22, 24, 26, 28, 35, 43, 48, 50, 52, 54, 60, 65, 67, 72, 75, 81, 83, 91, 93, 95, 97, 99, 101, 108, 116, 121, 123, 125, 127, 133, 138, 140, 145, 151, 157, 159, 167, 169, 171, 173, 175, 177, 184, 192, 197, 199, 201, 203, 209, 214, 216, 221, 224, 230, 232, 240, 242, 244, 246, 248, 250, 257, 265, 270, 272, 274, 276, 282, 287, 289, 294], "folklor": [56, 129, 205, 278], "follow": [5, 60, 78, 133, 148, 154, 209, 227, 282, 297], "format": [2, 56, 75, 129, 151, 205, 224, 278], "four": [65, 138, 214, 287], "fraction": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "from": [2, 5, 10, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 78, 83, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 154, 159, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 227, 232, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "full": [8, 81, 157, 230], "function": [8, 10, 18, 35, 48, 63, 81, 83, 91, 108, 121, 136, 157, 159, 167, 184, 197, 212, 230, 232, 240, 257, 270, 285], "further": [147, 296], "galwai": [56, 129, 205, 278], "gap": [52, 56, 125, 129, 201, 205, 274, 278], "garg": [5, 78, 154, 227], "gehman": [10, 72, 83, 145, 159, 221, 232, 294], "gender": [5, 8, 31, 60, 65, 67, 69, 78, 81, 104, 133, 138, 140, 142, 154, 157, 180, 209, 214, 216, 218, 227, 230, 253, 282, 287, 289, 291], "gener": [2, 31, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 75, 104, 110, 112, 114, 116, 129, 133, 138, 140, 142, 145, 151, 180, 186, 188, 190, 192, 205, 209, 214, 216, 218, 221, 224, 253, 259, 261, 263, 265, 278, 282, 287, 289, 291, 294], "generate_respons": [8, 10, 81, 83, 157, 159, 230, 232], "get": [2, 8, 10, 56, 60, 75, 81, 83, 129, 133, 151, 157, 159, 205, 209, 224, 230, 232, 278, 282], "get_stereotype_scor": [65, 138, 214, 287], "get_toxicity_scor": [72, 145, 221, 294], "girl": [56, 129, 205, 278], "give": [56, 129, 205, 278], "given": [8, 10, 81, 83, 157, 159, 230, 232], "gpt": [8, 10, 81, 83, 157, 159, 230, 232], "gpu": [2, 72, 75, 145, 151, 221, 224, 294], "ground": [14, 20, 22, 24, 26, 28, 87, 93, 95, 97, 99, 101, 163, 169, 171, 173, 175, 177, 236, 242, 244, 246, 248, 250], "group": [8, 14, 18, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 81, 87, 91, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 129, 133, 157, 163, 167, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 205, 209, 230, 236, 240, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 278, 282], "group_dict_list": [56, 129, 205, 278], "happier": [56, 129, 205, 278], "hate": [72, 145, 221, 294], "have": [43, 67, 72, 116, 140, 145, 192, 216, 221, 265, 289, 294], "he": [8, 81, 157, 230], "health": [8, 81, 157, 230], "helm": [5, 43, 60, 78, 116, 133, 154, 192, 209, 227, 265, 282], "help": [8, 10, 81, 83, 157, 159, 230, 232], "her": [8, 81, 157, 230], "here": [148, 297], "hill": [56, 129, 205, 278], "him": [8, 81, 157, 230], "hispan": [5, 78, 154, 227], "hous": [56, 129, 205, 278], "how": [2, 8, 10, 37, 39, 41, 43, 67, 75, 81, 83, 110, 112, 114, 116, 140, 147, 151, 157, 159, 186, 188, 190, 192, 216, 224, 230, 232, 259, 261, 263, 265, 289, 296], "http": [5, 10, 37, 39, 41, 43, 56, 60, 65, 67, 72, 78, 83, 110, 112, 114, 116, 129, 133, 138, 140, 145, 154, 159, 186, 188, 190, 192, 205, 209, 214, 216, 221, 227, 232, 259, 261, 263, 265, 278, 282, 287, 289, 294], "huggingfac": [39, 112, 188, 261], "i": [2, 8, 10, 28, 39, 41, 43, 56, 60, 65, 67, 69, 72, 75, 81, 83, 101, 112, 114, 116, 129, 133, 138, 140, 142, 145, 151, 157, 159, 177, 188, 190, 192, 205, 209, 214, 216, 218, 221, 224, 230, 232, 250, 261, 263, 265, 278, 282, 287, 289, 291, 294], "ident": [56, 129, 205, 278], "identifi": [8, 81, 157, 230], "ignor": [65, 72, 138, 145, 214, 221, 287, 294], "implement": [18, 35, 48, 63, 91, 108, 121, 136, 167, 184, 197, 212, 240, 257, 270, 285], "includ": [5, 8, 10, 65, 69, 72, 78, 81, 83, 138, 142, 145, 147, 154, 157, 159, 214, 218, 221, 227, 230, 232, 287, 291, 294, 296], "indic": [2, 14, 20, 22, 24, 26, 28, 31, 43, 72, 75, 87, 93, 95, 97, 99, 101, 104, 116, 145, 151, 163, 169, 171, 173, 175, 177, 180, 192, 221, 224, 236, 242, 244, 246, 248, 250, 253, 265, 294], "infinit": [67, 140, 216, 289], "inform": [4, 10, 37, 39, 41, 43, 56, 60, 72, 77, 83, 110, 112, 114, 116, 129, 133, 145, 147, 153, 159, 186, 188, 190, 192, 205, 209, 221, 226, 232, 259, 261, 263, 265, 278, 282, 294, 296], "input": [2, 10, 43, 65, 72, 75, 83, 116, 138, 145, 151, 159, 192, 214, 221, 224, 232, 265, 287, 294], "instal": [147, 296], "instruct": [148, 297], "int": [2, 8, 10, 65, 72, 75, 81, 83, 138, 145, 151, 157, 159, 214, 221, 224, 230, 232, 287, 294], "interior": [56, 129, 205, 278], "invok": [4, 77, 153, 226], "jaccard": [56, 129, 205, 278], "justin": [56, 129, 205, 278], "k": [56, 129, 205, 278], "kei": [8, 10, 65, 67, 69, 81, 83, 138, 140, 142, 157, 159, 214, 216, 218, 230, 232, 287, 289, 291], "kernel": [65, 72, 138, 145, 214, 221, 287, 294], "l": [41, 114, 190, 263], "l6": [39, 112, 188, 261], "label": [14, 20, 22, 24, 26, 28, 87, 93, 95, 97, 99, 101, 163, 169, 171, 173, 175, 177, 236, 242, 244, 246, 248, 250], "langchain": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "langchain_llm": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "langfair": [148, 297], "languag": [31, 37, 39, 41, 43, 60, 65, 67, 72, 104, 110, 112, 114, 116, 133, 138, 140, 145, 180, 186, 188, 190, 192, 209, 214, 216, 221, 253, 259, 261, 263, 265, 282, 287, 289, 294], "larg": [65, 72, 138, 145, 214, 221, 287, 294], "latter": [43, 116, 192, 265], "lego": [56, 129, 205, 278], "len": [8, 81, 157, 230], "length": [8, 43, 56, 72, 81, 116, 129, 145, 157, 192, 205, 221, 230, 265, 278, 294], "level": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "leverag": [2, 43, 72, 75, 116, 145, 151, 192, 221, 224, 265, 294], "liang": [60, 72, 133, 145, 209, 221, 282, 294], "like": [14, 20, 22, 24, 26, 28, 39, 87, 93, 95, 97, 99, 101, 112, 163, 169, 171, 173, 175, 177, 188, 236, 242, 244, 246, 248, 250, 261], "limit": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "list": [2, 5, 8, 10, 14, 31, 35, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 78, 81, 83, 87, 104, 108, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 154, 157, 159, 163, 180, 184, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 227, 230, 232, 236, 253, 257, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "list1": [48, 50, 52, 54, 121, 123, 125, 127, 197, 199, 201, 203, 270, 272, 274, 276], "list2": [48, 50, 52, 54, 121, 123, 125, 127, 197, 199, 201, 203, 270, 272, 274, 276], "llambda": [31, 69, 180, 218], "llm": [2, 4, 8, 10, 39, 43, 50, 52, 54, 56, 65, 69, 72, 75, 77, 81, 83, 112, 116, 123, 125, 127, 129, 138, 142, 145, 151, 153, 157, 159, 188, 192, 199, 201, 203, 205, 214, 218, 221, 224, 226, 230, 232, 261, 265, 272, 274, 276, 278, 287, 291, 294], "look": [56, 129, 205, 278], "loud": [56, 129, 205, 278], "love": [56, 129, 205, 278], "made": [56, 129, 205, 278], "mai": [20, 22, 24, 26, 28, 93, 95, 97, 99, 101, 169, 171, 173, 175, 177, 242, 244, 246, 248, 250], "make": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "male": [5, 8, 78, 81, 154, 157, 227, 230], "man": [5, 8, 78, 81, 154, 157, 227, 230], "mani": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "mask": [2, 8, 31, 75, 81, 104, 151, 157, 180, 224, 230, 253], "max": [56, 129, 205, 278], "max_calls_per_min": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "maximum": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "me": [56, 129, 205, 278], "mean": [37, 39, 41, 43, 56, 60, 67, 110, 112, 114, 116, 129, 133, 140, 186, 188, 190, 192, 205, 209, 216, 259, 261, 263, 265, 278, 282, 289], "measur": [60, 67, 133, 140, 209, 216, 282, 289], "mention": [31, 37, 39, 41, 43, 56, 104, 110, 112, 114, 116, 129, 180, 186, 188, 190, 192, 205, 253, 259, 261, 263, 265, 278], "metadata": [8, 10, 81, 83, 157, 159, 230, 232], "method": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72, 75, 81, 83, 87, 91, 93, 95, 97, 99, 101, 104, 108, 110, 112, 114, 116, 121, 123, 125, 127, 129, 133, 136, 138, 140, 142, 145, 151, 157, 159, 163, 167, 169, 171, 173, 175, 177, 180, 184, 186, 188, 190, 192, 197, 199, 201, 203, 205, 209, 212, 214, 216, 218, 221, 224, 230, 232, 236, 240, 242, 244, 246, 248, 250, 253, 257, 259, 261, 263, 265, 270, 272, 274, 276, 278, 282, 285, 287, 289, 291, 294], "metric": [2, 5, 75, 78, 151, 154, 224, 227], "metric_typ": [14, 87, 163, 236], "min": [56, 129, 205, 278], "minilm": [39, 112, 188, 261], "minut": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "misinform": [54, 56, 127, 129, 203, 205, 276, 278], "model": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 60, 65, 67, 72, 75, 81, 83, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 123, 125, 127, 133, 138, 140, 145, 151, 157, 159, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 199, 201, 203, 209, 214, 216, 221, 224, 230, 232, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 272, 274, 276, 282, 287, 289, 294], "modul": [0, 3, 6, 11, 12, 15, 16, 29, 32, 33, 44, 45, 46, 57, 58, 61, 70, 73, 76, 79, 84, 85, 88, 89, 102, 105, 106, 117, 118, 119, 130, 131, 134, 143, 149, 152, 155, 160, 161, 164, 165, 178, 181, 182, 193, 194, 195, 206, 207, 210, 219, 222, 225, 228, 233, 234, 237, 238, 251, 254, 255, 266, 267, 268, 279, 280, 283, 292], "more": [37, 39, 41, 43, 56, 60, 72, 110, 112, 114, 116, 129, 133, 145, 186, 188, 190, 192, 205, 209, 221, 259, 261, 263, 265, 278, 282, 294], "most": [5, 78, 154, 227], "must": [8, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 60, 67, 72, 81, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 133, 140, 145, 157, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 209, 216, 221, 230, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 282, 289, 294], "name": [2, 5, 8, 10, 14, 31, 56, 69, 75, 78, 81, 83, 87, 104, 129, 142, 151, 154, 157, 159, 163, 180, 205, 218, 224, 227, 230, 232, 236, 253, 278, 291], "natural_language_api": [43, 116, 192, 265], "need": [18, 35, 48, 63, 91, 108, 121, 136, 167, 184, 197, 212, 240, 257, 270, 285], "neg": [14, 20, 22, 24, 26, 28, 43, 87, 93, 95, 97, 99, 101, 116, 163, 169, 171, 173, 175, 177, 192, 236, 242, 244, 246, 248, 250, 265], "neutral": [8, 31, 81, 104, 157, 180, 230, 253], "neutral_dict": [56, 129, 205, 278], "neutralize_token": [2, 8, 31, 75, 81, 104, 151, 157, 180, 224, 230, 253], "never": [56, 129, 205, 278], "new": [18, 35, 48, 63, 91, 108, 121, 136, 148, 167, 184, 197, 212, 240, 257, 270, 285, 297], "non_completion_r": [8, 10, 81, 83, 157, 159, 230, 232], "none": [2, 8, 10, 14, 18, 22, 24, 26, 28, 31, 39, 43, 60, 65, 67, 69, 72, 75, 81, 83, 87, 91, 95, 97, 99, 101, 104, 112, 116, 133, 138, 140, 142, 145, 151, 157, 159, 163, 167, 171, 173, 175, 177, 180, 188, 192, 209, 214, 216, 218, 221, 224, 230, 232, 236, 240, 244, 246, 248, 250, 253, 261, 265, 282, 287, 289, 291, 294], "note": [8, 10, 81, 83, 157, 159, 230, 232], "number": [8, 10, 60, 81, 83, 133, 157, 159, 209, 230, 232, 282], "object": [2, 8, 10, 14, 31, 43, 56, 60, 65, 67, 69, 72, 75, 81, 83, 87, 104, 116, 129, 133, 138, 140, 142, 145, 151, 157, 159, 163, 180, 192, 205, 209, 214, 216, 218, 221, 224, 230, 232, 236, 253, 265, 278, 282, 287, 289, 291, 294], "occur": [8, 60, 81, 133, 157, 209, 230, 282], "occurr": [60, 67, 133, 140, 209, 216, 282, 289], "off": [56, 129, 205, 278], "omiss": [24, 97, 173, 246], "onc": [60, 133, 209, 282], "one": [14, 87, 163, 236], "onli": [8, 10, 28, 43, 65, 69, 72, 81, 83, 101, 116, 138, 142, 145, 157, 159, 177, 192, 214, 218, 221, 230, 232, 250, 265, 287, 291, 294], "openai": [8, 10, 81, 83, 157, 159, 230, 232], "option": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "org": [5, 10, 37, 39, 41, 43, 56, 60, 65, 67, 72, 78, 83, 110, 112, 114, 116, 129, 133, 138, 140, 145, 154, 159, 186, 188, 190, 192, 205, 209, 214, 216, 221, 227, 232, 259, 261, 263, 265, 278, 282, 287, 289, 294], "other": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "otherwis": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "out": [56, 129, 147, 205, 278, 296], "output": [2, 10, 31, 37, 39, 41, 43, 60, 65, 67, 69, 72, 75, 83, 104, 110, 112, 114, 116, 133, 138, 140, 142, 145, 151, 159, 180, 186, 188, 190, 192, 209, 214, 216, 218, 221, 224, 232, 253, 259, 261, 263, 265, 282, 287, 289, 291, 294], "over": [37, 39, 41, 43, 60, 65, 67, 69, 72, 110, 112, 114, 116, 133, 138, 140, 142, 145, 186, 188, 190, 192, 209, 214, 216, 218, 221, 259, 261, 263, 265, 282, 287, 289, 291, 294], "packag": [43, 60, 116, 133, 192, 209, 265, 282], "page": [8, 54, 56, 81, 127, 129, 157, 203, 205, 230, 276, 278], "pair": [31, 37, 39, 41, 43, 69, 104, 110, 112, 114, 116, 142, 180, 186, 188, 190, 192, 218, 253, 259, 261, 263, 265, 291], "pairwis": [14, 37, 39, 41, 43, 52, 56, 87, 110, 112, 114, 116, 125, 129, 163, 186, 188, 190, 192, 201, 205, 236, 259, 261, 263, 265, 274, 278], "paper": [147, 296], "param": [67, 140, 216, 289], "paramet": [8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 81, 83, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 157, 159, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 230, 232, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "pariti": [20, 22, 24, 26, 28, 43, 93, 95, 97, 99, 101, 116, 169, 171, 173, 175, 177, 192, 242, 244, 246, 248, 250, 265], "pars": [8, 81, 157, 230], "parse_text": [8, 81, 157, 230], "parti": [43, 116, 192, 265], "pass": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "pdf": [43, 56, 65, 116, 129, 138, 192, 205, 214, 265, 278, 287], "per": [2, 8, 10, 65, 69, 72, 75, 81, 83, 138, 142, 145, 151, 157, 159, 214, 218, 221, 224, 230, 232, 287, 291, 294], "perfect": [56, 129, 205, 278], "photograph": [56, 129, 205, 278], "pip": [148, 297], "place": [4, 77, 153, 226], "placehold": [28, 101, 177, 250], "pleas": [148, 297], "po": [43, 116, 192, 265], "posit": [14, 22, 24, 26, 28, 87, 95, 97, 99, 101, 163, 171, 173, 175, 177, 236, 244, 246, 248, 250], "prag": [56, 129, 205, 278], "preced": [43, 60, 67, 72, 116, 133, 140, 145, 192, 209, 216, 221, 265, 282, 289, 294], "predict": [2, 14, 20, 22, 24, 26, 28, 43, 72, 75, 87, 93, 95, 97, 99, 101, 116, 145, 151, 163, 169, 171, 173, 175, 177, 192, 221, 224, 236, 242, 244, 246, 248, 250, 265, 294], "prefer": [41, 114, 190, 263], "present": [65, 138, 214, 287], "preval": [28, 101, 177, 250], "prevent": [65, 72, 138, 145, 214, 221, 287, 294], "print": [2, 75, 151, 224], "print_result": [2, 75, 151, 224], "probabl": [65, 67, 69, 72, 138, 140, 142, 145, 214, 216, 218, 221, 287, 289, 291, 294], "process": [8, 10, 81, 83, 157, 159, 230, 232], "profess": [5, 60, 65, 78, 133, 138, 154, 209, 214, 227, 282, 287], "project": [147, 296], "prompt": [2, 8, 10, 56, 65, 69, 72, 75, 81, 83, 129, 138, 142, 145, 151, 157, 159, 205, 214, 218, 221, 224, 230, 232, 278, 287, 291, 294], "protect": [8, 31, 37, 39, 41, 43, 56, 67, 81, 104, 110, 112, 114, 116, 129, 140, 157, 180, 186, 188, 190, 192, 205, 216, 230, 253, 259, 261, 263, 265, 278, 289], "provid": [2, 8, 10, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 81, 83, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 157, 159, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 230, 232, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "punit": [14, 87, 163, 236], "r4": [72, 145, 221, 294], "race": [5, 8, 31, 65, 69, 78, 81, 104, 138, 142, 154, 157, 180, 214, 218, 227, 230, 253, 287, 291], "rang": [56, 129, 205, 278], "rank": [52, 56, 125, 129, 201, 205, 274, 278], "rate": [2, 8, 10, 20, 22, 24, 26, 28, 67, 75, 81, 83, 93, 95, 97, 99, 101, 140, 151, 157, 159, 169, 171, 173, 175, 177, 216, 224, 230, 232, 242, 244, 246, 248, 250, 289], "ratio": [14, 18, 20, 22, 24, 26, 28, 67, 87, 91, 93, 95, 97, 99, 101, 140, 163, 167, 169, 171, 173, 175, 177, 216, 236, 240, 242, 244, 246, 248, 250, 289], "rec_lists1": [56, 129, 205, 278], "rec_lists2": [56, 129, 205, 278], "recommend": [18, 39, 65, 69, 72, 91, 112, 138, 142, 145, 148, 167, 188, 214, 218, 221, 240, 261, 287, 291, 294, 297], "refer": [5, 8, 37, 39, 41, 43, 56, 60, 72, 78, 81, 110, 112, 114, 116, 129, 133, 145, 154, 157, 186, 188, 190, 192, 205, 209, 221, 227, 230, 259, 261, 263, 265, 278, 282, 294], "rel": [67, 140, 216, 289], "relat": [4, 77, 153, 226], "relev": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "religion": [65, 138, 214, 287], "replac": [8, 81, 157, 230], "represent": [14, 60, 87, 133, 163, 209, 236, 282], "research": [67, 140, 216, 289], "respect": [14, 22, 24, 26, 28, 60, 87, 95, 97, 99, 101, 133, 163, 171, 173, 175, 177, 209, 236, 244, 246, 248, 250, 282], "respons": [2, 8, 10, 31, 60, 63, 65, 67, 69, 72, 75, 81, 83, 104, 133, 136, 138, 140, 142, 145, 151, 157, 159, 180, 209, 212, 214, 216, 218, 221, 224, 230, 232, 253, 282, 285, 287, 289, 291, 294], "response_sample_s": [8, 10, 81, 83, 157, 159, 230, 232], "responsegener": [8, 81, 157, 230], "result": [2, 54, 56, 65, 69, 72, 75, 127, 129, 138, 142, 145, 151, 203, 205, 214, 218, 221, 224, 276, 278, 287, 291, 294], "return": [8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 65, 67, 69, 72, 81, 83, 87, 91, 93, 95, 97, 99, 101, 104, 108, 110, 112, 114, 116, 121, 123, 125, 127, 129, 133, 138, 140, 142, 145, 157, 159, 163, 167, 169, 171, 173, 175, 177, 180, 184, 186, 188, 190, 192, 197, 199, 201, 203, 205, 209, 214, 216, 218, 221, 230, 232, 236, 240, 242, 244, 246, 248, 250, 253, 257, 259, 261, 263, 265, 270, 272, 274, 276, 278, 282, 287, 289, 291, 294], "return_data": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "return_df": [65, 138, 214, 287], "roberta": [72, 145, 221, 294], "roug": [41, 114, 190, 263], "rouge_metr": [41, 114, 190, 263], "rougel": [2, 31, 75, 104, 151, 180, 224, 253], "rougelsum": [41, 114, 190, 263], "same": [31, 37, 39, 41, 43, 56, 104, 110, 112, 114, 116, 129, 180, 186, 188, 190, 192, 205, 253, 259, 261, 263, 265, 278], "score": [37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "search": [54, 56, 127, 129, 203, 205, 276, 278], "section": [147, 296], "see": [10, 39, 83, 112, 159, 188, 232, 261], "select": [41, 60, 67, 114, 133, 140, 190, 209, 216, 263, 282, 289], "self": [10, 83, 159, 232], "sentenc": [39, 41, 112, 114, 188, 190, 261, 263], "sentiment": [31, 43, 104, 116, 180, 192, 253, 265], "serp": [56, 129, 205, 278], "serv": [18, 35, 48, 63, 91, 108, 121, 136, 167, 184, 197, 212, 240, 257, 270, 285], "set": [2, 10, 43, 65, 72, 75, 83, 116, 138, 145, 151, 159, 192, 214, 221, 224, 232, 265, 287, 294], "shake": [56, 129, 205, 278], "shape": [56, 129, 205, 278], "she": [8, 81, 157, 230], "should": [8, 56, 65, 69, 72, 81, 129, 138, 142, 145, 157, 205, 214, 218, 221, 230, 278, 287, 291, 294], "similar": [37, 39, 41, 43, 50, 56, 110, 112, 114, 116, 123, 129, 186, 188, 190, 192, 199, 205, 259, 261, 263, 265, 272, 278], "sing": [56, 129, 205, 278], "singl": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "size": [65, 72, 138, 145, 214, 221, 287, 294], "so": [148, 297], "social": [37, 39, 41, 110, 112, 114, 186, 188, 190, 259, 261, 263], "sort_model": [39, 112, 188, 261], "space": [39, 56, 112, 129, 188, 205, 261, 278], "specif": [5, 78, 154, 227], "specifi": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 60, 65, 67, 69, 72, 75, 81, 83, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 133, 138, 140, 142, 145, 151, 157, 159, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 209, 214, 216, 218, 221, 224, 230, 232, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 282, 287, 289, 291, 294], "speech": [72, 145, 221, 294], "standard": [56, 129, 205, 278], "stanford": [5, 43, 60, 78, 116, 133, 154, 192, 209, 227, 265, 282], "step": [60, 133, 209, 282], "stereotyp": [2, 75, 151, 224], "stereotype_word_list": [60, 67, 133, 140, 209, 216, 282, 289], "storag": [4, 77, 153, 226], "stori": [56, 129, 205, 278], "str": [2, 8, 10, 14, 39, 56, 60, 65, 67, 72, 75, 81, 83, 87, 112, 129, 133, 138, 140, 145, 151, 157, 159, 163, 188, 205, 209, 214, 216, 221, 224, 230, 232, 236, 261, 278, 282, 287, 289, 294], "strict": [43, 116, 192, 265], "string": [2, 8, 10, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 81, 83, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 157, 159, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 230, 232, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "strong": [43, 116, 192, 265], "style": [56, 129, 205, 278], "subset": [69, 72, 142, 145, 218, 221, 291, 294], "substitut": [8, 37, 39, 41, 81, 110, 112, 114, 157, 186, 188, 190, 230, 259, 261, 263], "support": [2, 31, 69, 75, 104, 142, 151, 180, 218, 224, 253, 291], "system": [8, 10, 81, 83, 157, 159, 230, 232], "system_prompt": [8, 10, 81, 83, 157, 159, 230, 232], "t": [56, 129, 205, 278], "take": [43, 60, 67, 72, 116, 133, 140, 145, 192, 209, 216, 221, 265, 282, 289, 294], "target": [43, 60, 67, 72, 116, 133, 140, 145, 192, 209, 216, 221, 265, 282, 289, 294], "target_categori": [60, 67, 133, 140, 209, 216, 282, 289], "team": [56, 129, 205, 278], "temperatur": [2, 8, 10, 75, 81, 83, 151, 157, 159, 224, 230, 232], "templat": [18, 35, 48, 63, 91, 108, 121, 136, 167, 184, 197, 212, 240, 257, 270, 285], "term": [60, 133, 209, 282], "text": [2, 8, 31, 37, 39, 41, 43, 60, 65, 69, 72, 75, 81, 104, 110, 112, 114, 116, 133, 138, 142, 145, 151, 157, 180, 186, 188, 190, 192, 209, 214, 218, 221, 224, 230, 253, 259, 261, 263, 265, 282, 287, 291, 294], "texts1": [31, 35, 37, 39, 41, 43, 104, 108, 110, 112, 114, 116, 180, 184, 186, 188, 190, 192, 253, 257, 259, 261, 263, 265], "texts2": [31, 35, 37, 39, 41, 43, 104, 108, 110, 112, 114, 116, 180, 184, 186, 188, 190, 192, 253, 257, 259, 261, 263, 265], "thei": [56, 129, 205, 278], "thi": [2, 5, 8, 10, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 78, 81, 83, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 154, 157, 159, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 227, 230, 232, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 272, 274, 276, 278, 282, 287, 289, 291, 294], "think": [56, 129, 205, 278], "third": [43, 116, 192, 265], "those": [56, 65, 129, 138, 205, 214, 278, 287], "thresh": [43, 116, 192, 265], "threshold": [43, 65, 72, 116, 138, 145, 192, 214, 221, 265, 287, 294], "tiktoken_model_nam": [8, 10, 81, 83, 157, 159, 230, 232], "time": [60, 133, 209, 282], "togeth": [56, 129, 205, 278], "token": [4, 8, 10, 77, 81, 83, 153, 157, 159, 226, 230, 232], "too": [65, 72, 138, 145, 214, 221, 287, 294], "torch": [2, 72, 75, 145, 151, 221, 224, 294], "total": [8, 10, 81, 83, 157, 159, 230, 232], "toxic": [2, 10, 75, 83, 151, 159, 224, 232], "toxic_threshold": [72, 145, 221, 294], "toxicity_devic": [2, 75, 151, 224], "toxigen": [72, 145, 221, 294], "transform": [39, 112, 188, 261], "true": [2, 31, 65, 75, 104, 138, 151, 180, 214, 224, 253, 287], "truth": [14, 20, 22, 24, 26, 28, 87, 93, 95, 97, 99, 101, 163, 169, 171, 173, 175, 177, 236, 242, 244, 246, 248, 250], "two": [8, 10, 14, 20, 22, 24, 26, 28, 37, 39, 41, 43, 50, 52, 54, 56, 65, 67, 69, 81, 83, 87, 93, 95, 97, 99, 101, 110, 112, 114, 116, 123, 125, 127, 129, 138, 140, 142, 157, 159, 163, 169, 171, 173, 175, 177, 186, 188, 190, 192, 199, 201, 203, 205, 214, 216, 218, 230, 232, 236, 242, 244, 246, 248, 250, 259, 261, 263, 265, 272, 274, 276, 278, 287, 289, 291], "txt": [2, 75, 151, 224], "type": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 65, 67, 69, 72, 75, 81, 83, 87, 91, 93, 95, 97, 99, 101, 104, 108, 110, 112, 114, 116, 121, 123, 125, 127, 129, 133, 138, 140, 142, 145, 151, 157, 159, 163, 167, 169, 171, 173, 175, 177, 180, 184, 186, 188, 190, 192, 197, 199, 201, 203, 205, 209, 214, 216, 218, 221, 224, 230, 232, 236, 240, 242, 244, 246, 248, 250, 253, 257, 259, 261, 263, 265, 270, 272, 274, 276, 278, 282, 287, 289, 291, 294], "union": [35, 108, 184, 257], "uniqu": [14, 20, 22, 24, 26, 28, 87, 93, 95, 97, 99, 101, 163, 169, 171, 173, 175, 177, 236, 242, 244, 246, 248, 250], "us": [2, 8, 10, 31, 39, 41, 43, 56, 60, 65, 67, 72, 75, 81, 83, 104, 112, 114, 116, 129, 133, 138, 140, 145, 148, 151, 157, 159, 180, 188, 190, 192, 205, 209, 214, 216, 221, 224, 230, 232, 253, 261, 263, 265, 278, 282, 287, 289, 294, 297], "usag": [147, 296], "user": [2, 8, 10, 18, 20, 22, 24, 26, 28, 35, 43, 48, 63, 72, 75, 81, 83, 91, 93, 95, 97, 99, 101, 108, 116, 121, 136, 145, 151, 157, 159, 167, 169, 171, 173, 175, 177, 184, 192, 197, 212, 221, 224, 230, 232, 240, 242, 244, 246, 248, 250, 257, 265, 270, 285, 294], "utilis": [5, 78, 154, 227], "v2": [39, 112, 188, 261], "vader": [43, 116, 192, 265], "valu": [2, 10, 14, 20, 22, 24, 26, 28, 31, 52, 54, 56, 60, 65, 67, 69, 72, 75, 83, 87, 93, 95, 97, 99, 101, 104, 125, 127, 129, 133, 138, 140, 142, 145, 151, 159, 163, 169, 171, 173, 175, 177, 180, 201, 203, 205, 209, 214, 216, 218, 221, 224, 232, 236, 242, 244, 246, 248, 250, 253, 274, 276, 278, 282, 287, 289, 291, 294], "variat": [37, 39, 41, 110, 112, 114, 186, 188, 190, 259, 261, 263], "vector": [39, 112, 188, 261], "venv": [148, 297], "via": [56, 129, 205, 278], "view": [147, 296], "virtual": [148, 297], "w": [67, 140, 216, 289], "wasserstein": [43, 116, 192, 265], "we": [56, 60, 129, 133, 148, 205, 209, 278, 282, 297], "weak": [43, 116, 192, 265], "weight": [67, 140, 216, 289], "were": [65, 69, 72, 138, 142, 145, 214, 218, 221, 287, 291, 294], "what": [8, 56, 81, 129, 157, 205, 230, 278], "when": [8, 10, 18, 35, 39, 48, 63, 67, 81, 83, 91, 108, 112, 121, 136, 140, 157, 159, 167, 184, 188, 197, 212, 216, 230, 232, 240, 257, 261, 270, 285, 289], "whether": [8, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 65, 69, 72, 81, 87, 93, 95, 97, 99, 101, 104, 110, 112, 114, 116, 138, 142, 145, 157, 163, 169, 171, 173, 175, 177, 180, 186, 188, 190, 192, 214, 218, 221, 230, 236, 242, 244, 246, 248, 250, 253, 259, 261, 263, 265, 287, 291, 294], "which": [2, 8, 10, 39, 41, 60, 65, 67, 69, 72, 75, 81, 83, 112, 114, 133, 138, 140, 142, 145, 151, 157, 159, 188, 190, 209, 214, 216, 218, 221, 224, 230, 232, 261, 263, 282, 287, 289, 291, 294], "white": [5, 78, 147, 154, 227, 296], "wildest": [56, 129, 205, 278], "window": [67, 140, 216, 289], "wise": [41, 114, 190, 263], "within": [31, 37, 39, 41, 43, 104, 110, 112, 114, 116, 180, 186, 188, 190, 192, 253, 259, 261, 263, 265], "woman": [5, 8, 78, 81, 154, 157, 227, 230], "word": [5, 8, 60, 67, 78, 81, 133, 140, 154, 157, 209, 216, 227, 230, 282, 289], "word_level": [67, 216], "y_pred": [14, 18, 20, 22, 24, 26, 28, 87, 91, 93, 95, 97, 99, 101, 163, 167, 169, 171, 173, 175, 177, 236, 240, 242, 244, 246, 248, 250], "y_true": [14, 18, 20, 22, 24, 26, 28, 87, 91, 93, 95, 97, 99, 101, 163, 167, 169, 171, 173, 175, 177, 236, 240, 242, 244, 246, 248, 250], "you": [8, 10, 56, 81, 83, 129, 157, 159, 205, 230, 232, 278], "zhang": [56, 129, 205, 278]}, "titles": ["langfair.auto", "langfair.auto.auto", "langfair.auto.auto.AutoEval", "langfair.constants", "langfair.constants.cost_data", "langfair.constants.word_lists", "langfair.generator", "langfair.generator.counterfactual", "langfair.generator.counterfactual.CounterfactualGenerator", "langfair.generator.generator", "langfair.generator.generator.ResponseGenerator", "langfair.metrics", "langfair.metrics.classification", "langfair.metrics.classification.classification", "langfair.metrics.classification.classification.ClassificationMetrics", "langfair.metrics.classification.metrics", "langfair.metrics.classification.metrics.baseclass", "langfair.metrics.classification.metrics.baseclass.metrics", "langfair.metrics.classification.metrics.baseclass.metrics.Metric", "langfair.metrics.classification.metrics.false_discovery", "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "langfair.metrics.classification.metrics.false_negative", "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "langfair.metrics.classification.metrics.false_omission", "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "langfair.metrics.classification.metrics.false_positive", "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "langfair.metrics.classification.metrics.predicted_prevalence", "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "langfair.metrics.counterfactual", "langfair.metrics.counterfactual.counterfactual", "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", "langfair.metrics.counterfactual.metrics", "langfair.metrics.counterfactual.metrics.baseclass", "langfair.metrics.counterfactual.metrics.baseclass.metrics", "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", "langfair.metrics.counterfactual.metrics.bleu", "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", "langfair.metrics.counterfactual.metrics.cosine", "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", "langfair.metrics.counterfactual.metrics.rougel", "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", "langfair.metrics.counterfactual.metrics.sentimentbias", "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "langfair.metrics.recommendation", "langfair.metrics.recommendation.metrics", "langfair.metrics.recommendation.metrics.baseclass", "langfair.metrics.recommendation.metrics.baseclass.metrics", "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", "langfair.metrics.recommendation.metrics.jaccard", "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "langfair.metrics.recommendation.metrics.prag", "langfair.metrics.recommendation.metrics.prag.PRAG", "langfair.metrics.recommendation.metrics.serp", "langfair.metrics.recommendation.metrics.serp.SERP", "langfair.metrics.recommendation.recommendation", "langfair.metrics.recommendation.recommendation.RecommendationMetrics", "langfair.metrics.stereotype", "langfair.metrics.stereotype.metrics", "langfair.metrics.stereotype.metrics.associations", "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", "langfair.metrics.stereotype.metrics.baseclass", "langfair.metrics.stereotype.metrics.baseclass.metrics", "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", "langfair.metrics.stereotype.metrics.classifier", "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", "langfair.metrics.stereotype.metrics.cooccurrence", "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "langfair.metrics.stereotype.stereotype", "langfair.metrics.stereotype.stereotype.StereotypeMetrics", "langfair.metrics.toxicity", "langfair.metrics.toxicity.toxicity", "langfair.metrics.toxicity.toxicity.ToxicityMetrics", "llambda.auto", "llambda.auto.auto", "llambda.auto.auto.AutoEval", "llambda.constants", "llambda.constants.cost_data", "llambda.constants.word_lists", "llambda.generator", "llambda.generator.counterfactual", "llambda.generator.counterfactual.CounterfactualGenerator", "llambda.generator.generator", "llambda.generator.generator.ResponseGenerator", "llambda.metrics", "llambda.metrics.classification", "llambda.metrics.classification.classification", "llambda.metrics.classification.classification.ClassificationMetrics", "llambda.metrics.classification.metrics", "llambda.metrics.classification.metrics.baseclass", "llambda.metrics.classification.metrics.baseclass.metrics", "llambda.metrics.classification.metrics.baseclass.metrics.Metric", "llambda.metrics.classification.metrics.false_discovery", "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "llambda.metrics.classification.metrics.false_negative", "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "llambda.metrics.classification.metrics.false_omission", "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "llambda.metrics.classification.metrics.false_positive", "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "llambda.metrics.classification.metrics.predicted_prevalence", "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "llambda.metrics.counterfactual", "llambda.metrics.counterfactual.counterfactual", "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "llambda.metrics.counterfactual.metrics", "llambda.metrics.counterfactual.metrics.baseclass", "llambda.metrics.counterfactual.metrics.baseclass.metrics", "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "llambda.metrics.counterfactual.metrics.bleu", "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "llambda.metrics.counterfactual.metrics.cosine", "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "llambda.metrics.counterfactual.metrics.rougel", "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "llambda.metrics.counterfactual.metrics.sentimentbias", "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "llambda.metrics.recommendation", "llambda.metrics.recommendation.metrics", "llambda.metrics.recommendation.metrics.baseclass", "llambda.metrics.recommendation.metrics.baseclass.metrics", "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "llambda.metrics.recommendation.metrics.jaccard", "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "llambda.metrics.recommendation.metrics.prag", "llambda.metrics.recommendation.metrics.prag.PRAG", "llambda.metrics.recommendation.metrics.serp", "llambda.metrics.recommendation.metrics.serp.SERP", "llambda.metrics.recommendation.recommendation", "llambda.metrics.recommendation.recommendation.RecommendationMetrics", "llambda.metrics.stereotype", "llambda.metrics.stereotype.metrics", "llambda.metrics.stereotype.metrics.associations", "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "llambda.metrics.stereotype.metrics.baseclass", "llambda.metrics.stereotype.metrics.baseclass.metrics", "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "llambda.metrics.stereotype.metrics.classifier", "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "llambda.metrics.stereotype.metrics.cooccurrence", "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "llambda.metrics.stereotype.stereotype", "llambda.metrics.stereotype.stereotype.StereotypeMetrics", "llambda.metrics.toxicity", "llambda.metrics.toxicity.toxicity", "llambda.metrics.toxicity.toxicity.ToxicityMetrics", "API", "Welcome to LangFair\u2019s documentation!", "Usage", "langfair.auto", "langfair.auto.auto", "langfair.auto.auto.AutoEval", "langfair.constants", "langfair.constants.cost_data", "langfair.constants.word_lists", "langfair.generator", "langfair.generator.counterfactual", "langfair.generator.counterfactual.CounterfactualGenerator", "langfair.generator.generator", "langfair.generator.generator.ResponseGenerator", "langfair.metrics", "langfair.metrics.classification", "langfair.metrics.classification.classification", "langfair.metrics.classification.classification.ClassificationMetrics", "langfair.metrics.classification.metrics", "langfair.metrics.classification.metrics.baseclass", "langfair.metrics.classification.metrics.baseclass.metrics", "langfair.metrics.classification.metrics.baseclass.metrics.Metric", "langfair.metrics.classification.metrics.false_discovery", "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "langfair.metrics.classification.metrics.false_negative", "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "langfair.metrics.classification.metrics.false_omission", "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "langfair.metrics.classification.metrics.false_positive", "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "langfair.metrics.classification.metrics.predicted_prevalence", "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "langfair.metrics.counterfactual", "langfair.metrics.counterfactual.counterfactual", "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", "langfair.metrics.counterfactual.metrics", "langfair.metrics.counterfactual.metrics.baseclass", "langfair.metrics.counterfactual.metrics.baseclass.metrics", "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", "langfair.metrics.counterfactual.metrics.bleu", "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", "langfair.metrics.counterfactual.metrics.cosine", "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", "langfair.metrics.counterfactual.metrics.rougel", "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", "langfair.metrics.counterfactual.metrics.sentimentbias", "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "langfair.metrics.recommendation", "langfair.metrics.recommendation.metrics", "langfair.metrics.recommendation.metrics.baseclass", "langfair.metrics.recommendation.metrics.baseclass.metrics", "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", "langfair.metrics.recommendation.metrics.jaccard", "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "langfair.metrics.recommendation.metrics.prag", "langfair.metrics.recommendation.metrics.prag.PRAG", "langfair.metrics.recommendation.metrics.serp", "langfair.metrics.recommendation.metrics.serp.SERP", "langfair.metrics.recommendation.recommendation", "langfair.metrics.recommendation.recommendation.RecommendationMetrics", "langfair.metrics.stereotype", "langfair.metrics.stereotype.metrics", "langfair.metrics.stereotype.metrics.associations", "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", "langfair.metrics.stereotype.metrics.baseclass", "langfair.metrics.stereotype.metrics.baseclass.metrics", "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", "langfair.metrics.stereotype.metrics.classifier", "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", "langfair.metrics.stereotype.metrics.cooccurrence", "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "langfair.metrics.stereotype.stereotype", "langfair.metrics.stereotype.stereotype.StereotypeMetrics", "langfair.metrics.toxicity", "langfair.metrics.toxicity.toxicity", "langfair.metrics.toxicity.toxicity.ToxicityMetrics", "llambda.auto", "llambda.auto.auto", "llambda.auto.auto.AutoEval", "llambda.constants", "llambda.constants.cost_data", "llambda.constants.word_lists", "llambda.generator", "llambda.generator.counterfactual", "llambda.generator.counterfactual.CounterfactualGenerator", "llambda.generator.generator", "llambda.generator.generator.ResponseGenerator", "llambda.metrics", "llambda.metrics.classification", "llambda.metrics.classification.classification", "llambda.metrics.classification.classification.ClassificationMetrics", "llambda.metrics.classification.metrics", "llambda.metrics.classification.metrics.baseclass", "llambda.metrics.classification.metrics.baseclass.metrics", "llambda.metrics.classification.metrics.baseclass.metrics.Metric", "llambda.metrics.classification.metrics.false_discovery", "llambda.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "llambda.metrics.classification.metrics.false_negative", "llambda.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "llambda.metrics.classification.metrics.false_omission", "llambda.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "llambda.metrics.classification.metrics.false_positive", "llambda.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "llambda.metrics.classification.metrics.predicted_prevalence", "llambda.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "llambda.metrics.counterfactual", "llambda.metrics.counterfactual.counterfactual", "llambda.metrics.counterfactual.counterfactual.CounterfactualMetrics", "llambda.metrics.counterfactual.metrics", "llambda.metrics.counterfactual.metrics.baseclass", "llambda.metrics.counterfactual.metrics.baseclass.metrics", "llambda.metrics.counterfactual.metrics.baseclass.metrics.Metric", "llambda.metrics.counterfactual.metrics.bleu", "llambda.metrics.counterfactual.metrics.bleu.BleuSimilarity", "llambda.metrics.counterfactual.metrics.cosine", "llambda.metrics.counterfactual.metrics.cosine.CosineSimilarity", "llambda.metrics.counterfactual.metrics.rougel", "llambda.metrics.counterfactual.metrics.rougel.RougelSimilarity", "llambda.metrics.counterfactual.metrics.sentimentbias", "llambda.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "llambda.metrics.recommendation", "llambda.metrics.recommendation.metrics", "llambda.metrics.recommendation.metrics.baseclass", "llambda.metrics.recommendation.metrics.baseclass.metrics", "llambda.metrics.recommendation.metrics.baseclass.metrics.Metric", "llambda.metrics.recommendation.metrics.jaccard", "llambda.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "llambda.metrics.recommendation.metrics.prag", "llambda.metrics.recommendation.metrics.prag.PRAG", "llambda.metrics.recommendation.metrics.serp", "llambda.metrics.recommendation.metrics.serp.SERP", "llambda.metrics.recommendation.recommendation", "llambda.metrics.recommendation.recommendation.RecommendationMetrics", "llambda.metrics.stereotype", "llambda.metrics.stereotype.metrics", "llambda.metrics.stereotype.metrics.associations", "llambda.metrics.stereotype.metrics.associations.StereotypicalAssociations", "llambda.metrics.stereotype.metrics.baseclass", "llambda.metrics.stereotype.metrics.baseclass.metrics", "llambda.metrics.stereotype.metrics.baseclass.metrics.Metric", "llambda.metrics.stereotype.metrics.classifier", "llambda.metrics.stereotype.metrics.classifier.StereotypeClassifier", "llambda.metrics.stereotype.metrics.cooccurrence", "llambda.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "llambda.metrics.stereotype.stereotype", "llambda.metrics.stereotype.stereotype.StereotypeMetrics", "llambda.metrics.toxicity", "llambda.metrics.toxicity.toxicity", "llambda.metrics.toxicity.toxicity.ToxicityMetrics", "API", "Welcome to LangFair\u2019s documentation!", "Usage"], "titleterms": {"": [147, 296], "api": [146, 295], "associ": [59, 60, 132, 133, 208, 209, 281, 282], "auto": [0, 1, 2, 73, 74, 75, 149, 150, 151, 222, 223, 224], "autoev": [2, 75, 151, 224], "baseclass": [16, 17, 18, 33, 34, 35, 46, 47, 48, 61, 62, 63, 89, 90, 91, 106, 107, 108, 119, 120, 121, 134, 135, 136, 165, 166, 167, 182, 183, 184, 195, 196, 197, 210, 211, 212, 238, 239, 240, 255, 256, 257, 268, 269, 270, 283, 284, 285], "bleu": [36, 37, 109, 110, 185, 186, 258, 259], "bleusimilar": [37, 110, 186, 259], "classif": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250], "classifi": [64, 65, 137, 138, 213, 214, 286, 287], "classificationmetr": [14, 87, 163, 236], "constant": [3, 4, 5, 76, 77, 78, 152, 153, 154, 225, 226, 227], "content": 296, "cooccurr": [66, 67, 139, 140, 215, 216, 288, 289], "cooccurrencebiasmetr": [67, 140, 216, 289], "cosin": [38, 39, 111, 112, 187, 188, 260, 261], "cosinesimilar": [39, 112, 188, 261], "cost_data": [4, 77, 153, 226], "counterfactu": [7, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 80, 81, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 156, 157, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 229, 230, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265], "counterfactualgener": [8, 81, 157, 230], "counterfactualmetr": [31, 104, 180, 253], "document": [147, 296], "false_discoveri": [19, 20, 92, 93, 168, 169, 241, 242], "false_neg": [21, 22, 94, 95, 170, 171, 243, 244], "false_omiss": [23, 24, 96, 97, 172, 173, 245, 246], "false_posit": [25, 26, 98, 99, 174, 175, 247, 248], "falsediscoveryratepar": [20, 93, 169, 242], "falsenegativeratepar": [22, 95, 171, 244], "falseomissionratepar": [24, 97, 173, 246], "falsepositiveratepar": [26, 99, 175, 248], "gener": [6, 7, 8, 9, 10, 79, 80, 81, 82, 83, 155, 156, 157, 158, 159, 228, 229, 230, 231, 232], "instal": [148, 297], "jaccard": [49, 50, 122, 123, 198, 199, 271, 272], "jaccardsimilar": [50, 123, 199, 272], "langfair": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 296], "llambda": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "metric": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "paramet": [2, 75, 151, 224], "prag": [51, 52, 124, 125, 200, 201, 273, 274], "predicted_preval": [27, 28, 100, 101, 176, 177, 249, 250], "predictedprevalenceratepar": [28, 101, 177, 250], "recommend": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "recommendationmetr": [56, 129, 205, 278], "responsegener": [10, 83, 159, 232], "return": [2, 75, 151, 224], "rougel": [40, 41, 113, 114, 189, 190, 262, 263], "rougelsimilar": [41, 114, 190, 263], "sentimentbia": [42, 43, 115, 116, 191, 192, 264, 265], "serp": [53, 54, 126, 127, 202, 203, 275, 276], "stereotyp": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291], "stereotypeclassifi": [65, 138, 214, 287], "stereotypemetr": [69, 142, 218, 291], "stereotypicalassoci": [60, 133, 209, 282], "toxic": [70, 71, 72, 143, 144, 145, 219, 220, 221, 292, 293, 294], "toxicitymetr": [72, 145, 221, 294], "usag": [148, 297], "welcom": [147, 296], "word_list": [5, 78, 154, 227]}})