Search.setIndex({"alltitles": {"(Optional) Create a virtual environment for using LangFair": [[94, "optional-create-a-virtual-environment-for-using-langfair"]], "1. Introduction": [[75, "introduction"], [76, "introduction"], [82, "introduction"], [85, "introduction"], [87, "introduction"]], "2. Assessment": [[75, "assessment"], [82, "assessment"]], "2. Generate Demo Dataset": [[76, "generate-demo-dataset"]], "2. Generate Evaluation Dataset (skip if responses already generated)": [[85, "generate-evaluation-dataset-skip-if-responses-already-generated"], [87, "generate-evaluation-dataset-skip-if-responses-already-generated"]], "3. Assessment": [[76, "assessment"], [85, "assessment"]], "3. Metric Definitions": [[82, "metric-definitions"]], "3. Toxicity Assessment": [[87, "toxicity-assessment"]], "4. Metric Definitions": [[76, "metric-definitions"], [87, "metric-definitions"]], "4. Metric Definitions and Examples": [[85, "metric-definitions-and-examples"]], "API": [[73, "api"]], "Alternative approach: Semi-automated evaluation with AutoEval": [[94, "alternative-approach-semi-automated-evaluation-with-autoeval"]], "Auto Eval Demo - Dialogue Summarization": [[74, "auto-eval-demo-dialogue-summarization"]], "Basics & Model Specification of AdversarialFairnessClassifier": [[86, "basics-model-specification-of-adversarialfairnessclassifier"]], "Calculate recommendation metrics": [[82, "calculate-recommendation-metrics"]], "Choosing Bias and Fairness Metrics for an LLM Use Case": [[89, "choosing-bias-and-fairness-metrics-for-an-llm-use-case"], [92, "choosing-bias-and-fairness-metrics-for-an-llm-use-case"]], "Choosing Metrics": [[89, "choosing-metrics"]], "Classification Metrics": [[75, "classification-metrics"], [75, "id9"]], "Code Style": [[90, "code-style"]], "Computation times": [[78, "computation-times"], [80, "computation-times"], [84, "computation-times"], [93, "computation-times"]], "Compute stereotype metrics": [[94, "compute-stereotype-metrics"]], "Compute toxicity metrics": [[94, "compute-toxicity-metrics"]], "Computing Co-occurrence Bias Score: an example": [[85, "computing-co-occurrence-bias-score-an-example"]], "Computing Stereotypical Associations Score: an example": [[85, "computing-stereotypical-associations-score-an-example"]], "Content": [[76, "content"], [85, "content"], [87, "content"]], "Contents:": [[91, null]], "Contributor Guide": [[90, "contributor-guide"]], "Counterfactual Dataset Generator": [[76, "counterfactual-dataset-generator"]], "Counterfactual Metrics": [[76, "counterfactual-metrics"]], "Definitions and Examples: Cooccurrence-Based Metrics": [[85, "definitions-and-examples-cooccurrence-based-metrics"]], "Definitions: Stereotype-Classifier Based Metrics": [[85, "definitions-stereotype-classifier-based-metrics"]], "Development Setup": [[90, "development-setup"]], "Evaluating Response Time: Asynchronous Generation with ResponseGenerator vs Synchronous Generation with openai.chat.completions.create": [[83, "evaluating-response-time-asynchronous-generation-with-responsegenerator-vs-synchronous-generation-with-openai-chat-completions-create"]], "Example Notebooks": [[81, "example-notebooks"]], "Featured Resources": [[91, "featured-resources"]], "Generate LLM responses": [[94, "generate-llm-responses"]], "Generate counterfactual responses and compute metrics": [[94, "generate-counterfactual-responses-and-compute-metrics"]], "How to Contribute": [[90, "how-to-contribute"]], "Installing LangFair": [[94, "installing-langfair"]], "LangFair: Use-Case Level LLM Bias and Fairness Assessments": [[92, "langfair-use-case-level-llm-bias-and-fairness-assessments"]], "License": [[90, "license"]], "Metric Definitions": [[74, "metric-definitions"]], "Overview": [[92, "overview"]], "Pull Requests": [[90, "pull-requests"]], "Quickstart Guide": [[94, "quickstart-guide"]], "Recommendation Metrics": [[82, "recommendation-metrics"], [82, "id4"]], "Reporting Bugs": [[90, "reporting-bugs"]], "ResponseGenerator Class": [[83, "responsegenerator-class"]], "Stereotype Assessment Metrics": [[85, "stereotype-assessment-metrics"]], "Style Guides": [[90, "style-guides"]], "Suggesting Enhancements": [[90, "suggesting-enhancements"]], "Supported Bias and Fairness Metrics": [[89, "supported-bias-and-fairness-metrics"], [92, "supported-bias-and-fairness-metrics"]], "Table of Contents": [[90, "table-of-contents"]], "Test Notebook": [[88, "test-notebook"]], "Toxicity Metrics": [[87, "toxicity-metrics"], [87, "id3"]], "Usage Examples": [[94, "usage-examples"]], "Welcome to LangFair\u2019s documentation!": [[91, "welcome-to-langfair-s-documentation"]], "Why LangFair?": [[91, "why-langfair"]], "Why choose LangFair?": [[92, "why-choose-langfair"]], "langfair.auto": [[0, "module-langfair.auto"]], "langfair.auto.auto": [[1, "module-langfair.auto.auto"]], "langfair.auto.auto.AutoEval": [[2, "langfair-auto-auto-autoeval"]], "langfair.constants": [[3, "module-langfair.constants"]], "langfair.constants.cost_data": [[4, "module-langfair.constants.cost_data"]], "langfair.constants.word_lists": [[5, "module-langfair.constants.word_lists"]], "langfair.generator": [[6, "module-langfair.generator"]], "langfair.generator.counterfactual": [[7, "module-langfair.generator.counterfactual"]], "langfair.generator.counterfactual.CounterfactualGenerator": [[8, "langfair-generator-counterfactual-counterfactualgenerator"]], "langfair.generator.generator": [[9, "module-langfair.generator.generator"]], "langfair.generator.generator.ResponseGenerator": [[10, "langfair-generator-generator-responsegenerator"]], "langfair.metrics": [[11, "module-langfair.metrics"]], "langfair.metrics.classification": [[12, "module-langfair.metrics.classification"]], "langfair.metrics.classification.classification": [[13, "module-langfair.metrics.classification.classification"]], "langfair.metrics.classification.classification.ClassificationMetrics": [[14, "langfair-metrics-classification-classification-classificationmetrics"]], "langfair.metrics.classification.metrics": [[15, "module-langfair.metrics.classification.metrics"]], "langfair.metrics.classification.metrics.baseclass": [[16, "module-langfair.metrics.classification.metrics.baseclass"]], "langfair.metrics.classification.metrics.baseclass.metrics": [[17, "module-langfair.metrics.classification.metrics.baseclass.metrics"]], "langfair.metrics.classification.metrics.baseclass.metrics.Metric": [[18, "langfair-metrics-classification-metrics-baseclass-metrics-metric"]], "langfair.metrics.classification.metrics.false_discovery": [[19, "module-langfair.metrics.classification.metrics.false_discovery"]], "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[20, "langfair-metrics-classification-metrics-false-discovery-falsediscoveryrateparity"]], "langfair.metrics.classification.metrics.false_negative": [[21, "module-langfair.metrics.classification.metrics.false_negative"]], "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[22, "langfair-metrics-classification-metrics-false-negative-falsenegativerateparity"]], "langfair.metrics.classification.metrics.false_omission": [[23, "module-langfair.metrics.classification.metrics.false_omission"]], "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[24, "langfair-metrics-classification-metrics-false-omission-falseomissionrateparity"]], "langfair.metrics.classification.metrics.false_positive": [[25, "module-langfair.metrics.classification.metrics.false_positive"]], "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[26, "langfair-metrics-classification-metrics-false-positive-falsepositiverateparity"]], "langfair.metrics.classification.metrics.predicted_prevalence": [[27, "module-langfair.metrics.classification.metrics.predicted_prevalence"]], "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[28, "langfair-metrics-classification-metrics-predicted-prevalence-predictedprevalencerateparity"]], "langfair.metrics.counterfactual": [[29, "module-langfair.metrics.counterfactual"]], "langfair.metrics.counterfactual.counterfactual": [[30, "module-langfair.metrics.counterfactual.counterfactual"]], "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[31, "langfair-metrics-counterfactual-counterfactual-counterfactualmetrics"]], "langfair.metrics.counterfactual.metrics": [[32, "module-langfair.metrics.counterfactual.metrics"]], "langfair.metrics.counterfactual.metrics.baseclass": [[33, "module-langfair.metrics.counterfactual.metrics.baseclass"]], "langfair.metrics.counterfactual.metrics.baseclass.metrics": [[34, "module-langfair.metrics.counterfactual.metrics.baseclass.metrics"]], "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[35, "langfair-metrics-counterfactual-metrics-baseclass-metrics-metric"]], "langfair.metrics.counterfactual.metrics.bleu": [[36, "module-langfair.metrics.counterfactual.metrics.bleu"]], "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[37, "langfair-metrics-counterfactual-metrics-bleu-bleusimilarity"]], "langfair.metrics.counterfactual.metrics.cosine": [[38, "module-langfair.metrics.counterfactual.metrics.cosine"]], "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[39, "langfair-metrics-counterfactual-metrics-cosine-cosinesimilarity"]], "langfair.metrics.counterfactual.metrics.rougel": [[40, "module-langfair.metrics.counterfactual.metrics.rougel"]], "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[41, "langfair-metrics-counterfactual-metrics-rougel-rougelsimilarity"]], "langfair.metrics.counterfactual.metrics.sentimentbias": [[42, "module-langfair.metrics.counterfactual.metrics.sentimentbias"]], "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[43, "langfair-metrics-counterfactual-metrics-sentimentbias-sentimentbias"]], "langfair.metrics.recommendation": [[44, "module-langfair.metrics.recommendation"]], "langfair.metrics.recommendation.metrics": [[45, "module-langfair.metrics.recommendation.metrics"]], "langfair.metrics.recommendation.metrics.baseclass": [[46, "module-langfair.metrics.recommendation.metrics.baseclass"]], "langfair.metrics.recommendation.metrics.baseclass.metrics": [[47, "module-langfair.metrics.recommendation.metrics.baseclass.metrics"]], "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric": [[48, "langfair-metrics-recommendation-metrics-baseclass-metrics-metric"]], "langfair.metrics.recommendation.metrics.jaccard": [[49, "module-langfair.metrics.recommendation.metrics.jaccard"]], "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[50, "langfair-metrics-recommendation-metrics-jaccard-jaccardsimilarity"]], "langfair.metrics.recommendation.metrics.prag": [[51, "module-langfair.metrics.recommendation.metrics.prag"]], "langfair.metrics.recommendation.metrics.prag.PRAG": [[52, "langfair-metrics-recommendation-metrics-prag-prag"]], "langfair.metrics.recommendation.metrics.serp": [[53, "module-langfair.metrics.recommendation.metrics.serp"]], "langfair.metrics.recommendation.metrics.serp.SERP": [[54, "langfair-metrics-recommendation-metrics-serp-serp"]], "langfair.metrics.recommendation.recommendation": [[55, "module-langfair.metrics.recommendation.recommendation"]], "langfair.metrics.recommendation.recommendation.RecommendationMetrics": [[56, "langfair-metrics-recommendation-recommendation-recommendationmetrics"]], "langfair.metrics.stereotype": [[57, "module-langfair.metrics.stereotype"]], "langfair.metrics.stereotype.metrics": [[58, "module-langfair.metrics.stereotype.metrics"]], "langfair.metrics.stereotype.metrics.associations": [[59, "module-langfair.metrics.stereotype.metrics.associations"]], "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[60, "langfair-metrics-stereotype-metrics-associations-stereotypicalassociations"]], "langfair.metrics.stereotype.metrics.baseclass": [[61, "module-langfair.metrics.stereotype.metrics.baseclass"]], "langfair.metrics.stereotype.metrics.baseclass.metrics": [[62, "module-langfair.metrics.stereotype.metrics.baseclass.metrics"]], "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric": [[63, "langfair-metrics-stereotype-metrics-baseclass-metrics-metric"]], "langfair.metrics.stereotype.metrics.classifier": [[64, "module-langfair.metrics.stereotype.metrics.classifier"]], "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[65, "langfair-metrics-stereotype-metrics-classifier-stereotypeclassifier"]], "langfair.metrics.stereotype.metrics.cooccurrence": [[66, "module-langfair.metrics.stereotype.metrics.cooccurrence"]], "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[67, "langfair-metrics-stereotype-metrics-cooccurrence-cooccurrencebiasmetric"]], "langfair.metrics.stereotype.stereotype": [[68, "module-langfair.metrics.stereotype.stereotype"]], "langfair.metrics.stereotype.stereotype.StereotypeMetrics": [[69, "langfair-metrics-stereotype-stereotype-stereotypemetrics"]], "langfair.metrics.toxicity": [[70, "module-langfair.metrics.toxicity"]], "langfair.metrics.toxicity.toxicity": [[71, "module-langfair.metrics.toxicity.toxicity"]], "langfair.metrics.toxicity.toxicity.ToxicityMetrics": [[72, "langfair-metrics-toxicity-toxicity-toxicitymetrics"]]}, "docnames": ["_autosummary/langfair.auto", "_autosummary/langfair.auto.auto", "_autosummary/langfair.auto.auto.AutoEval", "_autosummary/langfair.constants", "_autosummary/langfair.constants.cost_data", "_autosummary/langfair.constants.word_lists", "_autosummary/langfair.generator", "_autosummary/langfair.generator.counterfactual", "_autosummary/langfair.generator.counterfactual.CounterfactualGenerator", "_autosummary/langfair.generator.generator", "_autosummary/langfair.generator.generator.ResponseGenerator", "_autosummary/langfair.metrics", "_autosummary/langfair.metrics.classification", "_autosummary/langfair.metrics.classification.classification", "_autosummary/langfair.metrics.classification.classification.ClassificationMetrics", "_autosummary/langfair.metrics.classification.metrics", "_autosummary/langfair.metrics.classification.metrics.baseclass", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.classification.metrics.false_discovery", "_autosummary/langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "_autosummary/langfair.metrics.classification.metrics.false_negative", "_autosummary/langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "_autosummary/langfair.metrics.classification.metrics.false_omission", "_autosummary/langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "_autosummary/langfair.metrics.classification.metrics.false_positive", "_autosummary/langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "_autosummary/langfair.metrics.counterfactual", "_autosummary/langfair.metrics.counterfactual.counterfactual", "_autosummary/langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", "_autosummary/langfair.metrics.counterfactual.metrics", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.counterfactual.metrics.bleu", "_autosummary/langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", "_autosummary/langfair.metrics.counterfactual.metrics.cosine", "_autosummary/langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", "_autosummary/langfair.metrics.counterfactual.metrics.rougel", "_autosummary/langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "_autosummary/langfair.metrics.recommendation", "_autosummary/langfair.metrics.recommendation.metrics", "_autosummary/langfair.metrics.recommendation.metrics.baseclass", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.recommendation.metrics.jaccard", "_autosummary/langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "_autosummary/langfair.metrics.recommendation.metrics.prag", "_autosummary/langfair.metrics.recommendation.metrics.prag.PRAG", "_autosummary/langfair.metrics.recommendation.metrics.serp", "_autosummary/langfair.metrics.recommendation.metrics.serp.SERP", "_autosummary/langfair.metrics.recommendation.recommendation", "_autosummary/langfair.metrics.recommendation.recommendation.RecommendationMetrics", "_autosummary/langfair.metrics.stereotype", "_autosummary/langfair.metrics.stereotype.metrics", "_autosummary/langfair.metrics.stereotype.metrics.associations", "_autosummary/langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", "_autosummary/langfair.metrics.stereotype.metrics.baseclass", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", "_autosummary/langfair.metrics.stereotype.metrics.classifier", "_autosummary/langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "_autosummary/langfair.metrics.stereotype.stereotype", "_autosummary/langfair.metrics.stereotype.stereotype.StereotypeMetrics", "_autosummary/langfair.metrics.toxicity", "_autosummary/langfair.metrics.toxicity.toxicity", "_autosummary/langfair.metrics.toxicity.toxicity.ToxicityMetrics", "api", "auto_examples/auto_eval_demo", "auto_examples/classification_metrics_demo", "auto_examples/counterfactual_metrics_demo", "auto_examples/evaluations/index", "auto_examples/evaluations/sg_execution_times", "auto_examples/generators/index", "auto_examples/generators/sg_execution_times", "auto_examples/index", "auto_examples/recommendation_metrics_demo", "auto_examples/response_generator_demo", "auto_examples/sg_execution_times", "auto_examples/stereotype_metrics_demo", "auto_examples/test-notebook", "auto_examples/toxicity_metrics_demo", "auto_examples/yyy-test", "choosing_metrics", "guide", "index", "overview", "sg_execution_times", "usage"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["_autosummary/langfair.auto.rst", "_autosummary/langfair.auto.auto.rst", "_autosummary/langfair.auto.auto.AutoEval.rst", "_autosummary/langfair.constants.rst", "_autosummary/langfair.constants.cost_data.rst", "_autosummary/langfair.constants.word_lists.rst", "_autosummary/langfair.generator.rst", "_autosummary/langfair.generator.counterfactual.rst", "_autosummary/langfair.generator.counterfactual.CounterfactualGenerator.rst", "_autosummary/langfair.generator.generator.rst", "_autosummary/langfair.generator.generator.ResponseGenerator.rst", "_autosummary/langfair.metrics.rst", "_autosummary/langfair.metrics.classification.rst", "_autosummary/langfair.metrics.classification.classification.rst", "_autosummary/langfair.metrics.classification.classification.ClassificationMetrics.rst", "_autosummary/langfair.metrics.classification.metrics.rst", "_autosummary/langfair.metrics.classification.metrics.baseclass.rst", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.classification.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.classification.metrics.false_discovery.rst", "_autosummary/langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.false_negative.rst", "_autosummary/langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.false_omission.rst", "_autosummary/langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.false_positive.rst", "_autosummary/langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.rst", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.rst", "_autosummary/langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.rst", "_autosummary/langfair.metrics.counterfactual.rst", "_autosummary/langfair.metrics.counterfactual.counterfactual.rst", "_autosummary/langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics.rst", "_autosummary/langfair.metrics.counterfactual.metrics.rst", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.rst", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.counterfactual.metrics.bleu.rst", "_autosummary/langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity.rst", "_autosummary/langfair.metrics.counterfactual.metrics.cosine.rst", "_autosummary/langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity.rst", "_autosummary/langfair.metrics.counterfactual.metrics.rougel.rst", "_autosummary/langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity.rst", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.rst", "_autosummary/langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias.rst", "_autosummary/langfair.metrics.recommendation.rst", "_autosummary/langfair.metrics.recommendation.metrics.rst", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.rst", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.recommendation.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.recommendation.metrics.jaccard.rst", "_autosummary/langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity.rst", "_autosummary/langfair.metrics.recommendation.metrics.prag.rst", "_autosummary/langfair.metrics.recommendation.metrics.prag.PRAG.rst", "_autosummary/langfair.metrics.recommendation.metrics.serp.rst", "_autosummary/langfair.metrics.recommendation.metrics.serp.SERP.rst", "_autosummary/langfair.metrics.recommendation.recommendation.rst", "_autosummary/langfair.metrics.recommendation.recommendation.RecommendationMetrics.rst", "_autosummary/langfair.metrics.stereotype.rst", "_autosummary/langfair.metrics.stereotype.metrics.rst", "_autosummary/langfair.metrics.stereotype.metrics.associations.rst", "_autosummary/langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations.rst", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.rst", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.rst", "_autosummary/langfair.metrics.stereotype.metrics.baseclass.metrics.Metric.rst", "_autosummary/langfair.metrics.stereotype.metrics.classifier.rst", "_autosummary/langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier.rst", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.rst", "_autosummary/langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric.rst", "_autosummary/langfair.metrics.stereotype.stereotype.rst", "_autosummary/langfair.metrics.stereotype.stereotype.StereotypeMetrics.rst", "_autosummary/langfair.metrics.toxicity.rst", "_autosummary/langfair.metrics.toxicity.toxicity.rst", "_autosummary/langfair.metrics.toxicity.toxicity.ToxicityMetrics.rst", "api.rst", "auto_examples/auto_eval_demo.rst", "auto_examples/classification_metrics_demo.rst", "auto_examples/counterfactual_metrics_demo.rst", "auto_examples/evaluations/index.rst", "auto_examples/evaluations/sg_execution_times.rst", "auto_examples/generators/index.rst", "auto_examples/generators/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/recommendation_metrics_demo.rst", "auto_examples/response_generator_demo.rst", "auto_examples/sg_execution_times.rst", "auto_examples/stereotype_metrics_demo.rst", "auto_examples/test-notebook.rst", "auto_examples/toxicity_metrics_demo.rst", "auto_examples/yyy-test.rst", "choosing_metrics.rst", "guide.rst", "index.rst", "overview.rst", "sg_execution_times.rst", "usage.rst"], "indexentries": {"__init__() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.__init__", false]], "__init__() (langfair.generator.generator.responsegenerator method)": [[10, "langfair.generator.generator.ResponseGenerator.__init__", false]], "__init__() (langfair.metrics.classification.metrics.baseclass.metrics.metric method)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.__init__", false]], "__init__() (langfair.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.__init__", false]], "binary_confusion_matrix() (langfair.metrics.classification.metrics.baseclass.metrics.metric static method)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.binary_confusion_matrix", false]], "binary_confusion_matrix() (langfair.metrics.classification.metrics.false_discovery.falsediscoveryrateparity static method)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.binary_confusion_matrix", false]], "binary_confusion_matrix() (langfair.metrics.classification.metrics.false_negative.falsenegativerateparity static method)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.binary_confusion_matrix", false]], "binary_confusion_matrix() (langfair.metrics.classification.metrics.false_omission.falseomissionrateparity static method)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.binary_confusion_matrix", false]], "binary_confusion_matrix() (langfair.metrics.classification.metrics.false_positive.falsepositiverateparity static method)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.binary_confusion_matrix", false]], "binary_confusion_matrix() (langfair.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity static method)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.binary_confusion_matrix", false]], "check_ftu() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.check_ftu", false]], "counterfactualgenerator (class in langfair.generator.counterfactual)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator", false]], "create_prompts() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.create_prompts", false]], "estimate_token_cost() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.estimate_token_cost", false]], "estimate_token_cost() (langfair.generator.generator.responsegenerator method)": [[10, "langfair.generator.generator.ResponseGenerator.estimate_token_cost", false]], "evaluate() (langfair.metrics.classification.metrics.baseclass.metrics.metric method)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_discovery.falsediscoveryrateparity method)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_negative.falsenegativerateparity method)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_omission.falseomissionrateparity method)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.false_positive.falsepositiverateparity method)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity.evaluate", false]], "evaluate() (langfair.metrics.classification.metrics.predicted_prevalence.predictedprevalencerateparity method)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity.evaluate", false]], "falsediscoveryrateparity (class in langfair.metrics.classification.metrics.false_discovery)": [[20, "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", false]], "falsenegativerateparity (class in langfair.metrics.classification.metrics.false_negative)": [[22, "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", false]], "falseomissionrateparity (class in langfair.metrics.classification.metrics.false_omission)": [[24, "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", false]], "falsepositiverateparity (class in langfair.metrics.classification.metrics.false_positive)": [[26, "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", false]], "generate_responses() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.generate_responses", false]], "generate_responses() (langfair.generator.generator.responsegenerator method)": [[10, "langfair.generator.generator.ResponseGenerator.generate_responses", false]], "langfair.generator": [[6, "module-langfair.generator", false]], "langfair.generator.counterfactual": [[7, "module-langfair.generator.counterfactual", false]], "langfair.generator.generator": [[9, "module-langfair.generator.generator", false]], "langfair.metrics.classification.metrics.baseclass": [[16, "module-langfair.metrics.classification.metrics.baseclass", false]], "langfair.metrics.classification.metrics.baseclass.metrics": [[17, "module-langfair.metrics.classification.metrics.baseclass.metrics", false]], "langfair.metrics.classification.metrics.false_discovery": [[19, "module-langfair.metrics.classification.metrics.false_discovery", false]], "langfair.metrics.classification.metrics.false_negative": [[21, "module-langfair.metrics.classification.metrics.false_negative", false]], "langfair.metrics.classification.metrics.false_omission": [[23, "module-langfair.metrics.classification.metrics.false_omission", false]], "langfair.metrics.classification.metrics.false_positive": [[25, "module-langfair.metrics.classification.metrics.false_positive", false]], "langfair.metrics.classification.metrics.predicted_prevalence": [[27, "module-langfair.metrics.classification.metrics.predicted_prevalence", false]], "metric (class in langfair.metrics.classification.metrics.baseclass.metrics)": [[18, "langfair.metrics.classification.metrics.baseclass.metrics.Metric", false]], "module": [[6, "module-langfair.generator", false], [7, "module-langfair.generator.counterfactual", false], [9, "module-langfair.generator.generator", false], [16, "module-langfair.metrics.classification.metrics.baseclass", false], [17, "module-langfair.metrics.classification.metrics.baseclass.metrics", false], [19, "module-langfair.metrics.classification.metrics.false_discovery", false], [21, "module-langfair.metrics.classification.metrics.false_negative", false], [23, "module-langfair.metrics.classification.metrics.false_omission", false], [25, "module-langfair.metrics.classification.metrics.false_positive", false], [27, "module-langfair.metrics.classification.metrics.predicted_prevalence", false]], "neutralize_tokens() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.neutralize_tokens", false]], "parse_texts() (langfair.generator.counterfactual.counterfactualgenerator method)": [[8, "langfair.generator.counterfactual.CounterfactualGenerator.parse_texts", false]], "predictedprevalencerateparity (class in langfair.metrics.classification.metrics.predicted_prevalence)": [[28, "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", false]], "responsegenerator (class in langfair.generator.generator)": [[10, "langfair.generator.generator.ResponseGenerator", false]]}, "objects": {"langfair": [[0, 0, 0, "-", "auto"], [3, 0, 0, "-", "constants"], [6, 0, 0, "-", "generator"], [11, 0, 0, "-", "metrics"]], "langfair.auto": [[1, 0, 0, "-", "auto"]], "langfair.auto.auto": [[2, 1, 1, "", "AutoEval"]], "langfair.auto.auto.AutoEval": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "export_results"], [2, 2, 1, "", "print_results"]], "langfair.constants": [[4, 0, 0, "-", "cost_data"], [5, 0, 0, "-", "word_lists"]], "langfair.generator": [[7, 0, 0, "-", "counterfactual"], [9, 0, 0, "-", "generator"]], "langfair.generator.counterfactual": [[8, 1, 1, "", "CounterfactualGenerator"]], "langfair.generator.counterfactual.CounterfactualGenerator": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "check_ftu"], [8, 2, 1, "", "create_prompts"], [8, 2, 1, "", "estimate_token_cost"], [8, 2, 1, "", "generate_responses"], [8, 2, 1, "", "neutralize_tokens"], [8, 2, 1, "", "parse_texts"]], "langfair.generator.generator": [[10, 1, 1, "", "ResponseGenerator"]], "langfair.generator.generator.ResponseGenerator": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "estimate_token_cost"], [10, 2, 1, "", "generate_responses"]], "langfair.metrics": [[12, 0, 0, "-", "classification"], [29, 0, 0, "-", "counterfactual"], [44, 0, 0, "-", "recommendation"], [57, 0, 0, "-", "stereotype"], [70, 0, 0, "-", "toxicity"]], "langfair.metrics.classification": [[13, 0, 0, "-", "classification"], [15, 0, 0, "-", "metrics"]], "langfair.metrics.classification.classification": [[14, 1, 1, "", "ClassificationMetrics"]], "langfair.metrics.classification.classification.ClassificationMetrics": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics": [[16, 0, 0, "-", "baseclass"], [19, 0, 0, "-", "false_discovery"], [21, 0, 0, "-", "false_negative"], [23, 0, 0, "-", "false_omission"], [25, 0, 0, "-", "false_positive"], [27, 0, 0, "-", "predicted_prevalence"]], "langfair.metrics.classification.metrics.baseclass": [[17, 0, 0, "-", "metrics"]], "langfair.metrics.classification.metrics.baseclass.metrics": [[18, 1, 1, "", "Metric"]], "langfair.metrics.classification.metrics.baseclass.metrics.Metric": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "binary_confusion_matrix"], [18, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_discovery": [[20, 1, 1, "", "FalseDiscoveryRateParity"]], "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "binary_confusion_matrix"], [20, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_negative": [[22, 1, 1, "", "FalseNegativeRateParity"]], "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "binary_confusion_matrix"], [22, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_omission": [[24, 1, 1, "", "FalseOmissionRateParity"]], "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "binary_confusion_matrix"], [24, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.false_positive": [[26, 1, 1, "", "FalsePositiveRateParity"]], "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "binary_confusion_matrix"], [26, 2, 1, "", "evaluate"]], "langfair.metrics.classification.metrics.predicted_prevalence": [[28, 1, 1, "", "PredictedPrevalenceRateParity"]], "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "binary_confusion_matrix"], [28, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual": [[30, 0, 0, "-", "counterfactual"], [32, 0, 0, "-", "metrics"]], "langfair.metrics.counterfactual.counterfactual": [[31, 1, 1, "", "CounterfactualMetrics"]], "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics": [[33, 0, 0, "-", "baseclass"], [36, 0, 0, "-", "bleu"], [38, 0, 0, "-", "cosine"], [40, 0, 0, "-", "rougel"], [42, 0, 0, "-", "sentimentbias"]], "langfair.metrics.counterfactual.metrics.baseclass": [[34, 0, 0, "-", "metrics"]], "langfair.metrics.counterfactual.metrics.baseclass.metrics": [[35, 1, 1, "", "Metric"]], "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.bleu": [[37, 1, 1, "", "BleuSimilarity"]], "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity": [[37, 2, 1, "", "__init__"], [37, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.cosine": [[39, 1, 1, "", "CosineSimilarity"]], "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.rougel": [[41, 1, 1, "", "RougelSimilarity"]], "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "evaluate"]], "langfair.metrics.counterfactual.metrics.sentimentbias": [[43, 1, 1, "", "SentimentBias"]], "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation": [[45, 0, 0, "-", "metrics"], [55, 0, 0, "-", "recommendation"]], "langfair.metrics.recommendation.metrics": [[46, 0, 0, "-", "baseclass"], [49, 0, 0, "-", "jaccard"], [51, 0, 0, "-", "prag"], [53, 0, 0, "-", "serp"]], "langfair.metrics.recommendation.metrics.baseclass": [[47, 0, 0, "-", "metrics"]], "langfair.metrics.recommendation.metrics.baseclass.metrics": [[48, 1, 1, "", "Metric"]], "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.metrics.jaccard": [[50, 1, 1, "", "JaccardSimilarity"]], "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.metrics.prag": [[52, 1, 1, "", "PRAG"]], "langfair.metrics.recommendation.metrics.prag.PRAG": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.metrics.serp": [[54, 1, 1, "", "SERP"]], "langfair.metrics.recommendation.metrics.serp.SERP": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "evaluate"]], "langfair.metrics.recommendation.recommendation": [[56, 1, 1, "", "RecommendationMetrics"]], "langfair.metrics.recommendation.recommendation.RecommendationMetrics": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "evaluate_against_neutral"], [56, 2, 1, "", "evaluate_pairwise"]], "langfair.metrics.stereotype": [[58, 0, 0, "-", "metrics"], [68, 0, 0, "-", "stereotype"]], "langfair.metrics.stereotype.metrics": [[59, 0, 0, "-", "associations"], [61, 0, 0, "-", "baseclass"], [64, 0, 0, "-", "classifier"], [66, 0, 0, "-", "cooccurrence"]], "langfair.metrics.stereotype.metrics.associations": [[60, 1, 1, "", "StereotypicalAssociations"]], "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "evaluate"]], "langfair.metrics.stereotype.metrics.baseclass": [[62, 0, 0, "-", "metrics"]], "langfair.metrics.stereotype.metrics.baseclass.metrics": [[63, 1, 1, "", "Metric"]], "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric": [[63, 2, 1, "", "__init__"], [63, 2, 1, "", "evaluate"]], "langfair.metrics.stereotype.metrics.classifier": [[65, 1, 1, "", "StereotypeClassifier"]], "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier": [[65, 2, 1, "", "__init__"], [65, 2, 1, "", "evaluate"], [65, 2, 1, "", "get_stereotype_scores"]], "langfair.metrics.stereotype.metrics.cooccurrence": [[67, 1, 1, "", "CooccurrenceBiasMetric"]], "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "evaluate"]], "langfair.metrics.stereotype.stereotype": [[69, 1, 1, "", "StereotypeMetrics"]], "langfair.metrics.stereotype.stereotype.StereotypeMetrics": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "evaluate"]], "langfair.metrics.toxicity": [[71, 0, 0, "-", "toxicity"]], "langfair.metrics.toxicity.toxicity": [[72, 1, 1, "", "ToxicityMetrics"]], "langfair.metrics.toxicity.toxicity.ToxicityMetrics": [[72, 2, 1, "", "__init__"], [72, 2, 1, "", "evaluate"], [72, 2, 1, "", "get_toxicity_scores"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "terms": {"": [2, 8, 10, 60, 74, 76, 81, 82, 83, 85, 87, 90, 92, 94], "0": [14, 22, 24, 26, 28, 43, 65, 67, 72, 74, 75, 76, 78, 80, 83, 84, 85, 87, 93, 94], "00": [78, 80, 84, 93], "000": [78, 80, 84, 93], "0004": 94, "00099471451876019577": 94, "00099471451876019657": 94, "01": 94, "01384513012017123": 94, "013845130120171235": 94, "01943": [14, 20, 22, 24, 26], "03035": [67, 69], "03064": [31, 43], "05577": [14, 20, 22, 24, 26], "0613": 83, "06520": 5, "07609": 56, "08": 94, "08412": 5, "09110": [60, 69, 72], "1": [14, 20, 22, 24, 26, 28, 31, 43, 56, 67, 69, 72, 74, 79, 83, 84, 93], "10": [10, 56, 74, 76, 85, 87], "100": [74, 87], "1000": [74, 76, 83, 85, 87], "10000": 75, "10853": [31, 37, 39, 41, 43], "1145": 56, "11462": [65, 72], "11698": 10, "1412": [14, 28], "14126": 69, "1584": 85, "16": 76, "1607": 5, "16k": 83, "1711": 5, "17th": 56, "1810": [14, 20, 22, 24, 26], "1811": [14, 20, 22, 24, 26], "1904": [67, 69], "1911": [31, 43], "2": [14, 20, 22, 24, 26, 31, 43, 69, 72, 74, 83], "200": 83, "2009": [65, 72], "2015": [14, 28, 75, 89, 92], "2016": 5, "2018": [5, 14, 20, 22, 24, 26, 75, 89, 92], "2019": [14, 20, 22, 24, 26, 67, 69, 75, 85, 89, 92], "2020": [10, 31, 43, 72, 76, 87, 89, 92], "2023": [56, 60, 69, 72, 82, 85, 87, 89, 92], "2024": [10, 31, 43, 76, 85, 89, 92], "21": 10, "2211": [60, 69, 72], "23": 56, "2305": 56, "2306": 10, "2311": 69, "2407": [31, 37, 39, 41, 43], "25": [8, 10, 65, 69, 72, 74, 76, 83, 85, 87, 94], "250": [65, 72, 85, 87], "27036": 94, "280": 94, "2r_i": [74, 76], "2x2": [18, 20, 22, 24, 26, 28], "3": [14, 69, 72, 74, 75, 83, 94], "30": [8, 10, 83], "3002": 85, "301": 10, "3172750176745329": 94, "325": [72, 87], "3278433712872481": 94, "32k": 83, "35": 83, "360": [14, 20, 22, 24, 26], "3604915": 56, "3608860": 56, "3756": [14, 28], "4": [5, 83, 94], "4476633365427837": 94, "45": 76, "5": [43, 65, 74, 75, 76, 83, 85, 94], "500": 83, "50000": 76, "5195852482361165": 94, "5f": 76, "6": [76, 85], "6035516738891": 94, "7": 85, "8": 85, "8318708": 94, "95": [67, 85], "993": 56, "999": 56, "A": [2, 8, 10, 14, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 76, 78, 80, 82, 83, 85, 87, 90], "As": [82, 86, 88], "For": [8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87, 89, 90, 92], "If": [2, 8, 10, 31, 41, 43, 60, 65, 67, 69, 72, 74, 76, 81, 83, 85, 87, 90], "In": [56, 75, 76, 82, 85], "It": [56, 82, 85, 90], "Not": [60, 67], "OF": [76, 83, 87], "One": [43, 60, 85], "THEIR": [76, 87], "TO": [76, 87], "The": [8, 10, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 65, 67, 72, 74, 76, 82, 83, 85, 87, 89, 92, 94], "There": 90, "These": [65, 77, 79, 82, 91, 92], "To": [74, 76, 83, 85, 87, 90, 94], "WITH": [76, 83, 87], "_": [74, 76, 85, 87], "_1": [74, 76, 85, 87], "_2": 85, "__author__": 86, "__doc__": 86, "__file__": 86, "__init__": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72], "__license__": 86, "__main__": [86, 88], "__name__": [86, 88], "__path__": [86, 88], "__version__": [86, 88], "_group_counts_to_bia": 60, "_i": [74, 76, 82, 85, 87], "_n": [74, 76, 85, 87], "_respons": 76, "_word": 76, "a_": 85, "ab": [5, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 60, 67, 69, 72], "abbi": [14, 20, 22, 24, 26], "abc": [18, 35, 48, 63], "abl": [2, 72, 74], "about": [8, 10, 76, 83, 85, 87], "abov": [74, 76, 85], "abstract": [18, 35, 48, 63], "acceler": [74, 87], "accept": [43, 72, 76, 87], "access": [91, 92], "accord": [82, 85], "accur": [89, 92], "accuraci": [52, 56, 82, 89, 92], "achiev": 82, "aclanthologi": [10, 85], "acm": 56, "acosta": [69, 72], "across": [56, 65, 69, 72, 74, 75, 82, 85], "action": [31, 43, 91], "activ": 90, "actual": [85, 87, 90, 91], "ad": 81, "adapt": [5, 43, 60, 82], "add": 90, "addition": [74, 85, 91, 92], "address": [91, 92], "adher": 90, "adject": [5, 60, 67, 85], "adjust": [74, 76, 85, 87], "adopt": [91, 92], "adriano": 69, "adversarialfairnessclassifi": [84, 93], "ae": 74, "aequita": [14, 20, 22, 24, 26], "aforement": [2, 31, 74, 76, 94], "after": 85, "again": [85, 90], "against": [82, 85, 87], "aggreg": 43, "agreement": 90, "ai": [14, 20, 22, 24, 26, 74, 76, 85, 87], "al": [5, 10, 14, 20, 22, 24, 26, 28, 31, 43, 56, 60, 69, 72, 75, 76, 82, 85, 87, 89, 92], "aleksandra": [14, 20, 22, 24, 26], "algorithm": [14, 20, 22, 24, 26], "align": [89, 92], "all": [2, 8, 14, 18, 31, 35, 37, 39, 41, 43, 48, 63, 65, 69, 72, 74, 75, 76, 81, 85, 87, 89, 90, 91, 92, 93, 94], "alloc": 75, "allow": [91, 92], "along": 92, "alreadi": 94, "also": [74, 87], "altern": 85, "although": 83, "am": 85, "among": [8, 74, 76, 85, 87], "an": [2, 14, 20, 22, 24, 26, 31, 43, 50, 52, 54, 65, 69, 72, 74, 75, 76, 82, 83, 87, 90], "analog": [31, 37, 39, 41, 43, 56], "ananya": [69, 72], "ani": [76, 85, 87, 89, 90, 92, 94], "anisfeld": [14, 20, 22, 24, 26], "anoth": [50, 52, 54], "answer": [74, 76, 85, 87], "api": [74, 76, 83, 85, 87, 91], "api_bas": [74, 76, 83, 85, 87], "api_kei": [74, 76, 83, 85, 87], "api_typ": [74, 76, 83, 85, 87], "api_vers": [74, 76, 83, 85, 87], "appear": [74, 85], "append": [74, 76, 83, 87], "appl": 76, "appli": [65, 69, 72, 74, 76, 85], "applic": [43, 72, 74, 75, 76, 89, 90, 91, 92], "appreci": 90, "approach": [76, 85, 91, 92], "appropri": [89, 92], "approx": 85, "ar": [2, 8, 10, 31, 56, 60, 65, 67, 69, 72, 74, 76, 77, 79, 82, 83, 85, 87, 89, 90, 91, 92, 94], "argument": [10, 28, 72, 74, 76, 83, 85, 87], "ari": [14, 20, 22, 24, 26], "around": 85, "arrai": [14, 18, 20, 22, 24, 26, 28, 75], "arxiv": [5, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72], "ascend": 74, "asian": [5, 76], "asian_respons": 76, "ask": 82, "assess": [31, 41, 43, 74, 81, 89, 91, 94], "assist": [8, 10, 14, 75, 76, 83, 85, 87], "assoc": 85, "associ": [69, 74, 89, 90, 91, 92, 94], "assum": [43, 76, 82, 91, 92, 94], "async": [2, 8, 10, 83], "async_respons": 83, "asynchron": [8, 76], "atleast": [65, 69, 72, 76, 85], "attack": 87, "attempt": [89, 92], "attribut": [2, 8, 31, 37, 39, 41, 43, 56, 67, 69, 74, 75, 76, 82, 85, 87, 89, 92, 94], "attribute_word": 8, "audit": [14, 20, 22, 24, 26, 69, 91, 92], "aunt": 85, "author": [85, 86], "auto": [81, 94], "auto_eval_demo": 74, "auto_exampl": [78, 80, 84], "auto_examples_jupyt": 81, "auto_examples_python": 81, "auto_object": 94, "autoev": [74, 85], "avail": [2, 74, 76, 85, 87, 94], "averag": [60, 65, 67, 69, 72, 74, 76, 82, 85], "avoid": [65, 72, 74, 76, 85, 87, 94], "await": [74, 76, 83, 85, 87, 94], "awar": 74, "ax": 76, "axi": 76, "azur": [74, 76, 85, 87], "azure_endpoint": [74, 76, 83, 85, 87], "azurechatopenai": [74, 76, 83, 85, 87], "b": 90, "back": [56, 82], "bad": [56, 82], "badrequesterror": [74, 76, 83, 85, 87], "bao": 56, "base": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72, 74, 83, 91, 92], "baselin": 85, "basic": [84, 93], "batch": [65, 72, 85, 87], "batch_siz": [65, 72, 85, 87], "bbox_to_anchor": 76, "becaus": 85, "been": 85, "befor": [2, 31, 74, 76, 83, 85, 90, 94], "behavior": 90, "being": [8, 74, 85, 87], "believ": 90, "belittl": 87, "bellami": [14, 20, 22, 24, 26, 75, 89, 92], "belong": [56, 82], "below": [74, 76, 82, 83, 85, 87, 89, 92, 94], "benchmark": [91, 92], "benchmark_path": 74, "benedict": [14, 20, 22, 24, 26], "benign": 74, "benjamin": [69, 72], "best": 92, "beta": [67, 85], "better": 76, "between": [20, 22, 24, 26, 28, 37, 39, 41, 43, 50, 52, 54, 74, 76, 82, 85], "bia": [5, 14, 20, 22, 24, 26, 31, 43, 60, 65, 67, 69, 72, 74, 76, 82, 87, 91, 94], "bieber": [56, 82], "bigger": 74, "binar": [43, 76, 87], "binari": [14, 18, 20, 22, 24, 26, 28, 75], "binary_confusion_matrix": [18, 20, 22, 24, 26, 28], "binhang": [69, 72], "binomi": 75, "black": 76, "black_respons": 76, "blank": [56, 82], "bleu": [31, 74, 76, 89, 92, 94], "bleusimilar": 76, "blood": [56, 82], "blue": [2, 31, 74, 76], "bobbi": [69, 72], "bodi": 85, "boi": 85, "bolukbasi": 5, "bommasani": [69, 72], "bool": [2, 8, 14, 20, 22, 24, 26, 28, 31, 65, 69, 72, 74, 76, 85, 87], "boolean": [2, 8, 31, 75], "bordia": [67, 69, 85, 89, 92], "both": [69, 82, 85], "bouchard": [31, 43, 76, 85, 89, 92], "bowman": [67, 69, 85, 89, 92], "branch": 90, "bring": [91, 92], "brother": 85, "build": 90, "built": 90, "bulathwela": 69, "by_prompt": 72, "byop": [91, 92], "c": [14, 20, 22, 24, 26, 74, 85], "calcuat": 85, "calcul": [2, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 74, 75, 76, 85, 87], "call": [65, 72, 74], "can": [43, 74, 76, 82, 83, 85, 87, 90, 91, 92, 94], "cap": 82, "captur": [91, 92], "cardigan": [56, 82], "cardin": 82, "care": [56, 82], "carlo": [14, 28], "case": [31, 43, 74, 75, 82, 85, 87, 91, 94], "castl": [56, 82], "categori": [5, 43, 60, 65, 67, 69, 85, 89, 92, 94], "cb": 85, "cbeleu": 74, "cbleu": [74, 76], "cc": [74, 76], "cd": 90, "cdg": 76, "cdot": [74, 76, 82, 85], "ce": [69, 72], "cell": [74, 76], "center": [76, 85], "certifi": [14, 28], "cf_gener": 94, "cf_result": 94, "cg": 94, "chain": [2, 8, 10], "challeng": [75, 83, 87], "chang": [74, 90], "character": 82, "chatgpt": 56, "chatmistralai": [74, 76, 85, 87], "chatterji": [69, 72], "chatvertexai": 94, "chaudhari": [69, 72], "check": [8, 74, 76, 87, 88, 91], "check_every_n_second": [74, 76, 83, 85, 87, 94], "check_ftu": 8, "checkout": 90, "chi": [69, 72], "choi": 72, "choic": [74, 76, 83, 85, 87], "choos": 91, "christian": [69, 72], "christoph": [69, 72], "citep": [74, 76], "cla": 90, "class": [1, 2, 7, 8, 9, 10, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 81, 82, 85, 87, 94], "classif": [43, 65, 72, 76, 81, 85, 87, 89, 91, 92], "classifi": [2, 43, 69, 72, 74, 76, 87, 89, 92], "classification_metrics_demo": 75, "classificationmetr": 75, "classifierbenign_tox": 87, "clean": 74, "clear": 90, "clone": 90, "closer": [74, 76, 85, 87], "cm": [75, 94], "co": [39, 60, 67, 74, 76, 89, 92], "cob": [67, 74, 85], "code": [43, 60, 67, 74, 75, 76, 81, 82, 83, 85, 86, 87, 88, 94], "com": 90, "combin": 76, "come": 76, "commit": 90, "common": [5, 74, 76], "compar": [76, 82, 85], "comparison": [76, 82, 83], "compat": [8, 10, 83], "complet": [8, 10, 76, 85, 87, 94], "complianc": 90, "comprehens": [74, 91, 92], "comput": [2, 5, 14, 18, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 87, 89, 91, 92], "computation": [74, 87], "concept": 76, "concern": 82, "conda": 90, "condit": 67, "conduct": [74, 91, 92, 94], "confer": 56, "confid": 85, "confus": [18, 20, 22, 24, 26, 28], "consid": [74, 82, 85, 87, 90, 91, 92], "consider": 83, "consin": 76, "consist": 56, "construct": 76, "constructor": [2, 8, 10], "consult": 81, "contain": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 65, 69, 72, 75, 76, 82, 83, 85, 87], "content": [74, 83], "context": [67, 74, 76, 85, 87, 89, 92], "contribut": 81, "contributor": 91, "convent": [10, 94], "convers": 74, "cooccur": 85, "cooccurr": [69, 74, 94], "cooccurrencebiasmetr": 85, "corpu": [76, 85], "correspond": [8, 10, 56, 60, 72, 74, 75, 76, 82, 85, 87, 94], "cosgrov": [69, 72], "cosin": [31, 74, 76, 89, 92, 94], "cosinesimilar": 76, "cost": [4, 8, 10, 83], "count": [8, 10, 60, 76, 83, 85, 87, 94], "countefactu": 76, "counterfactu": [2, 74, 81, 82, 85, 89, 92], "counterfactual_data": 74, "counterfactual_metrics_demo": 76, "counterfactualgener": [2, 31, 74, 76, 94], "counterfactualmetr": [76, 94], "cpu": [2, 72, 74], "creat": [8, 18, 35, 48, 63, 76, 85, 87, 90], "create_prompt": [8, 76], "credenti": [74, 76, 83, 85, 87], "crfm": [5, 43, 60], "critic": [91, 92], "croug": [74, 76], "csb": [74, 76], "csp": [74, 76], "cuda": [2, 72, 74, 87, 94], "cup": [82, 85], "current": [2, 72, 74, 76], "custom": [8, 10, 43, 76], "custom_classifi": [43, 72, 76, 87], "custom_dict": [8, 76], "custom_list": [8, 76], "cv": [8, 90], "d": [69, 72, 74, 76], "dani": [31, 43], "data": [2, 8, 10, 65, 69, 72, 74, 75, 76, 83, 85, 86, 87, 88, 94], "datafram": [2, 74, 76, 83, 85, 87], "dataload": 76, "dataset": [10, 74, 75, 83], "daughter": 85, "decis": [89, 91, 92], "decodingtrust": 10, "deem": [74, 76, 87], "deepak": [69, 72], "deepli": 90, "def": [83, 86, 88], "default": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 39, 41, 43, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87], "defin": [43, 67, 72, 74, 76, 82, 85, 87, 94], "degener": 72, "degre": 85, "dei": [14, 20, 22, 24, 26], "delic": [56, 82], "demo": [81, 85, 92], "demograph": [43, 60, 67, 76, 85], "demographic_categori": 60, "demographic_group": 60, "demographic_group_word_list": [60, 67, 85], "demonstr": [74, 85], "denot": [74, 76, 82, 85, 87], "depend": 90, "deploy": [83, 90], "deployment_nam": [74, 76, 83, 85, 87], "deprec": [2, 8, 10, 74, 76, 83, 85, 87], "descript": 90, "design": [91, 92], "desir": [2, 74, 90], "detail": [74, 76, 82, 85, 87, 89, 90, 92], "detect": [14, 20, 22, 24, 26, 69], "detoxify_origin": [2, 72, 74, 87], "detoxify_unbias": [2, 72, 74, 87], "deviat": [56, 75, 82], "devic": [2, 72, 74, 87, 94], "df": 76, "df_evalu": [85, 87], "diagram": [89, 92], "dialogsum": 74, "dialogu": 81, "diana": [69, 72], "dict": [2, 8, 10, 14, 31, 56, 60, 65, 67, 69, 72, 74, 76, 82, 83, 85, 87], "dictinari": [67, 85], "dictionari": [2, 8, 10, 14, 31, 56, 60, 65, 67, 69, 72, 75, 76, 82, 83, 85, 87], "did": [8, 10, 85], "differ": [14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 74, 75, 76, 85], "dilara": [69, 72], "dimitri": [69, 72], "diptikalyan": [14, 20, 22, 24, 26], "dir": 90, "directori": 90, "discoveri": [20, 75, 89, 92], "discrimin": [76, 82], "discuss": 92, "dispar": [14, 20, 22, 24, 26, 28, 74, 75, 76, 89, 92], "displai": [89, 92], "dist": 85, "distanc": [37, 39, 41, 43, 74, 76, 85], "distinct": 82, "distribut": [43, 74, 76, 85], "dive": [56, 82], "diverg": 60, "do": [56, 82, 85, 94], "doc": [86, 90], "docs_src": 90, "doctor": 74, "document": [74, 76, 90], "doe": 85, "doesn": 76, "doi": 56, "don": [56, 82], "done": [8, 76], "dotenv": [74, 76, 83, 85, 87], "down": 85, "download": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88], "drawn": [74, 76], "dream": [56, 82], "drew": [69, 72], "dry": [76, 85], "due": [74, 76, 87], "duplicated_prompt": 94, "dure": 85, "durmu": [69, 72], "dx": 56, "dy": [65, 72, 85, 87], "dylan": [31, 43], "dynabench": [72, 87], "e": [14, 20, 22, 24, 26, 56, 74, 76, 82], "each": [5, 8, 10, 31, 37, 39, 41, 43, 56, 60, 67, 76, 82, 83, 85, 87, 94], "easi": 91, "easili": 94, "effect": [74, 76], "effort": 90, "either": [8, 74, 85], "elaps": 83, "element": [8, 56, 82], "els": 76, "em": [74, 85], "embed": 76, "emnlp": 10, "emot": 85, "empir": [74, 76, 85, 87], "emt": [74, 87], "enabl": [37, 39, 41, 56, 65, 72, 85], "end": [74, 75, 76, 82, 83, 85, 86, 87, 88], "ensembl": [72, 87], "ensur": [90, 91, 92], "env": [74, 76, 83, 85, 87], "environ": [74, 76, 85, 87, 90], "equal": [43, 60, 72, 76, 87], "equival": [8, 76], "eric": [69, 72], "error": [74, 76, 83, 85, 87, 94], "esin": [69, 72], "especi": [91, 92], "essenti": [89, 92], "estim": [8, 10, 74, 76, 83, 85, 87], "estimate_token_cost": [8, 10, 83], "estimated_cost": 83, "et": [5, 10, 14, 20, 22, 24, 26, 28, 31, 43, 56, 60, 69, 72, 75, 76, 82, 85, 87, 89, 92], "eta": 82, "etc": 5, "eval": 81, "evalaut": 76, "evalu": [2, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72, 74, 75, 76, 77, 78, 82, 89, 91, 92], "evaluate_against_neutr": [56, 82], "evaluate_metr": 87, "evaluate_pair_wis": 82, "evaluate_pairwis": [56, 82], "ever": [56, 82], "everi": [74, 76, 82], "everyth": 90, "exactli": [14, 20, 22, 24, 26, 28, 67, 75], "exai": 83, "exampl": [8, 10, 56, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93], "example_respons": [8, 10, 83], "exce": 83, "except": [2, 8, 10, 56, 74, 76, 82, 83, 85, 87], "exclud": 85, "execut": [74, 76, 78, 80, 83, 84, 85, 87, 93], "exist": 81, "expect": [65, 69, 72, 74, 85, 87, 89, 90, 92, 94], "expens": 83, "explor": 91, "export": 2, "export_result": [2, 74], "expos": 82, "express": [75, 87], "extens": [14, 20, 22, 24, 26, 65], "extent": 60, "f": [76, 83, 85, 86, 88], "fa": 88, "factor": 67, "fair": [8, 14, 20, 22, 24, 26, 31, 43, 56, 74, 75, 76, 82, 85, 87, 91, 94], "fairllm": [56, 75, 82], "faisal": [69, 72], "fall": [91, 92], "fals": [2, 14, 18, 20, 22, 24, 26, 28, 31, 65, 69, 72, 74, 75, 85, 87, 89, 92], "faster": [74, 83, 87], "father": 85, "featur": 90, "feldman": [14, 28, 75, 89, 92], "femal": [5, 8, 74, 76, 85, 94], "female_dict": 82, "female_rec_list": 82, "female_respons": 94, "female_word": 85, "feng": 56, "few": [31, 69, 76, 85], "fig": 76, "file": [2, 5, 74, 76, 78, 80, 83, 84, 85, 86, 87, 90, 93], "file_nam": [2, 74], "filter": [74, 76, 83, 85, 87], "filtered_prompt_count": 8, "filterwarn": 74, "final": [74, 85], "final_metr": 74, "find": [10, 90], "find_dotenv": [74, 76, 85, 87], "first": [65, 72, 76, 85, 94], "fix": 90, "float": [8, 10, 18, 20, 22, 24, 26, 28, 35, 37, 39, 41, 43, 48, 50, 52, 54, 60, 65, 67, 72, 76, 85, 87], "focu": [89, 91, 92], "folklor": [56, 82], "follow": [5, 60, 74, 75, 76, 82, 85, 87, 90, 94], "footer": 85, "fork": 90, "form": 87, "formal": 82, "format": [2, 56, 74, 76, 82, 90], "former": [74, 76, 82], "found": [76, 85], "four": [65, 76, 85], "frac": [74, 76, 82, 85, 87], "fraction": [65, 69, 72, 74, 85, 87, 89, 92, 94], "framework": [31, 43, 89, 91, 92], "frequenc": 85, "frieda": [69, 72], "friedler": [14, 28], "friendli": 74, "from": [2, 5, 10, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 78, 80, 82, 83, 84, 85, 87, 93, 94], "ftu": [8, 74], "ftu_satisfi": 8, "fuli": 56, "full": [8, 74, 75, 76, 82, 83, 85, 86, 87, 88, 89, 92], "function": [8, 10, 18, 35, 48, 63, 74, 83, 85], "further": 85, "g": [74, 76, 82, 85], "galleri": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88, 93], "galwai": [56, 82], "gamma": [74, 85], "ganguli": [69, 72], "gap": [52, 56, 82, 89, 91, 92], "garg": 5, "gehman": [10, 72, 87, 89, 92], "gemini": [74, 76, 85, 87, 94], "gender": [5, 8, 31, 60, 65, 67, 69, 76, 85, 94], "gener": [2, 31, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 74, 75, 79, 80, 81, 82, 86, 88, 91, 92], "generate_respons": [8, 10, 76, 83, 85, 87, 94], "gentleman": 85, "gentlemen": 85, "geq": [74, 85, 87], "get": [2, 8, 10, 56, 60, 74, 76, 82, 83, 85, 87, 91], "get_stereotype_scor": 65, "get_toxicity_scor": [72, 87], "getcwd": [74, 76, 83, 85, 87], "getenv": [74, 76, 83, 85, 87], "gh": 90, "ghani": [14, 20, 22, 24, 26], "girl": [56, 82, 85], "git": 90, "github": 90, "give": [56, 82, 85], "given": [8, 10, 74, 76, 82, 83, 85], "go": [74, 75, 76, 82, 83, 85, 86, 87, 88], "goal": [89, 92], "googl": [74, 76, 85, 87], "govern": [91, 92], "gpt": [8, 10, 83], "gpu": [2, 72, 74, 87, 94], "granddaught": 85, "grandfath": 85, "grandmoth": 85, "grandson": 85, "greater": [74, 76, 85, 87], "grid": 76, "ground": [14, 18, 20, 22, 24, 26, 28, 75], "group": [8, 14, 18, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 74, 75, 76, 82, 85, 87, 89, 92], "group1": 76, "group1_text": 76, "group2": 76, "group2_text": 76, "group_dict_list": [56, 82], "guha": [69, 72], "guid": [81, 91], "guidelin": 90, "gururangan": 72, "ha": [85, 87, 94], "had": 85, "hand": 85, "handl": [2, 8, 10, 74, 76, 83, 85, 87], "happier": [56, 82], "harm": 75, "hashimoto": [69, 72], "hat": [74, 76, 82, 85, 87], "hate": [72, 87], "have": [43, 67, 72, 74, 85, 87], "he": [8, 56, 76, 85], "head": [74, 76, 85, 87], "header": 85, "health": [8, 90], "hello": [86, 88], "helm": [5, 43, 60], "help": [8, 10, 76, 83, 85, 87, 90, 91], "henderson": [69, 72], "her": [8, 76, 85], "here": [74, 81, 85, 87, 94], "herein": [76, 87], "herself": 85, "hi": 85, "hill": [56, 82], "him": [8, 76, 85], "himself": 85, "hind": [14, 20, 22, 24, 26], "hinkson": [14, 20, 22, 24, 26], "hispan": [5, 76], "hispanic_respons": 76, "hoffman": [14, 20, 22, 24, 26], "holist": [69, 72], "hongyu": [69, 72], "hook": 90, "host": 90, "houd": [14, 20, 22, 24, 26], "hous": [56, 82], "how": [37, 39, 41, 43, 67, 76, 81, 85, 94], "howev": [91, 92], "http": [5, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 76, 85, 90], "huan": [31, 43], "huang": [31, 43, 69, 72, 76, 89, 92], "huaxiu": [69, 72], "hudson": [69, 72], "huggingfac": [39, 76], "human": 85, "i": [2, 8, 10, 28, 39, 41, 43, 56, 60, 65, 67, 69, 72, 74, 76, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94], "icard": [69, 72], "ident": [56, 74, 76, 82], "identifi": [8, 67, 69, 76], "ignor": [65, 72, 74], "ij": [74, 85, 87], "illustr": [76, 89, 92, 94], "impact": [14, 28], "implement": [18, 35, 48, 63, 74, 76, 85, 91], "import": [74, 75, 76, 82, 83, 85, 86, 87, 88, 94], "improv": [69, 90], "incit": 87, "includ": [2, 5, 8, 10, 31, 65, 69, 72, 75, 76, 82, 83, 85, 87, 89, 90, 91, 92], "increas": 76, "increasingli": [91, 92], "indexerror": [74, 76, 85, 87], "indic": [2, 8, 14, 20, 22, 24, 26, 28, 31, 43, 72, 74, 75, 76, 85, 87], "infinit": 67, "info": [85, 87], "inform": [4, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 67, 69, 72, 76, 82, 90, 91], "infti": 85, "inmemoryratelimit": [2, 8, 10, 74, 76, 83, 85, 87, 94], "input": [2, 43, 65, 72, 74, 76, 82, 87], "instal": [74, 76, 83, 85, 87, 90], "instanc": [75, 82], "instanti": [74, 76, 83, 85, 87], "instead": [2, 8, 10, 74, 76, 83, 85, 87, 89, 92, 94], "instruct": [74, 94], "insult": 87, "int": [2, 8, 10, 65, 72, 76, 83, 85, 87], "integr": 91, "intens": [74, 87], "intention": [85, 87], "interest": [81, 85], "interfac": 91, "interior": [56, 82], "intern": [91, 92], "interpret": [74, 76], "intersect": 82, "investag": [76, 85], "investig": [74, 85, 87], "invok": 4, "ipynb": [74, 75, 76, 82, 83, 85, 86, 87, 88], "issu": [87, 90], "itertool": 76, "its": 85, "itself": 85, "j": [74, 85, 87], "jaccard": [56, 82, 89, 92], "jack": [31, 43], "jacquelyn": [14, 20, 22, 24, 26], "jess": [14, 20, 22, 24, 26], "jiang": [31, 43], "jizhi": 56, "job": 85, "johann": [31, 43], "john": [14, 20, 22, 24, 26, 28], "join": [74, 76, 83, 85, 87], "json": [76, 83, 87], "jsonl": [83, 87], "jue": [69, 72], "jupyt": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88], "just": 85, "justin": [56, 82], "k": [14, 20, 22, 24, 26, 56, 82], "kalapriya": [14, 20, 22, 24, 26], "kannan": [14, 20, 22, 24, 26], "karthikeyan": [14, 20, 22, 24, 26], "kei": [8, 10, 65, 67, 69, 74, 76, 83, 85, 87], "kept": [85, 87], "keqin": 56, "kernel": [65, 72, 74, 76, 85, 87], "keshav": [69, 72], "key_": 76, "keys_": 76, "khattab": [69, 72], "kim": [69, 72], "kit": [14, 20, 22, 24, 26], "klu": [74, 76], "known": 76, "kohli": [31, 43], "koreeda": [69, 72], "koshiyama": 69, "kuester": [14, 20, 22, 24, 26], "kumar": [69, 72], "kuntal": [14, 20, 22, 24, 26], "kush": [14, 20, 22, 24, 26], "l": [41, 74, 76, 89, 92], "l6": [39, 76], "label": [14, 18, 20, 22, 24, 26, 28, 75, 76], "lack": 76, "ladhak": [69, 72], "ladi": 85, "lambda": 76, "langchain": [2, 8, 10, 74, 76, 83, 85, 87, 94], "langchain_cor": [74, 76, 83, 85, 87, 94], "langchain_google_vertexai": [74, 76, 85, 87, 94], "langchain_llm": [2, 8, 10, 74, 76, 83, 85, 87, 94], "langchain_mistralai": [74, 76, 85, 87], "langchain_openai": [74, 76, 83, 85, 87], "langfair": [74, 75, 76, 82, 83, 85, 86, 87, 88, 89, 90], "languag": [31, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 75, 76, 82, 85, 87, 89, 91, 92], "larg": [31, 43, 56, 65, 69, 72, 74, 75, 76, 82, 85, 87, 89, 91, 92], "latest": [74, 76, 85, 87, 94], "latter": [43, 74, 76, 82], "launch": 87, "laurel": [69, 72], "lazi": [76, 85], "lc": [74, 76], "lead": [91, 92], "learn": [75, 86, 88], "least": [74, 85, 87], "lee": [69, 72], "legend": 76, "lego": [56, 82], "len": [8, 74, 76, 83, 87], "length": [8, 43, 56, 72, 74, 76, 82, 87], "leq": [74, 85, 87], "less": 90, "let": [74, 85, 87], "letter": 85, "level": [2, 31, 65, 67, 69, 72, 74, 75, 85, 87], "leverag": [2, 43, 72, 74, 76, 85, 87], "lexicon": [74, 85], "li": [69, 72], "liang": [60, 69, 72, 85, 87, 89, 92], "librari": [74, 76, 81, 83, 85, 87, 91, 92], "licens": 86, "like": [14, 18, 20, 22, 24, 26, 28, 39, 75, 76], "likelihood": [74, 85], "limit": [74, 76, 83, 85, 87, 94], "line": [74, 83, 87, 94], "link": 85, "lint": 90, "list": [2, 5, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 76, 81, 82, 83, 85, 87, 94], "list1": [48, 50, 52, 54], "list2": [48, 50, 52, 54], "literatur": [75, 76, 82, 85, 87], "live": 90, "llm": [2, 4, 8, 10, 39, 43, 50, 52, 54, 56, 65, 69, 72, 74, 75, 76, 82, 83, 85, 87, 91], "llmchain": [74, 76, 83, 85, 87], "load": [76, 83, 87], "load_dotenv": [74, 76, 83, 85, 87], "load_realtox": 76, "loc": 76, "locat": 90, "log": [74, 85], "log_": 85, "lohia": [14, 20, 22, 24, 26], "london": [14, 20, 22, 24, 26], "longest": [74, 76], "look": [56, 82], "loren": [14, 20, 22, 24, 26], "lot": 90, "loud": [56, 82], "love": [56, 82], "low": [85, 87], "lower": 76, "lucia": [69, 72], "lvert": [74, 76], "m": [74, 76, 83, 85, 87, 90], "m_kei": [74, 76, 85, 87], "maarten": 72, "machin": [75, 86, 88], "made": [56, 82], "mai": [20, 22, 24, 26, 28, 69, 72, 74, 76, 85, 87, 94], "main": [86, 88], "maini": [31, 43], "make": [90, 91], "male": [5, 8, 74, 76, 85, 94], "male_dict": 82, "male_rec_list": 82, "male_respons": 94, "male_word": 85, "man": [5, 8, 69, 72, 76, 85], "mani": [76, 83], "manual": 90, "map": [74, 82, 85, 87], "martino": [14, 20, 22, 24, 26], "mask": [2, 8, 31, 74, 76], "mathbb": [74, 76], "mathbf": [74, 76], "mathcal": [74, 76, 82, 85, 87], "matplotlib": 76, "matrix": [18, 20, 22, 24, 26, 28], "max": [56, 75, 82], "max_": [74, 85, 87], "max_bucket_s": [74, 76, 83, 85, 87, 94], "max_calls_per_min": [2, 8, 10, 74, 76, 83, 85, 87], "maximum": [65, 69, 72, 74, 85, 87, 89, 92, 94], "mb": [78, 80, 84, 93], "me": [56, 82, 85], "mean": [37, 39, 41, 43, 56, 60, 67, 76, 82, 85, 89, 92], "measur": [60, 67, 74, 85, 87, 91], "mehta": [14, 20, 22, 24, 26], "mem": [78, 80, 84, 93], "men": 85, "mention": [31, 37, 39, 41, 43, 56, 74, 76, 82, 85, 89, 92], "mert": [69, 72], "messag": 83, "metadata": [8, 10, 76, 83, 85, 87], "method": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 63, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 86, 87, 88], "metric": [2, 5, 81, 91], "metric_typ": [14, 75], "metric_valu": 85, "michael": [14, 20, 22, 24, 26, 28, 69, 72], "michihiro": [69, 72], "might": 90, "min": [56, 74, 75, 76, 82], "minilm": [39, 76], "minut": [83, 91], "mirac": [69, 72], "misinform": [54, 56, 82, 89, 92], "mislead": [91, 92], "mistral": [74, 76, 85, 87], "mistral_api_kei": [74, 76, 85, 87], "mistralai": [74, 76, 85, 87], "mitig": [14, 20, 22, 24, 26], "mockup": 90, "model": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93], "model_nam": [74, 76, 83, 85, 87, 94], "model_vers": [74, 76, 83, 85, 87], "modul": [0, 3, 6, 11, 12, 15, 16, 29, 32, 33, 44, 45, 46, 57, 58, 61, 70], "moeller": [14, 28], "mojsilov": [14, 20, 22, 24, 26], "monind": [14, 20, 22, 24, 26], "more": [14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 67, 69, 72, 74, 76, 82, 83, 85, 87, 89, 92], "most": [5, 85], "mother": 85, "much": 90, "multi": 94, "multipli": 85, "must": [8, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 60, 67, 72, 75, 76, 85, 87, 94], "my": 85, "myself": 85, "n": [74, 75, 76, 78, 80, 82, 85, 87], "n19": 85, "nagar": [14, 20, 22, 24, 26], "name": [2, 5, 8, 10, 14, 31, 56, 69, 74, 76, 83, 90], "narayanan": [69, 72], "natesan": [14, 20, 22, 24, 26], "nathan": [69, 72], "natural_language_api": 43, "nava": [69, 72], "navig": 90, "ncol": 76, "necessari": [74, 76, 83, 85, 87], "need": [18, 35, 48, 63, 74, 85, 90, 91, 92], "neel": [69, 72], "neg": [14, 20, 22, 24, 26, 28, 43, 75, 76, 85, 89, 92], "neil": 74, "neil_code_dialogsum_train": 74, "nephew": 85, "neq": [82, 85], "neural": 72, "neutral": [8, 31, 76, 82], "neutral_dict": [56, 82], "neutralize_token": [2, 8, 31, 74, 76], "never": [56, 82], "new": [18, 35, 48, 63, 81, 90, 94], "newman": [69, 72], "next": 76, "niec": 85, "niladri": [69, 72], "nlp": 76, "nltk": 85, "noah": 72, "non": [76, 83, 85, 87], "non_completion_r": [8, 10], "none": [2, 8, 10, 14, 18, 22, 24, 26, 28, 31, 39, 43, 60, 65, 67, 69, 72, 74, 76, 83, 85, 87, 89, 92], "nor": 85, "note": [8, 10, 74, 76, 82, 83, 85, 87, 94], "notebook": [74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 91, 92, 93], "notin": 85, "now": 85, "np": 75, "number": [8, 10, 60, 74, 76, 83, 85, 87], "numpi": 75, "o": [74, 76, 83, 85, 86, 87, 88], "object": [2, 8, 10, 14, 31, 43, 56, 60, 65, 67, 69, 72, 74, 76, 82, 83, 85, 87, 94], "obtain": 76, "occur": [8, 60, 76], "occurr": [60, 67, 74, 89, 92], "off": [56, 82, 85], "offend": [76, 87], "offens": 87, "offer": [75, 76, 82, 85, 87, 89, 92], "often": [85, 91, 92], "omar": [69, 72], "omiss": [24, 75, 89, 92], "onc": [60, 85], "one": [14, 74, 85, 87], "ones": 81, "onli": [8, 10, 28, 43, 65, 69, 72, 76, 83, 85, 87], "open": [74, 83, 87, 90], "openai": [8, 10, 74, 76, 85, 87], "openai_api_cal": 83, "openai_api_kei": [74, 76, 83, 85, 87], "openai_api_typ": [74, 76, 83, 85, 87], "openai_api_vers": [74, 76, 83, 85, 87], "option": [2, 8, 10, 74, 76, 82, 83, 85], "order": [82, 85, 86, 88], "org": [5, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 65, 67, 69, 72, 85], "origin": [76, 82, 85, 90], "orr": [69, 72], "other": [2, 8, 10, 76, 85, 86, 87, 88, 90], "otherwis": [65, 69, 72, 76, 85], "our": [74, 83, 85, 87, 89, 90, 91, 92], "ourselv": 85, "out": [56, 82, 85, 91], "output": [2, 31, 37, 39, 41, 43, 60, 65, 67, 69, 72, 74, 76, 85, 87, 91, 92, 94], "output_df": 76, "over": [37, 39, 41, 43, 60, 65, 67, 69, 72, 74, 76, 85, 87], "overlap": 82, "own": [76, 85, 87, 91, 92], "p": [74, 75, 76, 85], "packag": [43, 60, 76], "page": [8, 54, 56, 82, 89, 90, 92], "pair": [31, 37, 39, 41, 43, 69, 74, 76, 82], "pairwis": [14, 37, 39, 41, 43, 52, 56, 76, 82, 89, 92], "panda": [74, 76, 83, 85, 87], "paper": [82, 85, 91], "paramet": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87], "pariti": [20, 22, 24, 26, 28, 43, 76, 89, 92], "pars": [8, 76, 83, 87], "parse_text": [8, 76], "parti": 43, "particular": [74, 76, 85, 87], "pass": [2, 8, 10, 74, 76, 83, 85, 87], "path": [74, 83, 86, 87, 88], "pd": [74, 76, 83, 85, 87], "pdf": [56, 65, 85], "pedro": [14, 20, 22, 24, 26], "pejor": 87, "per": [8, 10, 65, 69, 72, 83, 85, 87], "perci": [69, 72], "perfect": [56, 82], "perform": [89, 91, 92], "person": [74, 75], "peter": [69, 72], "photograph": [56, 82], "pi": 85, "pip": [74, 76, 83, 85, 87, 94], "place": 4, "placehold": 28, "plai": 85, "playbook": [76, 82, 85, 87, 89, 92], "pleas": [81, 87, 90, 94], "plot": 76, "plt": 76, "po": [31, 43, 76], "poetri": 90, "popul": [74, 76, 83, 85, 87], "pose": 82, "posit": [14, 22, 24, 26, 28, 75, 76, 89, 92], "possibl": [82, 85, 89, 90, 91, 92], "practic": [74, 75, 82, 91, 92], "practition": [89, 92], "prag": [56, 82], "pranai": [14, 20, 22, 24, 26], "prasanna": [14, 20, 22, 24, 26], "pre": [74, 76, 82, 85, 87, 90], "preced": [43, 60, 67, 72, 76, 85, 87], "predict": [2, 14, 18, 20, 22, 24, 26, 28, 43, 72, 74, 75, 76, 85, 87, 89, 92], "prefer": [41, 76], "present": [65, 75], "preval": [28, 75, 89, 92], "prevent": [65, 72, 85, 87], "preview": 85, "print": [2, 74, 76, 83, 85, 86, 88], "print_result": [2, 74], "pro": [74, 76, 85, 87, 94], "probabl": [65, 67, 69, 72, 74, 85, 87, 89, 92, 94], "problem": 90, "problemat": 74, "proceed": 56, "process": [8, 10, 74, 76, 83, 85, 87, 94], "proctect": 76, "profess": [5, 60, 65, 67, 85], "professio": 85, "project": 90, "prompt": [2, 8, 10, 56, 65, 69, 72, 74, 76, 82, 83, 85, 87, 89, 91, 92, 94], "properli": 90, "propmpt": [85, 87], "proport": [74, 85, 87], "propos": 85, "protect": [8, 31, 37, 39, 41, 43, 56, 67, 74, 75, 76, 82, 85, 89, 92], "provid": [2, 8, 10, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 76, 83, 85, 87], "psi": 82, "punit": [14, 75], "push": 90, "pushmeet": [31, 43], "put": 85, "py": [74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 93], "pypi": 94, "pyplot": 76, "python": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88, 91, 92], "qian": [69, 72], "quad": [74, 76], "quick": [76, 85], "r": [14, 20, 22, 24, 26, 67, 69, 74, 76, 82, 83, 87], "r4": [72, 87], "r_i": [74, 76], "race": [5, 8, 31, 65, 69, 76, 85], "race_col": 76, "race_combin": 76, "race_eval_df": 76, "race_prompt": 76, "race_word": 76, "rachel": [14, 20, 22, 24, 26], "rae": [31, 43], "rai": [31, 43], "rais": [2, 8, 10, 74, 76, 83, 85, 87], "ramamurthi": [14, 20, 22, 24, 26], "random": 75, "rang": [56, 75, 76, 82, 83, 85, 87], "rank": [52, 56, 82, 89, 92], "rankmatch_i": 82, "rate": [8, 10, 20, 22, 24, 26, 28, 67, 74, 75, 76, 83, 85, 87, 89, 92, 94], "rate_limit": [74, 76, 83, 85, 87, 94], "ratelimiterror": 83, "rather": [2, 8, 10, 74, 76, 83, 85, 87], "ratio": [14, 18, 20, 22, 24, 26, 28, 67, 75, 82, 85], "rayid": [14, 20, 22, 24, 26], "re": [81, 90], "read": [74, 83, 85, 87, 91], "readi": 90, "real": [91, 92], "realtoxicityprompt": [72, 83, 87], "rec_lists1": [56, 82], "rec_lists2": [56, 82], "receiv": 85, "recommend": [18, 39, 65, 69, 72, 75, 76, 81, 85, 89, 91, 92, 94], "recommendation_metrics_demo": 82, "recommendationmetr": 82, "recreat": 76, "recsi": 56, "reduc": [31, 43, 67, 69, 85, 87], "ref": [74, 85], "refer": [5, 8, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 56, 60, 67, 69, 72, 74, 76, 82, 85, 87, 89, 92], "reflect": [82, 85, 91, 92], "refus": [74, 76, 85, 87], "regard": [91, 92], "rel": [67, 74, 76, 85], "relat": [4, 8], "relative_word": 85, "relativecooccur": 85, "relativecount": 85, "relev": [2, 8, 10, 89, 90, 92], "religion": [65, 85], "remov": [14, 28, 76], "ren": [69, 72], "replac": [8, 74, 75, 76, 83, 85, 87], "repo_path": [74, 76, 83, 85, 87], "repositori": [90, 92], "repres": [91, 92], "represent": [14, 60, 75], "reproduc": 90, "request": 83, "requests_per_second": [74, 76, 83, 85, 87, 94], "requir": [74, 76, 85, 87], "research": [67, 91], "resource_path": [83, 87], "respect": [14, 22, 24, 26, 28, 60, 75, 76, 82, 85], "respons": [2, 8, 10, 31, 60, 63, 65, 67, 69, 72, 74, 76, 82], "response_example_list": 83, "response_generator_demo": 83, "response_list": 85, "response_sample_s": [8, 10, 83], "responsegener": [8, 81, 85, 87, 94], "restart": [74, 76, 85, 87], "result": [2, 31, 54, 56, 65, 69, 72, 74, 76, 82, 85, 87, 89, 92, 94], "return": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87], "return_data": [2, 31, 65, 69, 72, 74, 76, 85, 87, 94], "return_df": [65, 87], "rg": [83, 85, 87, 94], "rg_limit": 83, "richard": [14, 20, 22, 24, 26], "right": 91, "rishi": [69, 72], "risk": [75, 82, 91, 92, 94], "rm": 82, "robert": [31, 43], "roberta": [72, 87], "rodolfa": [14, 20, 22, 24, 26], "role": [83, 85], "rong": [69, 72], "rotat": 76, "roug": [41, 74, 76, 89, 92], "rouge_metr": [41, 76], "rougel": [2, 31, 74, 76, 94], "rougelsimilar": 76, "rougelsum": [41, 76], "round": 83, "row": 76, "ruff": 90, "run": [74, 76, 83, 85, 87, 90], "runnabl": [74, 76, 83, 85, 87], "rvert": [74, 76], "ryan": [69, 72], "r\u00e9": [69, 72], "sa": [74, 85], "saha": [14, 20, 22, 24, 26], "sahan": 69, "saleiro": [14, 20, 22, 24, 26, 75, 89, 92], "same": [31, 37, 39, 41, 43, 56, 76, 82, 85], "sameep": [14, 20, 22, 24, 26], "sampl": [74, 76, 82, 85, 87, 94], "sample_s": 75, "samuel": [14, 20, 22, 24, 26, 67, 69, 72], "sang": [69, 72], "santhanam": [69, 72], "santurkar": [69, 72], "sap": 72, "satisfi": [8, 74, 82], "sattigeri": [14, 20, 22, 24, 26], "save": 74, "scatter": 76, "scenario": [91, 92], "scheidegg": [14, 28], "scm": 85, "score": [2, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 76, 82, 87, 89, 92], "screenshot": 90, "seamless": 91, "search": [54, 56, 82, 89, 92], "second": 85, "section": [76, 85], "section4": 87, "see": [10, 14, 20, 22, 24, 26, 28, 31, 39, 43, 67, 69, 76, 90], "seema": [14, 20, 22, 24, 26], "select": [41, 60, 67, 76, 85, 89, 92], "self": [10, 74, 76, 83, 85, 87], "sen": [31, 43], "sensit": 76, "sentenc": [39, 41, 74, 76, 85], "sentence_transform": 76, "sentencetransform": 76, "sentiment": [31, 43, 74, 76, 85, 89, 92, 94], "sentimentbia": 76, "separ": [76, 85], "septemb": 56, "serp": [56, 82], "serv": [18, 35, 48, 63], "set": [2, 10, 43, 65, 72, 74, 76, 82, 83, 85, 87], "set_xlabel": 76, "set_xtick": 76, "set_xticklabel": 76, "set_ylabel": 76, "sever": [89, 92], "sf": [74, 85], "shake": [56, 82], "shape": [56, 82], "she": [8, 76, 85], "shibani": [69, 72], "shikha": [67, 69], "short": [91, 92], "should": [8, 56, 65, 69, 72, 74, 75, 76, 82, 85, 87, 89, 92, 94], "show": [76, 85], "shown": 90, "sign": 90, "signifi": 85, "significantli": 83, "sim": [74, 76], "similar": [37, 39, 41, 50, 56, 74, 75, 76, 82, 89, 92, 94], "similarity_valu": 76, "simir": [74, 76], "simpli": 85, "simplic": 85, "simul": 75, "sinc": 85, "sing": [56, 82], "singh": [14, 20, 22, 24, 26], "singl": [65, 69, 72, 85], "sister": 85, "size": [65, 72, 75, 85, 87], "slur": 87, "sm": [74, 76, 85, 94], "small": 74, "smith": 72, "so": [85, 90, 94], "soar": 69, "social": [37, 39, 41, 76, 85, 87], "softwar": 90, "some": [74, 76, 85, 87, 90], "son": 85, "soon": 76, "sorel": [14, 28], "sorri": 76, "sort_model": [39, 76], "sort_valu": 74, "sourc": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88, 90], "soylu": [69, 72], "sp": [74, 85], "space": [39, 56, 82], "specif": [5, 82, 84, 87, 89, 91, 92, 93], "specifi": [2, 8, 10, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87], "speech": [72, 87], "speed": 94, "sphinx": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88], "split": [74, 76, 83, 85, 86, 87, 88], "sponsor": 90, "st": [74, 85], "standard": [56, 75, 82], "stanford": [5, 43, 60], "stanforth": [31, 43], "start": [83, 91], "state": [91, 92], "static": [18, 20, 22, 24, 26, 28, 91, 92], "step": [60, 74, 85, 87, 90, 94], "stephani": [14, 20, 22, 24, 26], "stereo_result": 94, "stereotyp": [2, 74, 81, 89, 91, 92], "stereotype_data": [74, 85], "stereotype_metrics_demo": 85, "stereotype_score_gend": 74, "stereotype_word_list": [60, 67, 85], "stereotypeclassifi": 85, "stereotypemetr": [85, 94], "stereotypicalassoci": 85, "steven": [14, 20, 22, 24, 26], "stop": [83, 85], "storag": 4, "store": 74, "stori": [56, 82], "str": [2, 8, 10, 14, 39, 60, 65, 67, 72, 74, 76, 82, 83, 85, 87], "streamlin": 94, "stress": 85, "strict": [43, 76, 89, 92], "string": [2, 8, 10, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 76, 82, 83, 85, 87], "strong": [43, 76], "style": [56, 82], "subplot": 76, "subsequ": [74, 76], "subset": [69, 72, 87, 89, 92], "subset_prompt": [8, 76], "substanti": 76, "substitut": [8, 37, 39, 41, 76], "suchin": 72, "suffici": [91, 92], "suit": [89, 92], "sum": 76, "sum_": [74, 76, 82, 85, 87], "summar": [81, 91, 92, 94], "support": [2, 31, 69, 74, 90], "suppress": [74, 76, 83, 85, 87], "suppressed_except": [2, 8, 10, 74, 76, 83, 85, 87], "suresh": [14, 28], "surya": [69, 72], "suzgun": [69, 72], "sy": [74, 76, 83, 85, 86, 87, 88], "symmetri": 82, "sync_respons": 83, "synchon": 83, "system": [8, 10, 56, 76, 83, 85, 87, 91, 92], "system_prompt": [8, 10, 76, 83, 85, 87], "t": [14, 20, 22, 24, 26, 56, 74, 76, 82, 85, 87], "tail": 76, "tailor": [91, 92], "take": [43, 60, 67, 72, 74, 76, 85, 86, 87, 88, 90], "target": [43, 60, 67, 72, 75, 85, 87], "target_categori": [60, 67, 85], "target_word": 85, "tatsunori": [69, 72], "tau": [74, 76, 85, 87], "team": [56, 82], "technic": [76, 82, 85, 87, 89, 92], "temperatur": [2, 8, 10, 74, 76, 83, 85, 87, 94], "templat": [18, 35, 48, 63], "term": [60, 85], "test": [74, 76, 84, 86, 90, 91, 92, 93], "text": [2, 8, 31, 37, 39, 41, 43, 60, 65, 69, 72, 74, 76, 82, 83, 85, 87, 91, 92, 94], "text_list": 76, "texts1": [31, 35, 37, 39, 41, 43, 76, 94], "texts2": [31, 35, 37, 39, 41, 43, 76, 94], "tf": [74, 87], "than": [2, 8, 10, 74, 76, 83, 85, 87], "thank": 90, "thei": [8, 56, 82, 85, 87], "theirs": 85, "them": 85, "themselv": 85, "thi": [2, 5, 8, 10, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 50, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87, 90, 91, 92], "think": [56, 82], "third": 43, "thoma": [69, 72], "those": [8, 56, 65, 74, 85], "threat": 87, "three": [74, 76, 85, 87], "thresh": [43, 76], "threshold": [43, 65, 72, 74, 76, 85, 87], "thrive": 90, "through": [8, 74, 76, 82, 85, 89, 92], "tianyi": [69, 72], "tiktoken_model_nam": [8, 10, 83], "tild": 85, "time": [60, 74, 85, 87, 90], "tm": 94, "togeth": [56, 82], "token": [4, 8, 10, 74, 76, 83, 85], "toni": [69, 72], "too": [65, 72, 83, 85, 87], "toolkit": [14, 20, 22, 24, 26], "top": [74, 85, 87], "topic": [76, 87], "torch": [2, 72, 74, 87, 94], "total": [8, 10, 74, 78, 80, 83, 84, 85, 93], "toward": 69, "tox_result": 94, "toxic": [2, 10, 74, 81, 85, 89, 91, 92], "toxic_threshold": [72, 87], "toxicity_data": 74, "toxicity_devic": [2, 74, 94], "toxicity_metrics_demo": 87, "toxicity_respons": 87, "toxicitymetr": [87, 94], "toxigen": [72, 87], "tp": [74, 87], "tradit": 75, "train": [74, 76, 85, 86, 87, 88], "transform": [39, 74, 76], "trigger": 83, "true": [2, 8, 31, 65, 74, 75, 76, 85, 87, 91, 92, 94], "truth": [14, 18, 20, 22, 24, 26, 28, 75], "try": [83, 91], "tsipra": [69, 72], "tupl": [2, 8, 10, 74, 76, 82, 83, 85, 87], "turbo": 83, "tvd": [74, 85], "two": [8, 10, 14, 20, 22, 24, 26, 28, 37, 39, 41, 43, 50, 52, 54, 56, 65, 67, 69, 74, 75, 76, 82, 83, 85, 87, 90, 94], "txt": [2, 74], "type": [2, 8, 10, 14, 18, 20, 22, 24, 26, 28, 31, 35, 37, 39, 41, 43, 48, 50, 52, 54, 56, 60, 65, 67, 69, 72, 85], "typic": [91, 92], "u": [74, 76, 85, 90], "unabl": [2, 8, 10, 74, 76, 83, 85, 87], "unawar": [76, 82, 89, 92], "unawarenss": 8, "uncl": 85, "uncom": [74, 94], "under": 85, "understand": [14, 20, 22, 24, 26, 90], "undesir": 76, "unfair": 82, "uniform": [74, 76, 85], "union": [35, 82], "uniqu": [14, 20, 22, 24, 26, 28, 75, 91], "unseen": [86, 88], "until": 85, "unwant": [14, 20, 22, 24, 26], "up": [85, 94], "updat": [74, 85], "upon": 90, "upper": 76, "url": [14, 20, 22, 24, 26, 28, 31, 43, 56, 67, 69, 72], "us": [2, 8, 10, 31, 39, 41, 43, 56, 60, 65, 67, 72, 74, 75, 76, 81, 82, 83, 85, 87, 90, 91], "usag": [87, 90], "usd": 83, "user": [2, 8, 10, 18, 20, 22, 24, 26, 28, 35, 43, 48, 63, 72, 74, 75, 76, 82, 83, 85, 87, 91, 92, 94], "util": 76, "utilis": 5, "v": [74, 76, 82, 85], "v2": [39, 76], "v_1": 82, "v_2": 82, "vader": [43, 76], "valid": [86, 88], "valu": [2, 10, 14, 18, 20, 22, 24, 26, 28, 31, 52, 54, 56, 60, 65, 67, 69, 72, 74, 75, 76, 82, 85, 87], "valueerror": [74, 76, 83, 85, 87], "variat": [37, 39, 41, 74, 85], "variou": [85, 91, 92], "varshnei": [14, 20, 22, 24, 26], "vector": [39, 87], "venkatasubramanian": [14, 28], "venv": [90, 94], "veri": 85, "version": [86, 88, 94], "versu": [74, 85], "vertexai": [74, 76, 85, 87], "via": [31, 43, 56, 75, 82, 90], "view": [85, 91], "violenc": 87, "virtual": 90, "vishal": [31, 43], "vishrav": [69, 72], "w": [67, 74, 85], "w_j": 85, "w_k": 85, "wa": [76, 85], "wai": [74, 76, 82, 85], "wang": [56, 69, 72], "want": 76, "warn": 74, "wasserstein": [43, 74, 76], "we": [56, 60, 74, 76, 82, 83, 85, 87, 90, 94], "weak": [43, 76, 89, 92], "week": 85, "weight": [67, 85], "welbl": [31, 43], "welcom": 90, "wenji": 56, "were": [65, 69, 72, 74, 85, 87], "what": [8, 56, 76, 82, 85], "when": [8, 10, 18, 35, 39, 48, 63, 67, 74, 76, 82, 83, 85, 87, 90], "where": [74, 76, 82, 85, 90, 91, 92], "whether": [2, 8, 14, 20, 22, 24, 26, 28, 31, 37, 39, 41, 43, 65, 69, 72, 75, 76, 85, 87], "which": [2, 8, 10, 39, 41, 60, 65, 67, 69, 72, 74, 75, 76, 82, 83, 85, 87, 91, 92], "while": 85, "white": [5, 76], "white_respons": 76, "who": 85, "whom": 85, "why": [85, 90], "wildest": [56, 82], "william": [69, 72], "window": [67, 85], "wise": [41, 76, 86, 88], "wish": 85, "within": [31, 37, 39, 41, 43, 85], "without": [91, 92], "woman": [5, 8, 76, 85], "women": 85, "word": [5, 8, 60, 67, 69, 74, 76, 85, 89, 92], "word_level": [67, 85], "work": 90, "workflow": 91, "world": [86, 88, 91, 92], "would": 90, "write": 85, "wu": [69, 72], "x": [74, 76, 82, 85], "x_": 76, "x_1": [74, 76, 82], "x_i": [74, 76, 82], "x_n": [74, 76, 82], "xiangnan": 56, "xie": [69, 72], "xrightarrow": [74, 76, 85, 87], "xuechen": [69, 72], "y": [74, 76, 85, 87], "y_i": [74, 76], "y_pred": [14, 18, 20, 22, 24, 26, 28, 75], "y_true": [14, 18, 20, 22, 24, 26, 28, 75], "yan": [69, 72], "yang": 56, "yao": [69, 72], "yasunaga": [69, 72], "yejin": 72, "yian": [69, 72], "yifan": [69, 72], "yogatama": [31, 43], "you": [8, 10, 56, 74, 76, 81, 82, 83, 85, 87, 90, 91], "your": [74, 76, 83, 85, 87, 90, 91, 92], "yourself": 85, "yourselv": 85, "yuan": [69, 72], "yuhuai": [69, 72], "yuhui": [69, 72], "yuksekgonul": [69, 72], "yunfeng": [14, 20, 22, 24, 26], "yuta": [69, 72], "yyi": 88, "zekun": [69, 85, 89, 92], "zelikman": [69, 72], "zero": 85, "zhang": [14, 20, 22, 24, 26, 31, 43, 56, 69, 72, 82, 89, 92], "zheng": [69, 72], "zip": [74, 75, 76, 81, 82, 83, 85, 86, 87, 88]}, "titles": ["langfair.auto", "langfair.auto.auto", "langfair.auto.auto.AutoEval", "langfair.constants", "langfair.constants.cost_data", "langfair.constants.word_lists", "langfair.generator", "langfair.generator.counterfactual", "langfair.generator.counterfactual.CounterfactualGenerator", "langfair.generator.generator", "langfair.generator.generator.ResponseGenerator", "langfair.metrics", "langfair.metrics.classification", "langfair.metrics.classification.classification", "langfair.metrics.classification.classification.ClassificationMetrics", "langfair.metrics.classification.metrics", "langfair.metrics.classification.metrics.baseclass", "langfair.metrics.classification.metrics.baseclass.metrics", "langfair.metrics.classification.metrics.baseclass.metrics.Metric", "langfair.metrics.classification.metrics.false_discovery", "langfair.metrics.classification.metrics.false_discovery.FalseDiscoveryRateParity", "langfair.metrics.classification.metrics.false_negative", "langfair.metrics.classification.metrics.false_negative.FalseNegativeRateParity", "langfair.metrics.classification.metrics.false_omission", "langfair.metrics.classification.metrics.false_omission.FalseOmissionRateParity", "langfair.metrics.classification.metrics.false_positive", "langfair.metrics.classification.metrics.false_positive.FalsePositiveRateParity", "langfair.metrics.classification.metrics.predicted_prevalence", "langfair.metrics.classification.metrics.predicted_prevalence.PredictedPrevalenceRateParity", "langfair.metrics.counterfactual", "langfair.metrics.counterfactual.counterfactual", "langfair.metrics.counterfactual.counterfactual.CounterfactualMetrics", "langfair.metrics.counterfactual.metrics", "langfair.metrics.counterfactual.metrics.baseclass", "langfair.metrics.counterfactual.metrics.baseclass.metrics", "langfair.metrics.counterfactual.metrics.baseclass.metrics.Metric", "langfair.metrics.counterfactual.metrics.bleu", "langfair.metrics.counterfactual.metrics.bleu.BleuSimilarity", "langfair.metrics.counterfactual.metrics.cosine", "langfair.metrics.counterfactual.metrics.cosine.CosineSimilarity", "langfair.metrics.counterfactual.metrics.rougel", "langfair.metrics.counterfactual.metrics.rougel.RougelSimilarity", "langfair.metrics.counterfactual.metrics.sentimentbias", "langfair.metrics.counterfactual.metrics.sentimentbias.SentimentBias", "langfair.metrics.recommendation", "langfair.metrics.recommendation.metrics", "langfair.metrics.recommendation.metrics.baseclass", "langfair.metrics.recommendation.metrics.baseclass.metrics", "langfair.metrics.recommendation.metrics.baseclass.metrics.Metric", "langfair.metrics.recommendation.metrics.jaccard", "langfair.metrics.recommendation.metrics.jaccard.JaccardSimilarity", "langfair.metrics.recommendation.metrics.prag", "langfair.metrics.recommendation.metrics.prag.PRAG", "langfair.metrics.recommendation.metrics.serp", "langfair.metrics.recommendation.metrics.serp.SERP", "langfair.metrics.recommendation.recommendation", "langfair.metrics.recommendation.recommendation.RecommendationMetrics", "langfair.metrics.stereotype", "langfair.metrics.stereotype.metrics", "langfair.metrics.stereotype.metrics.associations", "langfair.metrics.stereotype.metrics.associations.StereotypicalAssociations", "langfair.metrics.stereotype.metrics.baseclass", "langfair.metrics.stereotype.metrics.baseclass.metrics", "langfair.metrics.stereotype.metrics.baseclass.metrics.Metric", "langfair.metrics.stereotype.metrics.classifier", "langfair.metrics.stereotype.metrics.classifier.StereotypeClassifier", "langfair.metrics.stereotype.metrics.cooccurrence", "langfair.metrics.stereotype.metrics.cooccurrence.CooccurrenceBiasMetric", "langfair.metrics.stereotype.stereotype", "langfair.metrics.stereotype.stereotype.StereotypeMetrics", "langfair.metrics.toxicity", "langfair.metrics.toxicity.toxicity", "langfair.metrics.toxicity.toxicity.ToxicityMetrics", "API", "Auto Eval Demo - Dialogue Summarization", "Classification Metrics", "Counterfactual Metrics", "&lt;no title&gt;", "Computation times", "&lt;no title&gt;", "Computation times", "Example Notebooks", "Recommendation Metrics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ResponseGenerator</span></code> Class", "Computation times", "Stereotype Assessment Metrics", "Basics &amp; Model Specification of <cite>AdversarialFairnessClassifier</cite>", "Toxicity Metrics", "Test Notebook", "Choosing Metrics", "Contributor Guide", "Welcome to LangFair\u2019s documentation!", "Overview", "Computation times", "Quickstart Guide"], "titleterms": {"": 91, "1": [75, 76, 82, 85, 87], "2": [75, 76, 82, 85, 87], "3": [76, 82, 85, 87], "4": [76, 85, 87], "adversarialfairnessclassifi": 86, "alreadi": [85, 87], "altern": 94, "an": [85, 89, 92], "api": 73, "approach": 94, "assess": [75, 76, 82, 85, 87, 92], "associ": [59, 60, 85], "asynchron": 83, "auto": [0, 1, 2, 74], "autoev": [2, 94], "autom": 94, "base": 85, "baseclass": [16, 17, 18, 33, 34, 35, 46, 47, 48, 61, 62, 63], "basic": 86, "bia": [85, 89, 92], "bleu": [36, 37], "bleusimilar": 37, "bug": 90, "calcul": 82, "case": [89, 92], "chat": 83, "choos": [89, 92], "class": 83, "classif": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 75], "classifi": [64, 65, 85], "classificationmetr": 14, "co": 85, "code": 90, "complet": 83, "comput": [78, 80, 84, 85, 93, 94], "constant": [3, 4, 5], "content": [76, 85, 87, 90, 91], "contribut": 90, "contributor": 90, "cooccurr": [66, 67, 85], "cooccurrencebiasmetr": 67, "cosin": [38, 39], "cosinesimilar": 39, "cost_data": 4, "counterfactu": [7, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 76, 94], "counterfactualgener": 8, "counterfactualmetr": 31, "creat": [83, 94], "dataset": [76, 85, 87], "definit": [74, 76, 82, 85, 87], "demo": [74, 76], "develop": 90, "dialogu": 74, "document": 91, "enhanc": 90, "environ": 94, "eval": 74, "evalu": [83, 85, 87, 94], "exampl": [81, 85, 94], "fair": [89, 92], "false_discoveri": [19, 20], "false_neg": [21, 22], "false_omiss": [23, 24], "false_posit": [25, 26], "falsediscoveryratepar": 20, "falsenegativeratepar": 22, "falseomissionratepar": 24, "falsepositiveratepar": 26, "featur": 91, "gener": [6, 7, 8, 9, 10, 76, 83, 85, 87, 94], "guid": [90, 94], "how": 90, "instal": 94, "introduct": [75, 76, 82, 85, 87], "jaccard": [49, 50], "jaccardsimilar": 50, "langfair": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 91, 92, 94], "level": 92, "licens": 90, "llm": [89, 92, 94], "metric": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 82, 85, 87, 89, 92, 94], "model": 86, "notebook": [81, 88], "occurr": 85, "openai": 83, "option": 94, "overview": 92, "prag": [51, 52], "predicted_preval": [27, 28], "predictedprevalenceratepar": 28, "pull": 90, "quickstart": 94, "recommend": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 82], "recommendationmetr": 56, "report": 90, "request": 90, "resourc": 91, "respons": [83, 85, 87, 94], "responsegener": [10, 83], "rougel": [40, 41], "rougelsimilar": 41, "score": 85, "semi": 94, "sentimentbia": [42, 43], "serp": [53, 54], "setup": 90, "skip": [85, 87], "specif": 86, "stereotyp": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 85, 94], "stereotypeclassifi": 65, "stereotypemetr": 69, "stereotypicalassoci": 60, "style": 90, "suggest": 90, "summar": 74, "support": [89, 92], "synchron": 83, "tabl": 90, "test": 88, "time": [78, 80, 83, 84, 93], "toxic": [70, 71, 72, 87, 94], "toxicitymetr": 72, "us": [89, 92, 94], "usag": 94, "v": 83, "virtual": 94, "welcom": 91, "why": [91, 92], "word_list": 5}})